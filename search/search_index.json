{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"architecture/","title":"\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"blog/","title":"\u535a\u5ba2","text":"<p>\u6765\u770b\u770b\u4e0b\u9762\u7684\u535a\u5ba2\u6587\u7ae0\u5427\uff01</p>"},{"location":"blog/2024/09/12/blechley-park-trip/","title":"Blectchley Park \u6e38\u8bb0","text":"<p>\u5e03\u83b1\u5207\u5229\u516c\u56ed\uff08Bletchley Park\uff09\u66fe\u662f\u8457\u540d\u6570\u5b66\u5bb6\u548c\u5bc6\u7801\u5b66\u5bb6\u827e\u4f26\u00b7\u56fe\u7075\uff08Alan Turing\uff09\u5de5\u4f5c\u548c\u7814\u7a76\u7684\u5730\u65b9\u3002\u5728\u7b2c\u4e8c\u6b21\u4e16\u754c\u5927\u6218\u671f\u95f4\uff0c\u56fe\u7075\u548c\u4ed6\u7684\u56e2\u961f\u5728\u8fd9\u91cc\u6210\u529f\u7834\u8bd1\u4e86\u7eb3\u7cb9\u5fb7\u56fd\u7684\u6069\u5c3c\u683c\u739b\u5bc6\u7801\uff0c\u4e3a\u76df\u519b\u7684\u80dc\u5229\u505a\u51fa\u4e86\u5de8\u5927\u8d21\u732e\u3002\u5982\u4eca\uff0c\u5e03\u83b1\u5207\u5229\u516c\u56ed\u5185\u8bbe\u6709\u82f1\u56fd\u56fd\u5bb6\u8ba1\u7b97\u673a\u535a\u7269\u9986\uff0c\u5c55\u793a\u4e86\u5fb7\u519b\u4f7f\u7528\u7684 Enigma \u52a0\u5bc6\u673a\u4ee5\u53ca\u56fe\u7075\u8bbe\u8ba1\u7684 Bombe \u89e3\u7801\u673a\u53ca\u5176\u4ed6\u8ba1\u7b97\u673a\u53f2\u4e0a\u7684\u91cd\u8981\u6210\u5c31\u3002\u8fd9\u4e00\u5386\u53f2\u9057\u5740\u89c1\u8bc1\u4e86\u82f1\u56fd\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u9886\u57df\u7684\u91cd\u8981\u8d21\u732e\uff0c\u5438\u5f15\u7740\u4e16\u754c\u5404\u5730\u7684\u6e38\u5ba2\u524d\u6765\u53c2\u89c2\u548c\u4e86\u89e3\u8fd9\u6bb5\u8f89\u714c\u7684\u5386\u53f2\u3002</p> <p>2024 \u5e74 8 \u6708\uff0c\u6211\u6709\u5e78\u6765\u5230\u5e03\u83b1\u5207\u5229\u516c\u56ed\uff0c\u53c2\u89c2\u4e86\u82f1\u56fd\u56fd\u5bb6\u8ba1\u7b97\u673a\u535a\u7269\u9986\uff0c\u8fd9\u7bc7\u535a\u5ba2\u4e3b\u8981\u662f\u6d41\u6c34\u8d26\u5f0f\u7684\u8bb0\u5f55.</p> <p>Bletchley Park \u79bb Bletchley \u706b\u8f66\u7ad9\u5f88\u8fd1\uff0c\u6211\u5148\u5750\u516c\u4ea4\u8f66\u5230\u8fbe\u4e86 Milton-Keynes \u706b\u8f66\u7ad9\uff0c\u7136\u540e\u5728\u90a3\u91cc\u4e70\u706b\u8f66\u7968\u5750\u51e0\u7ad9\u5c31\u5230\u4e86\u3002 \u4e70\u706b\u8f66\u7968\u7684\u65f6\u5019\u51fa\u73b0\u4e86\u4e2a\u5c0f\u63d2\u66f2\uff0c\u6211\u7684\u94f6\u884c\u5361\u4e00\u76f4\u62d2\u4ed8\u5bfc\u81f4\u652f\u4ed8\u5931\u8d25\uff0c\u8fd8\u597d\u8eab\u4e0a\u7684\u96f6\u94b1\u6070\u597d\u591f\u7528\uff0c\u8981\u4e0d\u7136\u5c31\u53bb\u4e0d\u6210\u4e86\u3002</p> <p>Bletchley \u706b\u8f66\u7ad9\uff1a</p> <p></p> <p>Bletchley Park \u7684\u5916\u666f:</p> <p></p> <p>\u5165\u53e3\u7684\u544a\u793a\u724c\uff0c\u4e0a\u4e0b\u5206\u5272\u7ebf\u662f <code>BLETCHLEYPARK</code> \u7684\u83ab\u65af\u5bc6\u7801\uff0c\u4f46\u4e0d\u77e5\u9053\u53f3\u4fa7\u7684\u5b57\u6bcd\u662f\u4e0d\u662f\u5bc6\u7801</p> <p></p> <p>\u82f1\u56fd\u56fd\u5bb6\u8ba1\u7b97\u673a\u535a\u7269\u9986 National Museum of Computing \u5916\u666f</p> <p></p> <p>\u8fd9\u4e2a\u535a\u7269\u9986\u5b9e\u9645\u5c31\u662f\u4e00\u7cfb\u5217\u7684\u5e73\u623f\u8fde\u63a5\u8d77\u6765\u7684\uff0c\u4e5f\u6ca1\u6709\u90a3\u4e48\u6b63\u5f0f\u3002</p> <p>\u82f1\u56fd\u7684\u535a\u7269\u9986\u4e00\u822c\u90fd\u662f\u514d\u8d39\u7684\uff0c\u4f46\u662f\u8fd9\u91cc\u9700\u8981\u8d2d\u4e70\u95e8\u7968\uff0c\u6211\u4e70\u4e86\u95e8\u7968\uff0c\u4f46\u662f\u95e8\u53e3\u7684\u7ba1\u7406\u5458\u4f3c\u4e4e\u6ca1\u67e5</p> <p>\u535a\u7269\u9986\u7684 WiFi \u5bc6\u7801\u662f\u5fb7\u56fd\u7684\u53e6\u4e00\u4e2a\u5bc6\u7801\u673a Lorenz SZ40</p> <p></p> <p>Lorenz SZ40 \u5bc6\u7801\u673a\u4e5f\u662f\u8be5\u9986\u7684\u5c55\u54c1</p> <p></p> <p>Bombe \u91cd\u5efa\u8ba1\u5212</p> <p></p> <p>\u53ef\u4ee5\u89e6\u6478\u4f53\u9a8c\u7684 Enigma \u4eff\u5236\u54c1</p> <p></p> <p>\u6380\u5f00\u76d6\u677f\u7684\u5185\u90e8\u60c5\u51b5</p> <p>\u8fd9\u53f0 Enigma \u673a\u5668\u7684 rotor \u4e0a\u4e0d\u662f\u5b57\u6bcd\u800c\u662f\u6570\u5b57</p> <p></p> <p>\u535a\u7269\u9986\u7528\u6765\u8bb2\u89e3 Enigma \u52a0\u5bc6\u8fc7\u7a0b\u7684\u6750\u6599</p> <p></p> <p>Enigma \u65c1\u8fb9\u7684\u4ecb\u7ecd</p> <p>\u4e0b\u9762\u662f\u5fb7\u519b\u52a0\u5bc6\u7528\u5230\u7684\u9f7f\u8f6e\u987a\u5e8f, Ring Setting, \u63a5\u7ebf\u677f\u8bbe\u7f6e\u548c\u8d77\u59cb\u4f4d\u7f6e\u7684\u5bc6\u7801\u8868\uff0c\u6bcf\u5929\u4e00\u7ec4</p> <p></p> <p>\u535a\u7269\u9986\u8bb2\u89e3\u5458\u662f\u4e00\u4e2a\u82f1\u56fd\u8001\u7237\u5b50</p> <p></p> <p>\u4e0b\u9762\u7684\u6ed1\u5c3a\u7528\u6765\u8bb2\u89e3 Bombe \u7834\u89e3 Enigma \u52a0\u5bc6\u4fe1\u606f\u65f6\u6392\u9664\u660e\u6587\u5bc6\u6587\u51fa\u73b0\u76f8\u540c\u5b57\u6bcd\u7684\u60c5\u51b5</p> <p>\u8fd9\u91cc\u548c\u4e0a\u8bfe\u65f6\u7684\u8bb2\u89e3\u65b9\u6cd5\u5f88\u50cf</p> <p></p> <p>\u542c\u8bb2\u89e3\u7684\u65f6\u5019\u548c\u6211\u4e00\u5757\u7684\u4eba\u8bf4\u4ed6\u4eec\u662f\u4ece\u5fb7\u56fd\u6765\u7684\uff0c\u6709\u5b66\u8ba1\u7b97\u673a\u7684\u4e5f\u6709\u5b66\u4eba\u6587\u793e\u79d1\u4e13\u4e1a\u7684</p> <p>\u5728 Enigma \u5c55\u5385\u5f85\u4e86\u4e00\u4f1a\u513f\u597d\u591a\u4eba\u90fd\u662f\u5fb7\u56fd\u53e3\u97f3</p> <p>\u6211\u8fd8\u5411\u4ed6\u95ee\u4e86 Double Stepping \u7684\u95ee\u9898\uff0c\u4ed6\u7ed9\u6211\u505a\u4e86\u6f14\u793a\uff08\u5728\u89c6\u9891\u91cc\uff0c\u867d\u7136\u53ea\u62cd\u5230\u4e86\u4e00\u5c0f\u6bb5\uff09</p> <p>\u4e0d\u8fc7\u8001\u7237\u5b50\u6700\u540e\u4e5f\u6ca1\u63d0\u5230\u8fd9\u4e2a\u73b0\u8c61\u548c Enigma \u54ea\u90e8\u5206\u7684\u7ed3\u6784\u6709\u5173</p> <p>\u8fd9\u662f\u82f1\u56fd\u79d1\u5b66\u535a\u7269\u9986 Science Museum \u5c55\u793a\u7684\u53e6\u4e00\u53f0 Enigma:</p> <p></p> <p></p> <p>\u4e4b\u524d\u63d0\u5230\u7684 Lorenz SZ \u7cfb\u5217\u5bc6\u7801\u673a\u597d\u50cf\u662f\u6d41\u5bc6\u7801\u673a</p> <p></p> <p>\u6a21\u62df\u673a, \u52a0\u5bc6\u65b9\u6cd5\u662f\u6a21 2 \u52a0\u6cd5</p> <p></p>"},{"location":"blog/2024/12/02/foss-inspiration/","title":"\ud83c\udf7a Free as in free speech, not as in free beer","text":""},{"location":"blog/2024/12/02/foss-inspiration/#\u4ec0\u4e48\u662f\u81ea\u7531\u8f6f\u4ef6","title":"\u4ec0\u4e48\u662f\u81ea\u7531\u8f6f\u4ef6\uff1f","text":"<p>\u4ec0\u4e48\u662f\u81ea\u7531\u8f6f\u4ef6</p> <p>What is Free Software? \ud83d\udd17</p> <p>\u56db\u9879\u57fa\u672c\u81ea\u7531</p> <p>\u5982\u679c\u4e00\u4e2a\u8f6f\u4ef6\u662f\u81ea\u7531\u8f6f\u4ef6\uff0c\u90a3\u4e48\u5b83\u5fc5\u987b\u4e3a\u7528\u6237\u63d0\u4f9b\u4ee5\u4e0b\u56db\u9879\u57fa\u672c\u81ea\u7531:</p> <ul> <li>\u81ea\u7531\u5ea6 0\uff1a\u65e0\u8bba\u7528\u6237\u51fa\u4e8e\u4f55\u79cd\u76ee\u7684\uff0c\u5fc5\u987b\u53ef\u4ee5\u6309\u7167\u7528\u6237\u610f\u613f\uff0c\u81ea\u7531\u5730\u8fd0\u884c\u8be5\u8f6f\u4ef6\u3002</li> <li>\u81ea\u7531\u5ea6 1\uff1a\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u5730\u5b66\u4e60\u5e76\u4fee\u6539\u8be5\u8f6f\u4ef6\uff0c\u4ee5\u6b64\u6765\u5e2e\u52a9\u7528\u6237\u5b8c\u6210\u7528\u6237\u81ea\u5df1\u7684\u8ba1\u7b97\u3002\u4f5c\u4e3a\u524d\u63d0\uff0c\u7528\u6237\u5fc5\u987b\u53ef\u4ee5\u8bbf\u95ee\u5230\u8be5\u8f6f\u4ef6\u7684\u6e90\u4ee3\u7801\u3002</li> <li>\u81ea\u7531\u5ea6 2\uff1a\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u5730\u5206\u53d1\u8be5\u8f6f\u4ef6\u7684\u62f7\u8d1d\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u52a9\u4eba\u3002</li> <li>\u81ea\u7531\u5ea6 3\uff1a\u7528\u6237\u53ef\u4ee5\u81ea\u7531\u5730\u5206\u53d1\u8be5\u8f6f\u4ef6\u4fee\u6539\u540e\u7684\u62f7\u8d1d\u3002\u501f\u6b64\uff0c\u7528\u6237\u53ef\u4ee5\u628a\u6539\u8fdb\u540e\u7684\u8f6f\u4ef6\u5206\u4eab\u7ed9\u6574\u4e2a\u793e\u533a\u4ee4\u4ed6\u4eba\u4e5f\u4ece\u4e2d\u53d7\u76ca\u3002\u4f5c\u4e3a\u524d\u63d0\uff0c\u7528\u6237\u5fc5\u987b\u53ef\u4ee5\u8bbf\u95ee\u5230\u8be5\u8f6f\u4ef6\u7684\u6e90\u4ee3\u7801\u3002 </li> </ul> <p>The four essential freedoms</p> <p>A program is free software if the program's users have the four essential freedoms: [1]</p> <ul> <li>The freedom to run the program as you wish, for any purpose (freedom 0).</li> <li>The freedom to study how the program works, and change it so it does your computing as you wish (freedom 1). Access to the source code is a precondition for this.</li> <li>The freedom to redistribute copies so you can help others (freedom 2).</li> <li>The freedom to distribute copies of your modified versions to others (freedom 3). By doing this you can give the whole community a chance to benefit from your changes. Access to the source code is a precondition for this.</li> </ul>"},{"location":"blog/2024/12/02/foss-inspiration/#\u81ea\u7531\u8f6f\u4ef6\u73b0\u5728\u66f4\u52a0\u91cd\u8981","title":"\u81ea\u7531\u8f6f\u4ef6\u73b0\u5728\u66f4\u52a0\u91cd\u8981","text":"<p>\u81ea\u7531\u8f6f\u4ef6\u73b0\u5728\u66f4\u52a0\u91cd\u8981</p> <p>Free Software Is Even More Important Now \ud83d\udd17</p> <p>by Richard Stallman</p> <p>\u81ea\u7531\u5305\u62ec\u4e0e\u4ed6\u4eba\u5408\u4f5c\u7684\u81ea\u7531\u3002\u5265\u593a\u4eba\u4eec\u7684\u8fd9\u4e2a\u81ea\u7531\u5c31\u662f\u5b64\u7acb\u4ed6\u4eec\uff0c\u4e5f\u662f\u8c0b\u5212\u538b\u8feb\u4ed6\u4eec\u7684\u5f00\u59cb\u3002 \u5728\u81ea\u7531\u8f6f\u4ef6\u793e\u533a\u4e2d\uff0c\u6211\u4eec\u975e\u5e38\u6ce8\u91cd\u5408\u4f5c\u7684\u91cd\u8981\u6027\uff0c\u56e0\u4e3a\u6211\u4eec\u7684\u5de5\u4f5c\u662f\u7531\u6709\u7ec4\u7ec7\u7684\u5408\u4f5c\u7ec4\u6210\u7684\u3002\u5982\u679c\u4f60\u7684\u670b\u53cb\u6765\u9020\u8bbf\uff0c\u770b\u5230\u4f60\u7528\u7684\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u4ed6\u53ef\u80fd\u4f1a\u8981\u4e00\u4e2a\u62f7\u8d1d\u3002\u4e00\u4e2a\u963b\u6b62\u4f60\u53d1\u5e03\u6216\u8005\u8bf4\u4f60 \u201c\u4e0d\u5e94\u8be5\u201d \u8fd9\u4e48\u505a\u7684\u7a0b\u5e8f\uff0c\u662f\u53cd\u793e\u4f1a\u7684\u3002</p> <p>Freedom includes the freedom to cooperate with others. Denying people that freedom means keeping them divided, which is the start of a scheme to oppress them. In the free software community, we are very much aware of the importance of the freedom to cooperate because our work consists of organized cooperation. If your friend comes to visit and sees you use a program, she might ask for a copy. A program which stops you from redistributing it, or says you're \u201cnot supposed to,\u201d is antisocial.</p> <p>\u5171\u52c9\u3002</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/","title":"Intel x87 FPU \u6d6e\u70b9\u6570\u8fd0\u7b97\u6027\u80fd\u5f02\u5e38\u5206\u6790","text":""},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u6d6e\u70b9\u6570\u4e58\u6cd5\u7684\u6027\u80fd\u5f02\u5e38","title":"\u6d6e\u70b9\u6570\u4e58\u6cd5\u7684\u6027\u80fd\u5f02\u5e38","text":"<p>\u5728\u300a\u6570\u636e\u7ed3\u6784\u57fa\u7840\u300b\u8bfe\u7a0b Project 1 \u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8bc4\u4f30\u4e00\u6bb5\u8ba1\u7b97\u5e42\u8fd0\u7b97\u4ee3\u7801\u7684\u8fd0\u884c\u8017\u65f6\uff0c\u4ee5\u6b64\u5206\u6790\u5b83\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u3002\u5e42\u8fd0\u7b97\u7684\u7b97\u6cd5\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\uff0c\u4e0b\u9762\u662f\u4e00\u6bb5\u793a\u4f8b\u4ee3\u7801:</p> <pre><code>double pow(double init_val, uint64_t iteration) {\n  double mx = init_val;\n  for (uint64_t i = 1; i &lt; iteration; i++) mx *= init_val;\n  return mx;\n}\n</code></pre> <p>\u4ece\u4ee3\u7801\u4e2d\u6211\u4eec\u53ef\u4ee5\u63a8\u51fa\u5176\u8fd0\u884c\u65f6\u957f\u5e94\u8be5\u53ea\u4e0e iteration \u53d8\u91cf\u7ebf\u6027\u76f8\u5173\uff0c\u5bf9\u5e94\u8be5\u7b97\u6cd5\u590d\u6742\u5ea6\u4e3a \\(O(N)\\).</p> <p>\u7136\u800c\u4e00\u90e8\u5206\u540c\u5b66\u5728\u8fdb\u884c\u5b9e\u9a8c\u65f6\uff0c\u53d1\u73b0\u8fd9\u6bb5\u4ee3\u7801\u7684\u8fd0\u884c\u8017\u65f6\u4e0d\u4ec5\u4e0e\u5e42\u6b21\u65b9\u6709\u5173\uff0c\u8fd8\u4e0e\u5e95\u6570 init_val \u6709\u5173\u3002\u66f4\u5177\u4f53\u800c\u8a00\uff0c\u5f53\u5e95\u6570\u6bd4\u8f83\u5927\u65f6\uff0c\u6027\u80fd\u4f1a\u53d1\u751f\u9aa4\u964d\uff0c\u6bd4\u5982\u8ba1\u7b97 \\(1.5^n\\) \u4f1a\u6bd4 \\(1^n\\) \u6162\u5341\u51e0\u500d\u3002</p> <p>\u5728\u8ba8\u8bba\u8fc7\u7a0b\u4e2d\uff0c\u540c\u5b66\u4eec\u521d\u6b65\u63a8\u65ad\u51fa\uff0c\u7531\u4e8e\u5e42\u51fd\u6570\u589e\u957f\u901f\u5ea6\u5f88\u5feb\uff0c\u8ba1\u7b97\u8f83\u5927\u5e95\u6570\u65f6\uff0c\u5f88\u5feb\u5c31\u4f1a\u8d85\u8fc7 double \u7c7b\u578b\u80fd\u8868\u8fbe\u7684\u6570\u5b57\u4e0a\u9650\uff0c\u6b64\u65f6\u7ed3\u679c\u5c06\u4f1a\u53d8\u4e3a inf\u3002\u56e0\u6b64\u95ee\u9898\u7684\u672c\u8d28\u4e0d\u5728\u4e8e\u5e95\u6570\u7684\u9009\u62e9\uff0c\u800c\u5728\u4e8e\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\u662f\u5426\u53d1\u751f\u4e86\u4e0a\u6ea2 (overflow) \u7684\u95ee\u9898\uff0c\u5982\u679c\u53d1\u751f\u4e86\u4e0a\u6ea2\uff0c\u90a3\u4e48\u6027\u80fd\u5c31\u4f1a\u9aa4\u964d\u3002</p> <p>\u8fd8\u6709\u70ed\u5fc3\u7684\u540c\u5b66\u63d0\u4f9b\u4e86\u5728\u4e0d\u540c\u5e73\u53f0\u7684\u6d4b\u8bd5\uff0c\u786e\u5b9a\u4e86\u5728 x86 \u67b6\u6784\u7684\u4e24\u5bb6\u5382\u5546\u4e2d\uff0cIntel CPU \u5e7f\u6cdb\u5b58\u5728\u8be5\u95ee\u9898\uff0c\u800c AMD CPU \u4e0d\u53d7\u5f71\u54cd\u3002\u540c\u65f6\uff0c\u901a\u8fc7\u6539\u53d8\u7f16\u8bd1\u5668\u7248\u672c\u7f16\u8bd1\u540c\u4e00\u6bb5\u4ee3\u7801\uff0c\u53ef\u53d1\u73b0\u8be5\u95ee\u9898\u5b58\u5728\u4e8e\u8001\u7248\u672c\u7684 gcc \u7f16\u8bd1\u5668\u4e2d\u3002\u5206\u6790\u5176\u4ea7\u751f\u7684\u6c47\u7f16\u4ee3\u7801\uff0c\u4f1a\u53d1\u73b0\u8001\u7248\u672c gcc \u7f16\u8bd1\u5668\u9ed8\u8ba4\u4f7f\u7528 x87 \u6d6e\u70b9\u6570\u5355\u5143\uff0c\u800c\u65b0\u7248\u672c\u7f16\u8bd1\u5668\u81f3\u5c11\u4f1a\u542f\u7528 SSE \u8fdb\u884c\u6d6e\u70b9\u6570\u8fd0\u7b97\u3002</p> <p>\u4e8e\u662f\u6211\u4eec\u7684\u95ee\u9898\u5c31\u8fdb\u4e00\u6b65\u7f29\u7a84\u4e3a\u4e86: \u5728 Intel CPU \u4e0a\uff0c\u4f7f\u7528 x87 \u6d6e\u70b9\u6570\u8fd0\u7b97\u5355\u5143\u65f6\uff0c\u5bf9\u975e\u89c4\u683c\u6570\u53c2\u4e0e\u7684\u6d6e\u70b9\u6570\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u53d1\u751f\u6027\u80fd\u9aa4\u964d\u7684\u539f\u56e0\u3002</p> <p>\u5728\u63a2\u7a76\u95ee\u9898\u4e4b\u524d\uff0c\u6709\u5fc5\u8981\u5bf9 x87 \u6d6e\u70b9\u8fd0\u7b97\u5355\u5143\u8fdb\u884c\u8be6\u7ec6\u7684\u4e86\u89e3\u4e0e\u5206\u6790\uff0c\u4ee5\u4fbf\u63d0\u51fa\u5408\u7406\u731c\u60f3\u5e76\u627e\u5230\u9a8c\u8bc1\u9014\u5f84:</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#8087-\u4e0e-x87-\u6d6e\u70b9\u8fd0\u7b97\u5355\u5143","title":"8087 \u4e0e x87 \u6d6e\u70b9\u8fd0\u7b97\u5355\u5143","text":"<p>\u5728 8086 \u65f6\u4ee3\uff0c\u5b9e\u9645\u4e0a\u5904\u7406\u5668\u786c\u4ef6\u662f\u4e0d\u5177\u6709\u6d6e\u70b9\u6570\u5904\u7406\u80fd\u529b\u7684\uff0c\u60f3\u8981\u8fdb\u884c\u6d6e\u70b9\u6570\u8fd0\u7b97\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\u8f6f\u4ef6\u6a21\u62df\uff0c\u53e6\u5916\u4e00\u79cd\u65b9\u6cd5\u662f\u5916\u6302\u4e00\u4e2a\u6d6e\u70b9\u6570\u534f\u5904\u7406\u5668 (co-processor). Intel 8086 \u53d1\u5e03\u4e8e 1976 \u5e74\uff0c\u4f46\u5f53\u65f6\u76d1\u7763 8086 \u5f00\u53d1\u7684\u5de5\u7a0b\u5e08 Bill Pohlman \u5728\u8bbe\u8ba1\u4e4b\u521d\u5c31\u786e\u4fdd 8086 \u80fd\u591f\u9002\u914d\u4e00\u6b3e\u5f53\u65f6\u4ecd\u5904\u4e8e\u6784\u601d\u9636\u6bb5\u7684\u6d6e\u70b9\u6570\u534f\u5904\u7406\u5668\u3002</p> <p>\u8fd9\u6b3e\u6d6e\u70b9\u6570\u534f\u5904\u7406\u5668\u5c31\u662f 8087, \u53d1\u5e03\u4e8e 1980 \u5e74\uff0c\u4e5f\u5c31\u662f 8086 \u53d1\u5e03\u540e 4 \u5e74\u30028087 \u662f\u4e16\u754c\u4e0a\u7b2c\u4e00\u6b3e\u6d6e\u70b9\u6570\u534f\u5904\u7406\u5668\uff0c\u5b9e\u73b0\u4e86\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u786c\u4ef6\u652f\u6301\u3002\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u5b8c\u6210\u6d6e\u70b9\u6570\u7684\u57fa\u672c\u56db\u5219\u8fd0\u7b97\uff0c\u8fd8\u53ef\u4ee5\u5b8c\u6210\u4e09\u89d2\u51fd\u6570\u3001\u5bf9\u6570\u3001\u4e58\u65b9\u7b49\u7b49\u591a\u79cd\u4e30\u5bcc\u7684\u8fd0\u7b97\uff0c\u6781\u5927\u5730\u63d0\u5347\u4e86\u8ba1\u7b97\u673a\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u80fd\u529b\u3002</p> <p></p> <p>8087 \u903b\u8f91\u4e0a\u53ef\u4ee5\u5206\u6210\u4e24\u5927\u90e8\u5206\uff0c\u63a7\u5236\u5355\u5143\u548c\u8fd0\u7b97\u5355\u5143\u3002\u63a7\u5236\u5355\u5143\u4e0e 8086 \u5904\u7406\u5668\u76f8\u8fde\uff0c\u5e76\u7ef4\u62a4\u4e24\u4e2a\u91cd\u8981\u7684\u5904\u7406\u5668: Control Word \u4e0e Status Word, \u524d\u8005\u63a7\u5236\u4e86 8087 \u7684\u884c\u4e3a\uff0c\u6bd4\u5982\u662f\u5426\u5904\u7406\u5f02\u5e38\uff0c\u6d6e\u70b9\u6570\u7684\u820d\u5165\u6a21\u578b\u7b49\u7b49\uff0c\u540e\u8005\u7c7b\u4f3c flags \u5bc4\u5b58\u5668\uff0c\u8868\u793a\u5f53\u524d 8087 \u5904\u7406\u5668\u7684\u72b6\u6001\u3002\u8fd0\u7b97\u5355\u5143\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u80fd\u5b58\u50a8 8 \u4e2a 80 \u4f4d\u6d6e\u70b9\u6570\u7684\u5bc4\u5b58\u5668\u6808\uff0c\u5bf9\u5e94\u5730\uff0c\u5411 8087 \u5b58\u50a8\u548c\u8bfb\u53d6\u6d6e\u70b9\u6570\u7684\u64cd\u4f5c\u4e5f\u5747\u662f\u4ee5\u6808\u64cd\u4f5c\u7684\u8bed\u4e49\u5b9e\u73b0\u7684\uff0c\u4e5f\u5c31\u662f\u538b\u6808 push \u548c\u51fa\u6808 pop. 8087 \u5185\u90e8\u7684 ROM \u4e0a\u5b58\u50a8\u4e86 \\(\\pi\\), \\(e\\), \\(\\ln 2\\) \u7b49\u5e38\u6570\uff0c\u914d\u5408\u5fae\u7801\u63a7\u5236\u7684\u8fd0\u7b97\u7535\u8def\uff0c\u53ef\u4ee5\u5b9e\u73b0\u5404\u79cd\u590d\u6742\u7684\u6d6e\u70b9\u6570\u64cd\u4f5c\u3002</p> <p></p> <p>\u8fd9\u7bc7\u535a\u5ba2\u4ece die shot \u4e0e\u7535\u8def\u5c42\u9762\uff0c\u8be6\u7ec6\u5256\u6790\u4e86 8087 \u5904\u7406\u5668\u5185\u90e8\u7684\u5bc4\u5b58\u5668\u4ee5\u53ca\u8d1f\u8d23\u8fd0\u7b97\u7684\u7535\u8def\u7684\u7ed3\u6784\uff1ahttps://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html . \uff08\u5c3d\u7ba1\u4e0e\u73b0\u4ee3 x87 \u7684\u786c\u4ef6\u5b9e\u73b0\u5df2\u7ecf\u5927\u76f8\u5f84\u5ead\uff0c\u4f46\u54ea\u4e2a\u7537\u5b69\u4e0d\u559c\u6b22\u6b23\u8d4f\u7535\u8def\u4e4b\u7f8e\u5462\uff09</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#8087-\u4e0e-8086-\u7684\u540c\u6b65","title":"8087 \u4e0e 8086 \u7684\u540c\u6b65","text":"<p>\u65e9\u671f 8087 \u4f5c\u4e3a\u4e00\u6b3e\u534f\u5904\u7406\u5668\uff0c\u9700\u8981\u4e0e 8086 \u5904\u7406\u5668\u8fdb\u884c\u6c9f\u901a\u624d\u80fd\u5b9e\u73b0\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u529f\u80fd\u3002\u8fd9\u4e00\u65b9\u9762\u662f\u6307 8086 \u9700\u8981\u5411 8087 \u53d1\u9001\u63a7\u5236\u4e0e\u6570\u636e\u4fe1\u53f7\uff0c\u6307\u5b9a 8087 \u5b8c\u6210\u5bf9\u67d0\u4e00\u6d6e\u70b9\u6570\u7684\u5177\u4f53\u64cd\u4f5c\uff0c\u6b64\u65f6 8086 \u9700\u8981\u7b49\u5f85 8087 \u5b8c\u6210\u8fd0\u7b97\uff0c\u624d\u80fd\u8fdb\u884c\u4e0b\u4e00\u6761\u6307\u4ee4\u7684\u6267\u884c\u3002\u53e6\u4e00\u65b9\u9762\uff0c8087 \u5728\u8fd0\u7b97\u65f6\u5982\u679c\u4ea7\u751f\u5f02\u5e38\uff0c\u4e5f\u9700\u8981 8086 \u8fdb\u884c\u540e\u7eed\u7684\u5904\u7406\u3002</p> <p>\u5728\u6307\u4ee4\u7f16\u7801\u4e0a\uff0c8087 \u76f8\u5173\u7684\u6307\u4ee4\u90fd\u4ee5 0xdf-0xdf \u4e4b\u95f4\u7684\u524d\u7f00\u5f00\u59cb\uff0c\u8fd9\u4e00\u524d\u7f00\u4ee3\u8868 Escape to co-processor, \u4f7f 8086 \u6267\u884c\u5230\u76f8\u5173\u6307\u4ee4\u65f6\uff0c8087 \u80fd\u591f\u83b7\u5f97\u6307\u4ee4\u5e76\u8fdb\u884c\u89e3\u7801\u30028087 \u7684\u8fd0\u7b97\u4e0e 8086 \u7684\u6307\u4ee4\u6267\u884c\u662f\u5f02\u6b65\u7684\uff0c\u5982\u679c\u60f3\u8981\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u5c31\u9700\u8981\u7b49\u5f85 8087 \u5b8c\u6210\u5904\u7406\u5668\u4e0e\u534f\u5904\u7406\u5668\u4e4b\u95f4\u7684\u540c\u6b65\u3002\u540c\u6b65\u8fc7\u7a0b\u5728 Intel \u7684\u8bbe\u8ba1\u4e0b\u662f\u663e\u5f0f\u5730\uff0c\u5fc5\u987b\u8c03\u7528\u4e00\u6761 fwait \u6307\u4ee4\u6765\u5b8c\u6210\u3002\u6b64\u65f6 8086 \u4f1a\u505c\u4e0b\u811a\u6b65\u7b49\u5f85 8087 \u7684\u6d6e\u70b9\u8fd0\u7b97\uff0c\u7136\u540e\u68c0\u67e5\u662f\u5426\u6709\u5f02\u5e38\u4ea7\u751f\uff0c\u518d\u8fdb\u884c\u540e\u7eed\u7684\u5904\u7406\u3002\u8fd9\u6761 fwait \u6307\u4ee4\u4e0d\u9700\u8981\u7a0b\u5e8f\u5458\u81ea\u884c\u6dfb\u52a0\uff0c\u5f53\u65f6\u7684\u6c47\u7f16\u5668\u80fd\u591f\u81ea\u52a8\u5730\u5728 8087 \u6d6e\u70b9\u6307\u4ee4\u540e\u63d2\u5165 fwait \u6765\u8fdb\u884c\u540c\u6b65\u3002https://stackoverflow.com/questions/42543905/what-are-8086-esc-instruction-opcodes</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u73b0\u4ee3-x86-\u5904\u7406\u5668\u4e0e-x87-\u76f8\u5173\u7684\u63a7\u5236\u4f4d\u53ca\u5f02\u5e38","title":"\u73b0\u4ee3 x86 \u5904\u7406\u5668\u4e0e x87 \u76f8\u5173\u7684\u63a7\u5236\u4f4d\u53ca\u5f02\u5e38","text":"<p>\u5c3d\u7ba1\u73b0\u5728 x87 \u534f\u5904\u7406\u5668\u5df2\u7ecf\u53d8\u6210\u4e86 x86 \u5904\u7406\u5668\u5185\u7f6e\u7684\u6d6e\u70b9\u5355\u5143\u4e86\uff0c\u5728 Intel 64 \u548c IA-32 \u5904\u7406\u5668\u4e2d\uff0c\u4ecd\u7136\u80fd\u591f\u770b\u5230\u8bf8\u591a x87 \u7684\u8eab\u5f71:</p> <ul> <li>CR0 \u5bc4\u5b58\u5668: \u5728\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b66\u4e60\u5230 CR0 \u63a7\u5236\u4e86 CPU \u7684\u4fdd\u62a4\u6a21\u5f0f\u548c\u5185\u5b58\u5206\u9875\u673a\u5236\uff0c\u662f CPU \u4e0a\u5c24\u4e3a\u91cd\u8981\u7684\u4e00\u4e2a\u63a7\u5236\u5bc4\u5b58\u5668\u3002\u5728\u5982\u6b64\u91cd\u8981\u7684 CR0 \u4e2d\uff0c\u6709\u56db\u4f4d\u662f\u4e0e x87 \u5904\u7406\u5668\u76f4\u63a5\u76f8\u5173\u7684:    - ET (Extension type): \u7528\u4e8e\u533a\u5206 x87 \u534f\u5904\u7406\u5668\u7684\u79cd\u7c7b\uff0c\u82e5\u4e3a 1 \u5219\u4e3a Intel 387 DX \u53ca\u4e4b\u540e\uff0c\u4e3a 0 \u5219\u4ee3\u8868 Intel 287 \u53ca\u4e4b\u524d\u7684 x87 \u534f\u5904\u7406\u5668\u3002\u5728\u73b0\u4ee3 CPU \u4e0a\u8fd9\u4e00\u4f4d\u6052\u4e3a 1. - MP (Monitor Co-processor): \u7528\u4e8e\u63a7\u5236 wait/fwait \u6307\u4ee4\u662f\u5426\u4ea7\u751f #NM (Device not available) \u5f02\u5e38\uff0c\u73b0\u4ee3\u5904\u7406\u5668\u4e0d\u9700\u8981\u8be5\u673a\u5236\uff0c\u4e14\u63a8\u8350\u8bbe\u7f6e\u6052\u4e3a 1. - EM (x87 FPU Emulation): \u7528\u4e8e\u63a7\u5236\u662f\u5426\u5f00\u542f\u6a21\u62df x87 \u7684\u8f6f\u4ef6\u6d6e\u70b9\u8fd0\u7b97\uff0c\u5982\u679c EM \u7f6e\u4e3a 1\uff0c\u90a3\u4e48\u4efb\u4f55 x87 \u6307\u4ee4\u5c06\u4f1a\u5bfc\u81f4 #NM \u5f02\u5e38\uff0c\u7a0b\u5e8f\u5458\u9700\u8981\u5728\u5f02\u5e38\u5904\u7406\u4e2d\u8fdb\u884c\u8f6f\u4ef6\u6d6e\u70b9\u6570\u6a21\u62df\u3002\u540c\u65f6\u5c06\u4f1a\u7981\u6b62\u5176\u4ed6\u6d6e\u70b9\u6307\u4ee4\uff0c\u5982 MMX, SSE \u6269\u5c55\u7b49\u7b49\uff0c\u5426\u5219\u4f1a\u4ea7\u751f #UD \u5f02\u5e38\u3002    - NE (Numeric Exception): \u7528\u4e8e\u63a7\u5236 x87 \u5f02\u5e38\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u82e5\u4e3a 1\uff0c\u5219\u7531 CPU \u5185\u90e8\u901a\u8fc7 #MF \u5f02\u5e38\u8fdb\u884c\u5904\u7406\uff0c\u5426\u5219\u5c06\u901a\u8fc7\u5916\u90e8\u786c\u4ef6\u7684\u4e2d\u65ad\u8bf7\u6c42\u7ebf\u540c\u5fd7\u5916\u90e8\u8bbe\u5907\uff0c\u501f\u52a9\u5916\u90e8\u786c\u4ef6\u7684\u903b\u8f91\u6765\u5904\u7406\u8be5\u5f02\u5e38\u3002</li> </ul> <p>The NE (Numeric Exception) flag (bit 5 of the CR0 register) is used in the P6 family, Pentium, and Intel486 processors to determine whether unmasked floating-point exceptions are reported internally through interrupt vector 16 (flag is set) or externally through an external interrupt (flag is clear). On a hardware reset, the NE flag is initialized to 0, so software using the automatic internal error-reporting mechanism must set this flag to 1. This flag is nonexistent on the Intel386 processor. </p> <ul> <li>x87 \u63a7\u5236\u5bc4\u5b58\u5668 \uff08Control Word\uff09</li> <li>RC \u4e0e PC \u63a7\u5236 x87 \u7684\u820d\u5165\u4e0e\u7cbe\u5ea6</li> <li>\u4f4e 6 \u4f4d\u4e3a Exception Mask\uff0c\u5982\u679c\u7f6e 1\uff0c\u8be5\u7c7b\u5f02\u5e38\u4e0d\u4f1a\u88ab\u89e6\u53d1     </li> </ul>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#ieee-754-\u6807\u51c6","title":"IEEE 754 \u6807\u51c6","text":"<p>IEEE 754 \u6807\u51c6\u662f\u76ee\u524d\u5e7f\u6cdb\u63a5\u53d7\u4e0e\u4f7f\u7528\u7684\u6d6e\u70b9\u6570\u8fd0\u7b97\u6807\u51c6\uff0c\u5b83\u5b9a\u4e49\u4e86\u6d6e\u70b9\u6570\u7684\u683c\u5f0f\u548c\u64cd\u4f5c\uff0c\u786e\u4fdd\u4e86\u4e0d\u540c\u8ba1\u7b97\u673a\u7cfb\u7edf\u95f4\u6d6e\u70b9\u8fd0\u7b97\u7ed3\u679c\u7684\u4e00\u81f4\u6027\u3002\u4ece\u5386\u53f2\u89d2\u5ea6\u6765\u770b\uff0cIEEE 754 \u6807\u51c6\u6536\u5230\u4e86 8087 \u534f\u5904\u7406\u5668\u7684\u663e\u8457\u5f71\u54cd\uff0c\u56e0\u4e3a Intel 8087 \u662f\u5386\u53f2\u4e0a\u7b2c\u4e00\u6b3e\u786c\u4ef6\u6d6e\u70b9\u534f\u5904\u7406\u5668\uff0c\u5f15\u5165\u4e86\u6d6e\u70b9\u6570\u7684\u57fa\u672c\u6982\u5ff5\u3001\u8fd0\u7b97\u64cd\u4f5c\u548c\u4e00\u4e9b\u7279\u5b9a\u7684\u5f02\u5e38\u5904\u7406\u65b9\u6cd5\u3002IEEE 754 \u6807\u51c6\u7684\u8bb8\u591a\u6838\u5fc3\u6982\u5ff5\uff0c\u6bd4\u5982\u820d\u5165\u6a21\u5f0f\u548c\u5f02\u5e38\u7684\u5b9a\u4e49\uff0c\u90fd\u5728 8087 \u4e2d\u6709\u6240\u4f53\u73b0\u3002\u53ef\u4ee5\u8bf4 8087 \u4e3a IEEE 754 \u6807\u51c6\u7684\u8bde\u751f\u5960\u5b9a\u4e86\u57fa\u7840\uff0c\u800c IEEE 754 \u6807\u51c6\u5728\u540e\u6765\u7684\u5904\u7406\u5668\u8bbe\u8ba1\u4e2d\u8fdb\u4e00\u6b65\u63a8\u5e7f\u5e76\u5b8c\u5584\u4e86\u8fd9\u4e9b\u7406\u5ff5\uff0c\u540e\u6765 IEEE 754 \u53c8\u53cd\u5411\u5f71\u54cd\u4e86 80387 \u53ca\u4ee5\u540e Intel \u7684\u6d6e\u70b9\u6570\u5904\u7406\u5355\u5143\u7684\u89c4\u8303\u5316\u8bbe\u8ba1\u3002</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u6269\u5c55\u7cbe\u5ea6\u683c\u5f0f","title":"\u6269\u5c55\u7cbe\u5ea6\u683c\u5f0f","text":"<p>\u5728 x87 FPU \u4e2d\uff0c\u6d6e\u70b9\u6570\u4f4d\u6570\u5747\u4e3a 80 \u4f4d\uff0c\u8fd9\u4e00\u683c\u5f0f\u5728 IEEE 754 \u4e2d\u88ab\u89c4\u8303\u5316\u4e3a\u6269\u5c55\u7cbe\u5ea6\u683c\u5f0f\uff0c\u5b83\u5305\u62ec 1 \u4f4d\u7b26\u53f7\u4f4d\uff0c15 \u4f4d\u6307\u6570\u4f4d\uff0c\u4ee5\u53ca 64 \u4f4d\u5c3e\u6570\u3002\u5176\u89c4\u5b9a\u7684\u65e0\u7a77\u5927\u4ee5\u53ca NaN \u6570\u503c\u5982\u4e0b\u8868\u6240\u793a: </p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u975e\u6b63\u89c4\u6570\u7684\u8fd0\u7b97","title":"\u975e\u6b63\u89c4\u6570\u7684\u8fd0\u7b97","text":"<p>Intel \u6d6e\u70b9\u6570\u53c2\u8003\u624b\u518c \u8be6\u7ec6\u4ecb\u7ecd\u4e86 SSE \u548c AVX \u6307\u4ee4\u5bf9 normal / subnormal / denormal \u6570\u5b57\u4ee5\u53ca\u4ed6\u4eec\u4e4b\u95f4\u8fdb\u884c\u8fd0\u7b97\u65f6\u4ea7\u751f\u7684\u7ed3\u679c\u4ee5\u53ca\u5f02\u5e38\u4f4d\u8bbe\u7f6e\u3002\u9664\u4e86\u5f02\u5e38\u79cd\u7c7b\u4e0d\u540c\uff0c\u4ee5\u53ca x87 \u6ca1\u6709 DAZ (Denormal as zero) \u4ee5\u53ca FTZ (Flush to zero) \u8bbe\u7f6e\u4e4b\u5916\uff0c\u5176\u7ed3\u679c\u5e94\u8be5\u662f\u76f8\u540c\u7684:</p> <p></p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u63a2\u7a76\u8fc7\u7a0b","title":"\u63a2\u7a76\u8fc7\u7a0b","text":""},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u731c\u60f3-1-\u4e0e-x87-\u5f02\u5e38\u4ea7\u751f\u7684\u4e2d\u65ad\u548c\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\u6709\u5173","title":"\u731c\u60f3 1: \u4e0e x87 \u5f02\u5e38\u4ea7\u751f\u7684\u4e2d\u65ad\u548c\u64cd\u4f5c\u7cfb\u7edf\u5904\u7406\u6709\u5173","text":""},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u5206\u6790","title":"\u5206\u6790","text":"<p>\u5728\u5bf9 x87 \u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u7684\u65f6\u5019\uff0c\u6211\u4eec\u63d0\u5230 CPU \u6709\u591a\u79cd\u5f02\u5e38\u4e0e x87 \u6709\u5173: \u4e00\u65b9\u9762\uff0cx87 \u672c\u8eab\u4f1a\u4ea7\u751f P, U, O, Z, D, I \u8fd9 6 \u79cd\u5f02\u5e38\uff0c\u53e6\u4e00\u65b9\u9762\uff0c\u5728 x87 \u8fd0\u7b97\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u6709\u53ef\u80fd\u89e6\u53d1\u901a\u7528\u5f02\u5e38 #NM, #MF \u7b49\u7b49\u3002\u6211\u4eec\u77e5\u9053\u4e00\u65e6\u53d1\u751f\u5f02\u5e38\uff0c\u5c31\u4f1a\u5bfc\u81f4 CPU \u9700\u8981\u8df3\u8f6c\u5230\u64cd\u4f5c\u7cfb\u7edf\u6307\u5b9a\u7684\u4ee3\u7801\u8fdb\u884c\u5904\u7406\uff0c\u6253\u65ad\u539f\u5148\u7a0b\u5e8f\u7684\u6267\u884c\uff0c\u4e25\u91cd\u5f71\u54cd\u6027\u80fd\u3002</p> <p>\u6211\u4eec\u5148\u6765\u5206\u6790 x87 \u672c\u8eab\u7684\u5f02\u5e38\u3002\u5728 x87 FPU \u7684\u63a7\u5236\u5bc4\u5b58\u5668 fpcw \u4e2d\uff0c\u5b58\u50a8\u7740\u5f02\u5e38\u7684\u63a9\u7801 (mask)\uff0c\u4e00\u65e6\u5bf9\u5e94\u4f4d\u7f6e 1\uff0c \u5c31\u4ee3\u8868\u8fd9\u4e00\u7c7b\u5f02\u5e38\u88ab\u63a9\u76d6\u4f4f\uff0c\u4e0d\u4f1a\u62a5\u544a\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u3002</p> <p>\u901a\u8fc7 fnstcw \u6307\u4ee4\u53ef\u4ee5\u83b7\u53d6 fpcw \u5bc4\u5b58\u5668\u7684\u503c\u3002\u5728\u4e0d\u505a\u4efb\u4f55\u64cd\u4f5c\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u770b\u5230 fpcw \u7684\u9ed8\u8ba4\u503c\u4e3a 0x037F, \u4e5f\u5c31\u662f\u8bf4\u9ed8\u8ba4\u6240\u6709\u7684\u5f02\u5e38\u90fd\u88ab\u63a9\u76d6\u4f4f\u4e86\u3002</p> <p></p> <p>\u5982\u679c\u624b\u52a8\u8bbe\u7f6e fpcw\uff0c\u5c06\u5bf9\u5e94\u7684 mask \u4f4d\u89e3\u9664\uff0c\u5728\u7a0b\u5e8f\u6ca1\u6709\u58f0\u660e\u81ea\u5df1\u7684\u6d6e\u70b9\u5f02\u5e38\u5904\u7406\u51fd\u6570\u65f6\uff0c\u4f1a\u4e0a\u62a5\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u4ea7\u751f floating point exception, \u5e76\u7ed3\u675f\u7a0b\u5e8f\u8fd0\u884c\u3002\u8fd9\u4e0e\u6211\u4eec\u95ee\u9898\u80cc\u666f\u91cc\u7684\u60c5\u51b5\u4e0d\u592a\u76f8\u540c\uff0c\u8bf4\u660e\u539f\u95ee\u9898\u5e76\u4e0d\u662f\u56e0\u4e3a x87 \u672c\u8eab\u7684\u5f02\u5e38\u5bfc\u81f4\u7684\u3002</p> <p></p> <p>\u7136\u540e\u6211\u4eec\u53ef\u4ee5\u5206\u6790\u4e00\u4e0b\u662f\u5426\u4ea7\u751f\u4e86 CPU \u7684\u901a\u7528\u5f02\u5e38\u3002cr0 \u662f\u8bbe\u7f6e\u4e0e x87 \u76f8\u5173\u5f02\u5e38\u7684\u5173\u952e\u5bc4\u5b58\u5668\uff0c\u4f46\u901a\u8fc7\u5206\u6790\uff0c\u5728\u73b0\u4ee3\u7684 CPU \u4e0a\uff0c\u6211\u4eec\u5b9e\u9645\u53ef\u4ee5\u8bbe\u7f6e\u7684\u53ea\u6709 cr0.ne \u8fd9\u4f4d\u53ef\u80fd\u4f1a\u6709\u6548\u679c\u3002\u8fd9\u4e2a\u5bc4\u5b58\u5668\u9700\u8981 Ring 0 \u7ea7\u522b\u7684\u6743\u9650\u624d\u53ef\u4ee5\u8fd0\u884c\uff0c\u6240\u4ee5\u6211\u5199\u4e86\u4e00\u4e2a Linux \u5185\u6838\u6a21\u5757:</p> <pre><code>static int __init cr0_ne_init(void) {\n    unsigned long cr0;\n\n    cr0 = read_cr0();\n    pr_info(\"Original CR0: 0x%lx\\n\", cr0);\n    pr_info(\"Original CR0.NE: %lu\\n\", (cr0 &gt;&gt; 5) &amp; 0x1);\n\n    // \u6e05\u9664 CR0.NE \u4f4d\uff08\u7b2c5\u4f4d\uff09\n    cr0 &amp;= ~(1UL &lt;&lt; 5);\n    write_cr0(cr0);\n\n    cr0 = read_cr0();\n    pr_info(\"Modified CR0: 0x%lx\\n\", cr0);\n    pr_info(\"Modified CR0.NE: %lu\\n\", (cr0 &gt;&gt; 5) &amp; 0x1);\n\n    return 0;\n}\n\nstatic void __exit cr0_ne_exit(void) {\n    unsigned long cr0;\n\n    // \u6062\u590d CR0.NE \u4f4d\uff08\u8bbe\u7f6e\u7b2c5\u4f4d\uff09\n    cr0 = read_cr0();\n    cr0 |= (1UL &lt;&lt; 5);\n    write_cr0(cr0);\n\n    pr_info(\"CR0.NE restored.\\n\");\n}\n</code></pre> <p>\u6211\u5728\u6211\u7684\u7b14\u8bb0\u672c\u4e0a\u5b89\u88c5\u4e86\u539f\u751f\u7684 Linux \u73af\u5883\uff0c\u52a0\u8f7d\u8be5\u5185\u6838\u6a21\u5757\u540e\uff0c\u53ef\u4ee5\u5728\u5185\u6838\u6d88\u606f dmesg \u4e2d\u770b\u5230\u5bc4\u5b58\u5668\u6210\u529f\u88ab\u4fee\u6539\uff0c\u4f46\u662f\u8fd0\u884c\u5148\u524d\u7684\u6d4b\u8bd5\uff0c\u4f9d\u65e7\u53ef\u4ee5\u89c2\u6d4b\u5230\u6027\u80fd\u9aa4\u964d\u7684\u95ee\u9898\u3002\u8fd9\u8bf4\u660e\u5b9e\u9645\u4e0a\u8fd9\u4e2a\u95ee\u9898\u4e0e cr0.ne \u6ca1\u6709\u5173\u8054\u3002</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u5b9e\u9a8c","title":"\u5b9e\u9a8c","text":"<p>\u9664\u4e86\u5728\u5206\u6790\u90e8\u5206\u4f53\u73b0\u7684\u5c0f\u5b9e\u9a8c\u5916\uff0c\u6211\u8fd8\u5c1d\u8bd5\u5728\u5404\u79cd\u5e73\u53f0\u3001\u5404\u79cd\u64cd\u4f5c\u7cfb\u7edf\u4e0a\u5e7f\u6cdb\u5730\u5c1d\u8bd5\u3002 \u6211\u7684\u6d4b\u8bd5\u5e73\u53f0\u4e3a Intel Core i7-12700H, Intel Celeron 3865U, \u4ee5\u53ca Intel Xeon Gold 5320\u3002Intel Core i7-12700 H \u4e3a 12 \u4ee3\u7b14\u8bb0\u672c CPU\uff0c\u5fae\u67b6\u6784\u4e3a 2021 \u5e74\u53d1\u5e03\u7684 Alder Lake; Celeron 3865U \u6765\u81ea\u6211\u7684\u4e00\u5757\u5de5\u63a7\u677f\uff08\u5176\u547d\u540d\u662f\u81f4\u656c 80386 \u7684\uff09\uff0c\u5c5e\u4e8e\u4f4e\u7aef\u5d4c\u5165\u5f0f\u4ea7\u54c1\u7ebf\uff0c\u5fae\u67b6\u6784\u4e3a 2016 \u5e74\u53d1\u5e03\u7684 Kaby Lake; Xeon 5320 \u4e3a Inel \u7b2c\u4e09\u4ee3\u5fd7\u5f3a\u670d\u52a1\u5668\u5904\u7406\u5668\uff0c\u5fae\u67b6\u6784\u4e3a 2019 \u5e74\u7684 Ice Lake\u3002\u8fd9\u4e09\u6b3e CPU \u8986\u76d6\u4e86\u82f1\u7279\u5c14\u7684 Core\u3001Celeron\u3001Xeon \u591a\u4e2a\u4ea7\u54c1\u7ebf\uff0c\u8986\u76d6\u4e86\u8de8\u5ea6\u8f83\u957f\u7684\u5fae\u67b6\u6784\u8bbe\u8ba1\uff0c\u5e94\u5f53\u5177\u6709\u8db3\u591f\u7684\u666e\u904d\u6027\u3002</p> <p>\u6d4b\u8bd5\u7528\u5230\u7684\u4ee3\u7801\u9644\u5728\u4f5c\u4e1a\u63d0\u4ea4\u7684\u6587\u4ef6\u4e2d\uff0c\u4ee3\u7801\u53ef\u4ee5\u81ea\u52a8\u5bf9\u6bd4 x87 \u4e0e SSE\u3001AVX \u5728\u4e0d\u540c\u8f93\u5165\uff08\u6b63\u8d1f INF\uff0c NaN\uff0c\u4e0b\u6ea2\u7b49\uff09\u3001\u4e0d\u540c\u64cd\u4f5c\uff08\u4e58\u6cd5\u3001\u52a0\u6cd5\uff09\u4e4b\u4e0b\u7684\u6027\u80fd\u8868\u73b0\u3002</p> <p>\u9996\u5148\u662f Windows \u5e73\u53f0\uff0c\u6d4b\u91cf\u4e8e Intel i7-12700H:</p> <p></p> <p>\u5176\u6b21\u662f Linux \u5e73\u53f0\uff0c\u6d4b\u91cf\u4e8e Intel Xeon 5320:</p> <p></p> <p>\u5728\u4e24\u4e2a\u5e73\u53f0\u4e0a\uff0c\u53ef\u4ee5\u89c2\u5bdf\u5230 x87 \u5bf9\u4e8e INF \u548c NaN \u53c2\u4e0e\u7684\u8fd0\u7b97\uff0c\u6027\u80fd\u663e\u8457\u4f4e\u4e8e SSE \u4e0e AVX\uff0c\u800c\u4e0b\u6ea2\u51fa (underflow) \u7684\u65f6\u95f4\u5219\u76f8\u8fd1\u3002</p> <p>\u6700\u540e\u6211\u8fd8\u4e3a Celeron 3865U \u5e73\u53f0\u5b89\u88c5\u4e86 FreeDOS\uff0c\u4e00\u6b3e\u5f00\u6e90\u7684\u4eff MS-DOS \u7cfb\u7edf\uff0c\u5b83\u652f\u6301\u5728\u73b0\u4ee3\u7684\u5e73\u53f0\u4e0a\u7ee7\u7eed\u8fd0\u884c DOS \u7cfb\u7edf\u3002FreeDOS \u76f8\u8f83\u4e8e\u5176\u4ed6\u4e24\u6b3e\u64cd\u4f5c\u7cfb\u7edf\uff0c\u7531\u4e8e\u53ef\u4ee5\u76f4\u63a5\u8dd1\u5728\u5b9e\u6a21\u5f0f\u4e0b\uff0c\u4e14\u7a0b\u5e8f\u8fd0\u884c\u65f6\u5177\u6709\u5b8c\u5168\u7684\u6743\u9650\uff0c\u80fd\u591f\u6392\u9664\u5f88\u591a\u8f6f\u4ef6\u5c42\u9762\u7684\u5f71\u54cd\u3002\u5728 FreeDOS \u7cfb\u7edf\u4e0b\uff0c\u6211\u9009\u62e9\u4e86 bcc \u7f16\u8bd1\u5668\u548c\u624b\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u6d4b\u8bd5\u7a0b\u5e8f\uff0c\u56e0\u4e3a\u7f16\u8bd1\u5668\u548c\u6784\u5efa\u7cfb\u7edf\u5b8c\u5168\u4e0d\u540c\uff0c\u53ea\u6d4b\u8bd5\u4e86 mul_norm \u548c mul_pinf \u4e24\u79cd\u60c5\u51b5\u3002\u5728 FreeDOS \u7cfb\u7edf\u4e2d\uff0c\u53ef\u4ee5\u89c2\u6d4b\u5230 mul_pinf \u7684\u901f\u5ea6\u663e\u8457\u4f4e\u4e8e mul_norm\uff0c\u4e5f\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5f15\u8bc1\u6027\u80fd\u5f02\u5e38\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u548c\u8f6f\u4ef6\u57fa\u672c\u65e0\u5173\uff0c\u5c5e\u4e8e\u786c\u4ef6\u673a\u5236\u3002</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u731c\u60f3-2-\u4e0e-cpu-\u5bf9-x87-\u5f02\u5e38\u7684\u5904\u7406\u7684\u5fae\u7801\u8f85\u52a9\u6709\u5173","title":"\u731c\u60f3 2: \u4e0e CPU \u5bf9 x87 \u5f02\u5e38\u7684\u5904\u7406\u7684\u5fae\u7801\u8f85\u52a9\u6709\u5173","text":""},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u5206\u6790_1","title":"\u5206\u6790","text":"<p>perf \u662f Linux \u4e0a\u7684\u4e00\u6b3e\u6027\u80fd\u5206\u6790\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u8bfb\u53d6 Intel \u63d0\u4f9b\u7684\u6027\u80fd\u8ba1\u6570\u5668 (PMU, Performance Monitoring Units) \u83b7\u53d6\u5f71\u54cd CPU \u6027\u80fd\u56e0\u7d20\u7684\u4e00\u624b\u6570\u636e\u3002perf \u53ef\u4ee5\u6d4b\u91cf\u7684\u6307\u6807\u5305\u62ec CPU \u53d1\u5c04\u7684\u6307\u4ee4\u6570\u91cf\uff0c\u7a0b\u5e8f\u8fd0\u884c\u7684\u603b\u5468\u671f\u6570\u7b49\u7b49\uff0c\u8fdb\u800c\u53ef\u4ee5\u8ba1\u7b97 CPI \u7b49\u6307\u6807\u8861\u91cf CPU \u7684\u6027\u80fd\u91ca\u653e\u60c5\u51b5\u3002</p> <p>\u5728 perf \u652f\u6301\u7684\u89c2\u6d4b\u6307\u6807\u4e2d\uff0c\u6709\u4e00\u7cfb\u5217\u4e0e\u6d6e\u70b9\u6570\u76f8\u5173\u7684\u6307\u6807\uff0c\u8fd9\u5438\u5f15\u4e86\u6211\u7684\u5174\u8da3:</p> <pre><code>$ perf list | less\n...\nfloating point:\n  arith.fpdiv_active\n       [ARITH.FPDIV_ACTIVE]\n  assists.fp\n       [Counts all microcode FP assists]\n  assists.sse_avx_mix\n       [ASSISTS.SSE_AVX_MIX]\n  fp_arith_dispatched.port_0\n       [FP_ARITH_DISPATCHED.PORT_0]\n  fp_arith_dispatched.port_1\n       [FP_ARITH_DISPATCHED.PORT_1]\n  fp_arith_dispatched.port_5\n       [FP_ARITH_DISPATCHED.PORT_5]\n ...\n</code></pre> <p>\u6211\u6311\u9009\u4e86\u6240\u6709\u53ef\u80fd\u4e0e x87 \u76f8\u5173\u7684\u6307\u6807\u8fdb\u884c\u4e86\u6d4b\u8bd5\uff0c\u5e76\u89c2\u5bdf\u4ed6\u4eec\u7684\u6027\u80fd\u6307\u6807\uff0c\u679c\u771f\u53d1\u73b0\u4e86\u7aef\u502a: \u5176\u4e2d assists.fp \u8fd9\u4e2a\u6307\u6807\u4e8c\u8005\u5dee\u5f02\u5f88\u5927\uff0c\u800c\u4e14\u5728\u5f02\u5e38\u65f6\uff0c\u6570\u91cf\u6781\u5176\u63a5\u8fd1\u6211\u8bbe\u7f6e\u7684\u8fed\u4ee3\u6b21\u6570:</p> <p></p> <p>\u8bf4\u660e\u8fd9\u4e2a\u6307\u6807\u662f\u6211\u4eec\u63a2\u7a76\u95ee\u9898\u771f\u76f8\u7684\u5173\u952e! \u9996\u5148\u770b\u5b83\u7684\u4ecb\u7ecd:</p> <pre><code>   assists.fp\n       [Counts all microcode FP assists]\n</code></pre> <p>\u4e5f\u5c31\u662f\u7edf\u8ba1\u4e86\u5728\u6d6e\u70b9\u6570\u8fd0\u7b97\u65f6\u5fae\u7801\u8f85\u52a9\u7684\u6b21\u6570\u3002\u5fae\u7801\u8f85\u52a9\u662f Intel CPU \u7684\u4e00\u79cd\u673a\u5236\uff0c\u53ef\u4ee5\u7ed3\u5408\u4e0b\u56fe\u6765\u7406\u89e3:</p> <p></p> <p>\u8fd9\u662f\u4e00\u5f20 Intel CPU \u5fae\u67b6\u6784\u7684\u793a\u610f\u56fe\uff0c\u5176\u4e2d\u7eff\u8272\u7684\u662f\u6211\u4eec\u53ef\u89c1\u7684 x86 \u6307\u4ee4\uff0c\u800c\u5728 Intel CPU \u8fd0\u884c\u7684\u65f6\u5019\uff0c\u8fd9\u4e9b CISC \u6307\u4ee4\u90fd\u4f1a\u88ab\u8f6c\u6362\u4e3a\u7c7b\u4f3c RISC \u7684\u6307\u4ee4\u2014\u2014\u5fae\u7801 (microcode)\u3002\u5728 Intel CPU \u4e2d\uff0c\u6709\u4e00\u4e2a\u5355\u5143\u53eb\u505a Microcode Sequencer\uff0c\u7528\u6765\u4ece MS ROM \u4e2d\u8bfb\u53d6\u5fae\u7801\u5e76\u6267\u884c\u3002\u5fae\u7801\u8f85\u52a9\u53d1\u751f\u5728 CPU \u5185\u90e8\u51fa\u73b0\u5f02\u5e38\u5e76\u4e14\u6ca1\u6709\u80fd\u591f\u5904\u7406\u7684\u786c\u4ef6\u5355\u5143\u65f6\uff0c\u6b64\u65f6\u524d\u7aef\u7684\u6307\u4ee4\u89e3\u7801\u548c\u540e\u7aef\u7684\u4e71\u5e8f\u6267\u884c\u90fd\u4f1a\u88ab\u6253\u65ad (Machine Clear)\uff0c\u8f6c\u800c\u542f\u52a8 Microcode Sequencer \u8c03\u51fa\u5904\u7406\u5bf9\u5e94\u60c5\u51b5\u7684\u5fae\u7801\u5e76\u6267\u884c\u3002</p> <p>\u8fd9\u91cc\u6709\u4e00\u4e2a\u975e\u5e38\u5f71\u54cd\u6027\u80fd\u7684\u64cd\u4f5c \u2014\u2014 Machine Clear\uff0c\u5982\u679c\u8fdb\u4e00\u6b65\u7ffb\u9605\u82f1\u7279\u5c14\u624b\u518c Intel\u00ae 64 and IA-32 Architectures Optimization Reference Manual \u53ef\u4ee5\u770b\u5230\u5982\u4e0b\u7684\u63cf\u8ff0:</p> <p></p> <p>\u8fd9\u5b8c\u5168\u7b26\u5408\u6211\u4eec\u6240\u9047\u5230\u7684\u60c5\u51b5\uff0c\u53ea\u4e0d\u8fc7\u6211\u4eec\u7684\u60c5\u51b5\u662f subnormal \u800c\u975e denormal \u6570\uff0c\u4e0d\u8fc7\u90fd\u9700\u8981\u5fae\u7801\u6765\u8f85\u52a9\u5904\u7406\u7ed3\u679c\u3002\u8fdb\u4e00\u6b65\u7528 perf \u67e5\u770b machine clear \u7684\u60c5\u51b5\uff0c\u53ef\u4ee5\u53d1\u73b0\u5b83\u7684\u6b21\u6570\u548c\u5f02\u5e38\u51fa\u73b0\u6b21\u6570\u3001\u8fed\u4ee3\u6b21\u6570\u57fa\u672c\u4e00\u81f4\uff0c\u5e76\u4e14\u8fdc\u8fdc\u8d85\u8fc7\u65e0\u6d6e\u70b9\u5f02\u5e38\u7684\u60c5\u51b5\u3002</p> <p></p> <p>\u63a5\u7740\u8fd9\u4e2a\u5206\u6790\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u56de\u7b54\u8fd9\u4e09\u4e2a\u95ee\u9898\u4e86:</p> <ol> <li>\u4e3a\u4ec0\u4e48 x87 \u7684\u6307\u4ee4\u5728\u5f02\u5e38\u65f6\u4f1a\u5982\u6b64\u4e4b\u6162\uff1f</li> </ol> <p>Some instructions (FSIN, FCOS, and other transcendental instructions) are decoded with the assistance of MS-ROM. Frequent occurrences of instructions that required assistance of MS-ROM to decode complex uop flows are opportunity to improve instruction selection to reduce such occurrences. The UOPS_DECODED.MS event can be used to identify code regions that could benefit from better instruction selection. Other situations that can trigger this event are due to FP assists, like performing a numeric operation on denormalized FP values or QNaNs. In such cases the penalty is essentially the uops required for the assist plus the pipeline clearing required to ensure the correct state. Consequently this situation has a very clear signature consisting of MACHINE_CLEAR.CYCLES and uops being inserted by the microcode sequencer, UOPS_DECODED.MS. The execution penalty being the sum of these two contributions. The event codes for these are listed under D1H and C3H. \u2014\u2014 Intel\u00ae 64 and IA-32 Architectures Optimization Reference Manual</p> <p>\u82f1\u7279\u5c14\u5bf9\u4e8e\u73b0\u4ee3 CPU \u4e0a\u7684 x87 FPU \u7684\u5b9e\u73b0\u4f9d\u7136\u6bd4\u8f83\u201c\u539f\u59cb\u201d\uff0c\u4f46\u51e1\u6d89\u53ca\u5230\u8f83\u590d\u6742\u7684\u5904\u7406\uff0c\u80fd\u4e0d\u65b0\u8bbe\u8ba1\u786c\u4ef6\u5c31\u4e0d\u65b0\u8bbe\u8ba1\u786c\u4ef6\uff0c\u6240\u4ee5\u6bd4\u8f83\u590d\u6742\u7684\u4e09\u89d2\u51fd\u6570 (fsin, fcos), \u4ee5\u53ca\u50cf denormal / subnormal \u6570\u7684\u5904\u7406\uff0c\u7edf\u7edf\u4f7f\u7528\u5fae\u7801\u6765\u5b9e\u73b0\u3002\u8fd9\u5c31\u5bfc\u81f4\u5728\u4f7f\u7528 x87 FPU \u7684\u65f6\u5019\uff0c\u7a0d\u4e0d\u6ce8\u610f\u5c31\u6709\u53ef\u80fd\u9047\u5230\u5f02\u5e38\u60c5\u51b5\uff0c\u5fc5\u987b\u8981\u901a\u8fc7 Machine Clear \u6253\u65ad\u6d41\u6c34\u7ebf\uff0c\u4ece\u5fae\u7801 ROM \u4e2d\u8c03\u51fa\u5904\u7406\u7684\u5fae\u7801\uff0c\u6781\u5927\u5f71\u54cd\u4e86\u73b0\u4ee3 CPU \u6307\u4ee4\u7ea7\u5e76\u884c\u7684\u6027\u80fd\u3002</p> <ol> <li>\u4e3a\u4ec0\u4e48 SSE\uff0cAVX \u7b49\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e0d\u4f1a\u9047\u5230\u8fd9\u79cd\u60c5\u51b5\uff1f</li> </ol> <p>\u5728\u8bbe\u8ba1\u73b0\u4ee3\u6d6e\u70b9\u5904\u7406\u5355\u5143\u7684\u65f6\u5019\uff0c\u5c31\u4e0d\u9700\u8981\u518d\u8003\u8651\u4e00\u4e9b\u5386\u53f2\u9057\u7559\u95ee\u9898\u4e86\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u65b0\u7684\u786c\u4ef6\u3001\u65b0\u7684\u6307\u4ee4\u4f53\u7cfb\u7b49\u7b49\u3002\u56e0\u6b64\u5728 SSE\uff0cAVX \u7b49\u8fd0\u7b97\u5355\u5143\u4e2d\uff0c\u5bf9 INF\uff0c NaN \u8fd9\u4e9b\u6570\u5b57\u7684\u5904\u7406\u5b9e\u9645\u4e0a\u505a\u5230\u4e86\u786c\u4ef6\u4e2d:</p> <p></p> <p>\u5728\u65b0\u7684\u6d6e\u70b9\u8fd0\u7b97\u5355\u5143\u4e2d\uff0c\u5982\u679c\u51fa\u73b0\u4e86 subnormal / denormal \u6570\uff0c\u751a\u81f3\u8fde\u8fd0\u7b97\u90fd\u4e0d\u4f1a\u5f00\u59cb\uff0c\u76f4\u63a5\u6839\u636e DAZ / FTZ \u6807\u5fd7\uff0c\u4ee5\u53ca\u5bf9\u5e94\u5f02\u5e38\u7684\u63a9\u7801\u4ea7\u751f\u5bf9\u5e94\u7684\u7ed3\u679c\uff0c\u5927\u5927\u52a0\u901f\u4e86\u5f02\u5e38\u5904\u7406\u7684\u6548\u7387\u3002\u56e0\u6b64\u5e76\u4e0d\u4f1a\u9047\u5230\u6027\u80fd\u9aa4\u964d\u7684\u95ee\u9898\u3002</p> <ol> <li>\u4e3a\u4ec0\u4e48 AMD CPU \u7684 x87 \u5355\u5143\u6ca1\u6709\u8fd9\u79cd\u73b0\u8c61\uff1f</li> </ol> <p>\u5728\u4e00\u7bc7 2003 \u5e74\u5bf9 AMD Opteron CPU (\u9996\u4e2a 64 \u4f4d CPU\uff09\u5fae\u67b6\u6784\u7684\u5206\u6790\u6280\u672f\u535a\u5ba2 Detailed Architecture of AMD's 64-bit core \u4e2d\uff0c\u6709\u5982\u4e0b\u7684\u53d9\u8ff0:</p> <p>The result of all AMD's x87 optimizations is that the Opteron literally runs circles around the Pentium 4 when it comes to x87 processing. It has removed large special purpose circuits for status processing and implemented a few small ones that handle the cases mentioned. The shift to SSE2 floating point however will make removed area overhead more important than the speed-ups.</p> <p>AMD \u7684\u6240\u6709 x87 \u4f18\u5316\u7684\u7ed3\u679c\u662f\uff0cOpteron \u5728 x87 \u5904\u7406\u65b9\u9762\u786e\u5b9e\u6bd4 Pentium 4 \u66f4\u80dc\u4e00\u7b79 \uff08\u539f\u6587\u662f\uff1a\u5728\u8dd1\u6b65\u65f6\u53ef\u4ee5\u201c\u5957\u5708\u201d\uff09\u3002\u5b83\u79fb\u9664\u4e86\u7528\u4e8e\u72b6\u6001\u5904\u7406\u7684\u5927\u578b\u4e13\u7528\u7535\u8def\uff0c\u5e76\u5b9e\u73b0\u4e86\u51e0\u4e2a\u5904\u7406\u4e0a\u8ff0\u60c5\u51b5\u7684\u5c0f\u578b\u7535\u8def\u3002\u7136\u800c\uff0c\u8f6c\u5411 SSE2 \u6d6e\u70b9\u5c06\u4f7f\u6d88\u9664\u9762\u79ef\u5f00\u9500\u6bd4\u52a0\u901f\u66f4\u91cd\u8981\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\u81ea AMD \u7684\u7b2c\u4e00\u4ee3 64 \u4f4d CPU \u8d77\uff0cAMD \u5c31\u5bf9 x87 FPU \u8fdb\u884c\u4e86\u5927\u5200\u9614\u65a7\u7684\u6539\u9020\uff0c\u5c06\u5f88\u591a\u5f02\u5e38\u5904\u7406\u673a\u5236\u4ece\u5fae\u7801\u8f85\u52a9\u53d8\u6210\u4e86\u786c\u4ef6\u529f\u80fd\uff0c\u4ece\u800c\u6781\u5927\u5730\u52a0\u901f\u4e86 x87 \u7684\u6027\u80fd\u3002\u5728\u6211\u7684 AMD Ryzen 7 7840HS \u4e0a\u7ecf\u8fc7\u5b9e\u6d4b\uff0c\u5373\u4f7f\u662f x87 \u8fd0\u7b97\uff0c\u4e5f\u4e0d\u4f1a\u51fa\u73b0\u6027\u80fd\u9aa4\u964d\u7684\u95ee\u9898\u3002</p> <p>\u5c3d\u7ba1\u5f53\u65f6 x87 FPU \u5df2\u7ecf\u662f\u6bd4\u8f83\u53e4\u8001\u7684\u5355\u5143\uff0c\u6280\u672f\u7684\u4e3b\u6d41\u662f\u4f7f\u7528 SSE \uff08\u6216\u8005 AMD \u66f4\u65e9\u7684 3DNow!\uff09\u7b49\u65b0\u7684\u6d6e\u70b9\u8fd0\u7b97\u6307\u4ee4\uff0cAMD \u8fd8\u662f\u5bf9\u8fd9\u4e2a\u4e0d\u8d77\u773c\u7684\u6d6e\u70b9\u5355\u5143\u8fdb\u884c\u4e86\u7ec6\u81f4\u7684\u4f18\u5316\uff0c\u5e76\u4e14\u9886\u5148\u4e86 Intel 20 \u5e74\u3002\u53cd\u89c2 Intel\uff0c\u660e\u660e\u5df2\u7ecf\u77e5\u9053\u8fd9\u4e2a\u95ee\u9898\uff0c\u8fd8\u628a\u5b83\u5199\u8fdb\u4e86\u624b\u518c\u91cc\uff0c\u4f46\u662f\u5c31\u662f\u4e0d\u613f\u610f\u4f18\u5316\u81ea\u5df1\u7684\u786c\u4ef6\uff0c\u800c\u662f\u5c06\u5176\u8d23\u4efb\u63a8\u7ed9\u7a0b\u5e8f\u5458\uff0c\u8bf4\u662f\u7a0b\u5e8f\u5458\u8fd8\u5728\u4f7f\u7528 x87 \u6307\u4ee4\u7684\u9519\uff0c\u4ed6\u4eec\u5e94\u8be5\u5347\u7ea7\u81ea\u5df1\u7684\u6280\u672f\u6808\u3002AMD \u548c Intel \u5bf9\u5f85\u8fd9\u4e2a\u95ee\u9898\u6001\u5ea6\u7684\u53cd\u5dee\uff0c\u7ed3\u5408\u4e24\u5bb6\u4f01\u4e1a\u76ee\u524d\u53d1\u5c55\u7684\u73b0\u72b6\uff0c\u5b9e\u5728\u4ee4\u4eba\u550f\u5618\u4e0d\u5df2\u3002</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u5b9e\u9a8c_1","title":"\u5b9e\u9a8c","text":"<ol> <li>\u624b\u52a8\u63d2\u5165\u9700\u8981 Microcode Assist \u7684\u6307\u4ee4 cpuid</li> </ol> <p>\u6211\u5199\u4e86\u4e0b\u9762\u8fd9\u4e2a\u5c0f\u7a0b\u5e8f\uff0c\u4f7f\u7528 cpuid \u6765\u5f3a\u5236\u89e6\u53d1 Machine Clear\uff0c\u5e76\u671f\u671b\u5f97\u5230\u539f\u672c\u6b63\u5e38\u7684\u8fd0\u7b97\uff0c\u6dfb\u52a0 Machine Clear \u4e4b\u540e\u6027\u80fd\u964d\u4f4e\u7684\u73b0\u8c61</p> <pre><code>void trigger_machine_clear() {\n    uint32_t eax, ebx, ecx, edx;\n\n    asm volatile(\n        \"cpuid\"\n        : \"=a\"(eax), \"=b\"(ebx), \"=c\"(ecx), \"=d\"(edx)\n        : \"a\"(0)\n    );\n}\n\nint main() {\n    // Example function that performs floating point operations\n    double a = 1.0, b = 1.00000001;\n    for (int i = 0; i &lt; 1e8; ++i) {\n        a = a * b;\n#ifdef MACHINE_CLEAR\n        trigger_machine_clear();\n#endif\n    }\n    return 0;\n}\n</code></pre> <p>\u7ed3\u679c\u5982\u4e0b:</p> <p></p> <p>\u53ef\u4ee5\u770b\u51fa\u7ed3\u679c\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f\uff0c\u539f\u672c 0.3s \u5b8c\u6210\u7684\u8fd0\u7b97\uff0c\u73b0\u5728\u9700\u8981 4.2s \u624d\u80fd\u5b8c\u6210\uff0c\u6162\u4e86\u8d85\u8fc7 10 \u500d\u3002\u5728 eax = 0 \u65f6\uff0ccpuid \u6307\u4ee4\u53ea\u662f\u5f80\u5bc4\u5b58\u5668\u91cc\u5199\u5165 GenuineIntel \u8fd9\u4e2a\u5b57\u7b26\u4e32\u800c\u5df2\uff08\u53ef\u4ee5\u53c2\u8003\u62a5\u544a\u63a5\u4e0b\u6765\u7684\u90e8\u5206\uff09\uff0c\u5fae\u7801\u64cd\u4f5c uops \u6570\u91cf\u8981\u6bd4\u6d6e\u70b9\u6570\u5f02\u5e38\u5904\u7406\u5c11\uff0c\u56e0\u6b64\u5e76\u6ca1\u6709\u76f8\u5dee\u50cf\u51fa\u73b0 x87 \u6d6e\u70b9\u6570\u5f02\u5e38\u90a3\u4e48\u591a\u500d\u3002</p> <ol> <li>\u4f7f\u7528 Intel VTune Profiler \u8fdb\u884c\u6027\u80fd\u5206\u6790</li> </ol> <p>Intel VTune Profiler \u5bf9 Machine Clear \u548c FP Assists \u7684\u4ecb\u7ecd\u548c\u4f18\u5316\u5efa\u8bae:</p> <p></p> <p>\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u51fa Intel \u5b9e\u9645\u4e0a\u662f\u77e5\u9053 x87 \u5bf9\u4e8e denormal \u6570\u5904\u7406\u7684\u6027\u80fd\u95ee\u9898\u7684\uff0c\u5b83\u7ed9\u51fa\u7684\u5efa\u8bae\u5c31\u662f\u4e0d\u8981\u7528 x87.</p> <p>\u5728\u8fdb\u884c\u6709\u6d6e\u70b9\u6570\u5f02\u5e38\uff08subnormal\uff09\u7684\u5b9e\u9a8c\u65f6\uff0cVTune Profiler \u6d4b\u91cf\u51fa\u8fd9\u6761\u5173\u952e\u6307\u4ee4\u7684 CPI \u751a\u81f3\u8fbe\u5230\u4e86 57.5\uff0c\u8bf4\u660e\u8fd9\u6761\u6307\u4ee4\u5c24\u5176\u5730\u6162:</p> <p></p> <p>\u800c\u5982\u679c\u4e0d\u51fa\u73b0\u5f02\u5e38\u7684 normal \u60c5\u51b5\uff0c\u90a3\u4e48\u6700\u6162\u7684\u6307\u4ee4\u5c31\u662f\u53d7\u5236\u4e8e\u8fd0\u7b97\u7684 fmul, \u4f46 CPI \u4e5f\u4ec5\u4ec5\u53ea\u6709 8.6, \u76f8\u8f83 57.5 \u5c0f\u5f88\u591a:</p> <p></p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u4e00\u79cd\u6709\u529b\u7684\u9a8c\u8bc1\u65b9\u6cd5","title":"\u4e00\u79cd\u6709\u529b\u7684\u9a8c\u8bc1\u65b9\u6cd5","text":"<ol> <li>\u4f7f\u7528 Red Unlock \u89e3\u9501\u4f7f\u7528 Intel Goldmont \u5fae\u67b6\u6784\u7684 CPU</li> </ol> <p>\u5982\u679c\u95ee\u9898\u51fa\u5728\u5fae\u7801\u8f85\u52a9\uff0c\u90a3\u4e48\u6211\u4eec\u628a\u5fae\u7801\u673a\u5236\u6539\u6389\u4e0d\u5c31\u597d\u4e86\uff1f\u5c0f\u767d\u8001\u5e08\u8bf4\u8fc7 <code>If it runs, it can be hacked</code>. \u770b\u4f3c\u575a\u4e0d\u53ef\u6467\u7684\u5546\u4e1a\u673a\u5bc6\u2014\u2014\u5fae\u7801\uff0c\u53c8\u600e\u80fd\u9003\u8131\u88ab\u7834\u89e3\u7684\u547d\u8fd0\u5462\uff1fChip Red Pill \u56e2\u961f\u5728 2020 \u5e74\u6210\u529f\u7834\u89e3\u4e86 Intel Goldmont \u5fae\u67b6\u6784 CPU \u7684\u5fae\u7801\uff0c\u83b7\u53d6\u4e86\u5b8c\u6574\u7684 MSROM dump\uff0c\u5206\u6790\u51fa\u4e86\u5fae\u7801\u6307\u4ee4\u7684\u7ed3\u6784\u4e0e\u529f\u80fd\uff0c\u751a\u81f3\u8fd8\u53d1\u73b0\u4e86\u4fee\u6539\u5fae\u7801\u7684\u65b9\u6cd5\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u770b\u4f3c\u75af\u72c2\u7684\u60f3\u6cd5\u6210\u4e3a\u4e86\u53ef\u80fd\u3002\u6240\u4ee5\u5728\u8fd9\u4e00\u90e8\u5206\u6211\u60f3\u8ba8\u8bba\u4e00\u4e0b\uff0c\u5982\u679c\u6211\u4eec\u80fd\u591f\u4fee\u6539\u5fae\u7801\uff0c\u8be5\u5982\u4f55\u8fdb\u4e00\u6b65\u8ba4\u8bc1\u6211\u4eec\u7684\u731c\u60f3\u3002</p> <ol> <li>\u901a\u8fc7 hook \u52a8\u6001\u6d4b\u8bd5 x87 FPU \u5f02\u5e38\u65f6\u6240\u8c03\u7528\u7684\u5fae\u7801\u533a\u57df</li> </ol> <p>\u5c3d\u7ba1\u6709\u5b8c\u6574\u7684\u5fae\u7801\u5185\u5bb9\uff0cx86 \u6307\u4ee4\u7684\u5fae\u7801\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e5f\u5c31\u662f\u5fae\u7801\u6307\u4ee4\u7684\u5165\u53e3\u70b9\u4ecd\u672a\u63ed\u6653\u3002 \u60f3\u8981\u83b7\u5f97 x86 \u6307\u4ee4\uff0c\u6bd4\u5982 div \u7b49\u6307\u4ee4\u7684\u5177\u4f53\u5165\u53e3\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f:</p> <p>\u7b2c\u4e00\u79cd\u662f\u9759\u6001\u5206\u6790: xxx \u63d0\u5230\uff0cx86 \u6307\u4ee4\u7684\u5fae\u7801\u5165\u53e3\u4e3b\u8981\u4f4d\u4e8e\u5fae\u7801\u6587\u4ef6 U0-U1000 \u7684\u4f4d\u7f6e\uff0c\u4e14\u5728\u5fae\u7801\u5185\u90e8\u65e0\u8be5\u5730\u5740\u7684\u5f15\u7528\u3002\u5229\u7528 Ghidra \u53cd\u6c47\u7f16\u4ee3\u7801\uff0c\u9ad8\u624b\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u9006\u5411\u7684\u7ecf\u9a8c\u548c\u5bf9 x86 \u6307\u4ee4\u96c6\u6781\u6df1\u7684\u7406\u89e3\uff0c\u76f4\u63a5\u63a8\u6d4b\u5bf9\u5e94\u7684\u6307\u4ee4\u3002\u6bd4\u5982\u4e00\u4e9b\u4f1a\u6539\u52a8\u5bc4\u5b58\u5668\u7684\u6307\u4ee4\uff0c\u5c31\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\u63a8\u6d4b\u51fa\u6765\u3002\u4ee5 cpuid \u6307\u4ee4\u4e3a\u4f8b\uff0c\u8be5\u6307\u4ee4\u6709\u4e00\u9690\u85cf\u64cd\u4f5c\u6570 eax\uff0c\u82e5 eax == 0\uff0c\u5219\u4f1a\u5411 ebx, ecx, edx \u8fd9\u4e09\u4e2a\u5bc4\u5b58\u5668\u4e2d\u5199\u5165 GenuineIntel \u5b57\u7b26\u4e32\uff0c\u4ee3\u8868 CPU \u7684\u751f\u4ea7\u5382\u5546\u3002\u5728 Ghidra \u53cd\u6c47\u7f16\u7684\u4ee3\u7801\u4e2d\uff0c\u53ef\u4ee5\u5f88\u6e05\u6670\u5730\u770b\u51fa\u8fd9\u90e8\u5206\u7684\u903b\u8f91:</p> <p></p> <p>\u901a\u8fc7\u7acb\u5373\u6570\u4ee5\u53ca\u5bf9\u5bc4\u5b58\u5668\u7684\u64cd\u4f5c\uff0c\u4fbf\u53ef\u4ee5\u63a8\u6d4b\u51fa\u8be5\u5fae\u7801\u64cd\u4f5c\u5c5e\u4e8e cpuid \u6307\u4ee4\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u5bf9\u5206\u6790\u8005\u7684\u8981\u6c42\u6781\u9ad8\uff0c\u4e14\u5fae\u7801\u4ecd\u6709\u5f88\u591a\u76ee\u524d\u5c1a\u672a\u63a2\u660e\u7684\u64cd\u4f5c\uff0cGhidra \u53cd\u6c47\u7f16\u51fa\u7684\u903b\u8f91\u4e5f\u4e0d\u662f\u5f88\u6e05\u6670\uff0c\u56e0\u6b64\u5f88\u96be\u5206\u6790\u51fa\u7ed3\u679c\u3002\u6211\u60f3\u8fd9\u4e5f\u662f\u539f\u7834\u89e3\u56e2\u961f\u4ec5\u4ec5\u516c\u5f00\u4e86\u6781\u5c11\u6570 x86 \u6307\u4ee4\u5165\u53e3\u70b9\u7684\u539f\u56e0\u3002</p> <p>\u6211\u6700\u5f00\u59cb\u4e5f\u60f3\u8fc7\u786c\u7740\u5934\u76ae\u76f4\u63a5\u53bb\u9006\u5411\uff0c\u5e76\u4e14\u60f3\u5230\u4e86\u4e0b\u9762\u7684\u4e24\u79cd\u601d\u8def:</p> <ol> <li>\u4ece\u7acb\u5373\u6570\u5165\u624b</li> </ol> <p>\u5728 hard_imm.txt \u4e2d\u53ef\u4ee5\u770b\u5230\uff0cIEEE 754 \u7f16\u7801\u7684 32 \u4f4d\u6d6e\u70b9\u6570 INF 0x7f800000 \u548c NaN 0x7fc0000 \u90fd\u5b58\u5728\uff0c\u5982\u679c\u80fd\u627e\u5230\u5bf9\u8fd9\u4e9b\u7acb\u5373\u6570\u7684\u5f15\u7528\uff0c\u6216\u8bb8\u5c31\u80fd\u627e\u5230\u4e0e\u6d6e\u70b9\u6570\u5904\u7406\u76f8\u5173\u7684\u5fae\u7801\u64cd\u4f5c\u3002</p> <p>\u53ef\u60dc\u7684\u662f\uff0c\u76f4\u63a5\u641c\u7d22\u8fd9\u4e9b\u7acb\u5373\u6570\uff0c\u8981\u4e48\u662f\u65e0\u7ed3\u679c\uff0c\u8981\u4e48\u662f\u627e\u4e0d\u5230\u6709\u610f\u4e49\u7684\u5fae\u7801\u64cd\u4f5c\u3002\u8fd9\u662f\u56e0\u4e3a\u5728\u5fae\u7801\u7a0b\u5e8f\u4e2d\uff0c\u7531\u4e8e\u7ecf\u5e38\u8981\u8bfb\u53d6\u548c\u8bbe\u7f6e\u72b6\u6001\u4f4d\uff0c\u91cc\u9762\u5b58\u5728\u5927\u91cf\u7684\u4f4d\u8fd0\u7b97\uff0c\u8fd9\u4e5f\u5c31\u662f\u8bf4 INF \u548c NaN \u7684\u5224\u65ad\u53ef\u80fd\u662f\u901a\u8fc7\u591a\u6b21\u4f4d\u8fd0\u7b97\u8fdb\u884c\u68c0\u6d4b\u7684\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u4e0e\u7acb\u5373\u6570\u8fdb\u884c\u6bd4\u8f83\u3002\u6211\u641c\u7d22\u4e86\u7acb\u5373\u6570\u7684\u4e00\u90e8\u5206\uff0c\u6bd4\u5982 0x7ff, 0x7fc \u8fd9\u6837\u7684\u7acb\u5373\u6570\uff0c\u4ee5\u53ca 0x (\u5341\u8fdb\u5236 52) \u8fd9\u6837\u7684\u504f\u79fb\u91cf\uff0c\u4ecd\u672a\u627e\u5230\u3002</p> <p>\u6211\u8fd8\u641c\u7d22\u4e86 Pi \u8fd9\u6837\u7684\u5e38\u6570\uff0c\u8fd9\u662f\u56e0\u4e3a\u5728 x87 \u4f9d\u65e7\u662f\u72ec\u7acb\u4e8e x86 \u5904\u7406\u5668\u7684\u6d6e\u70b9\u5355\u5143\uff0c\u4e5f\u5c31\u662f 8087, 80287 \u65f6\u4ee3\uff0cPi, e, ln2 \u8fd9\u6837\u7684\u5e38\u6570\u90fd\u662f\u7f16\u7801\u5728 x87 ROM \u5f53\u4e2d\u7684\uff0c\u751a\u81f3\u627e\u5230\u7231\u597d\u8005\u6839\u636e die shot \u63a8\u6d4b ROM \u5185\u5bb9\u7684\u6587\u7ae0: . \u4f46\u662f\uff0c\u8fd9\u4e9b\u5e38\u6570\u5e76\u672a\u7f16\u7801\u4e8e\u5fae\u7801 ROM \u4e2d\uff0c\u6216\u8bb8\u5df2\u7ecf\u505a\u5728\u8fd0\u7b97\u5355\u5143\u4e2d\u4e86\u3002</p> <ol> <li>\u4ece\u5f02\u5e38\u5165\u624b</li> </ol> <p>\u539f\u7834\u89e3\u56e2\u961f\u5728\u516c\u5e03\u7684\u4ee3\u7801\u4e2d\u627e\u5230\u4e86\u751f\u6210 #GP, #UD, #MC \u8fd9\u4e09\u4e2a\u5f02\u5e38\u7684\u5fae\u7801\u5165\u53e3\u70b9\uff0c\u5e76\u6307\u51fa sigevent \u64cd\u4f5c\u4e0e\u5176\u76f4\u63a5\u76f8\u5173\uff0c\u4f46 sigevent \u7684\u7acb\u5373\u6570\u4e0e\u5f02\u5e38\u7684\u5177\u4f53\u5173\u7cfb\u5c1a\u4e0d\u660e\u6670\u3002</p> <p>\u4e0e x87 FPU \u76f8\u5173\u7684\u5f02\u5e38\u6709 #OF \u6ea2\u51fa\u5f02\u5e38\uff0c\u4ee5\u53ca # x87 FPU \u5f02\u5e38\u3002</p> <p>\u7136\u800c\uff0c\u641c\u7d22\u5168\u90e8\u7684 sigevent \u64cd\u4f5c\uff0c\u53ef\u4ee5\u53d1\u73b0\u540e\u9762\u7684\u7acb\u5373\u6570\u4e0d\u5c3d\u76f8\u540c\uff0c\u4e0d\u80fd\u901a\u8fc7\u67d0\u4e2a\u5f02\u5e38\u7684\u9891\u6b21\u5206\u6790\u51fa\u8fd9\u4e2a\u5f02\u5e38\u53ef\u80fd\u662f\u54ea\u4e2a\u3002</p> <p>\u7efc\u4e0a\uff0c\u8fd9\u4e24\u79cd\u601d\u8def\u867d\u7136\u5f88\u6709\u5e0c\u671b\uff0c\u4f46\u8fd8\u662f\u6781\u5176\u56f0\u96be\u7684\uff0c\u6700\u7ec8\u6211\u6ca1\u6709\u5f97\u5230\u7ed3\u679c\u3002</p> <p>\u7b2c\u4e8c\u79cd\u662f\u52a8\u6001\u6d4b\u8bd5: xxxx \u63d0\u5230\uff0c\u53ef\u4ee5\u4f7f\u7528\u63d2\u6869+\u6a21\u7cca\u6d4b\u8bd5\u7684\u65b9\u5f0f\u6765\u627e\u5165\u53e3\u3002e \u8fd9\u79cd\u65b9\u5f0f\u9996\u5148\u8bbe\u8ba1\u4e86\u4e00\u6bb5\u5fae\u7801\u64cd\u4f5c\u201c\u51fd\u6570\u201d\uff0c\u53ef\u4ee5\u88ab\u8c03\u7528\uff0c\u4e14\u53ef\u901a\u8fc7\u6027\u80fd\u5bc4\u5b58\u5668\u89c2\u6d4b\u51fa\u662f\u5426\u88ab\u6267\u884c\uff0c\u7136\u540e\u4e0d\u65ad\u904d\u5386\u5165\u53e3\u70b9\uff0c\u5c06\u5165\u53e3\u70b9\u4fee\u6539\u4e3a\u8df3\u8f6c\u5230\u8be5\u6307\u4ee4\u7684\u5fae\u7801\u64cd\u4f5c\u3002\u8fd9\u6837\u4e00\u65e6\u8bbe\u8ba1\u7684\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u5c31\u8bf4\u660e\u627e\u5230\u4e86\u8be5 x86 \u6307\u4ee4\u5bf9\u5e94\u7684\u5165\u53e3\u70b9\u3002</p> <p>\u6211\u8ba4\u4e3a\u8fd9\u79cd\u65b9\u5f0f\u867d\u7136\u66b4\u529b\uff0c\u4f46\u5e94\u8be5\u4e5f\u662f\u76ee\u524d\u7684\u552f\u4e00\u53ef\u884c\u89e3\u4e86\u3002\u4e0d\u8fc7\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u6709\u4e00\u6b3e Intel Goldmont \u5fae\u67b6\u6784\u7684 CPU \u5e76\u4e14\u8fdb\u884c Red Unlock\uff0c\u5728 UEFI \u4e2d\u8fdb\u884c\u6d4b\u8bd5\uff0c\u6240\u4ee5\u6211\u6682\u65f6\u8fd8\u65e0\u6cd5\u8fdb\u884c\u6d4b\u8bd5\u3002\uff08\u597d\u5728 Goldmont \u6709\u5f88\u591a\u4f4e\u7aef\u4ea7\u54c1\u7ebf\u7684 CPU\uff0c\u60f3\u8981\u83b7\u53d6\u4e00\u4e2a\u6d4b\u8bd5\u7528\u7684\u786c\u4ef6\u53ef\u4ee5\u5728 200 \u5143\u4ee5\u5185\u89e3\u51b3\uff09</p> <ol> <li>\u4fee\u6539\u76f8\u5173\u5fae\u7801\uff0c\u53d6\u6d88\u5f02\u5e38\u5904\u7406</li> </ol> <p>\u66fe\u4eca\u6211\u4eec\u8ba4\u4e3a\u5fae\u7801\u8fd9\u79cd\u4e1c\u897f\u662f\u4e0d\u53ef\u80fd\u4fee\u6539\u7684\uff0c\u4f46\u73b0\u5728\u5fae\u7801\u5185\u5bb9\u5df2\u7ecf\u88ab\u7834\u89e3\u5e76\u5206\u6790\u51fa\u6765\uff0c\u8fde\u5e26\u7740 Intel \u5b98\u65b9\u5bf9\u5fae\u7801\u66f4\u65b0\u7684\u7a0b\u5e8f\u903b\u8f91\u4e5f\u540c\u6837\u88ab\u7834\u89e3\uff0c\u90a3\u8fd8\u6709\u4ec0\u4e48\u4e0d\u53ef\u80fd\u7684\u5462\uff1f\u6b64\u5916\uff0c\u539f\u7834\u89e3\u56e2\u961f\u751a\u81f3\u8fd8\u4ece\u4e00\u6761\u7c7b\u4f3c jmp rax \uff08\u53ef\u4ee5\u5728\u5fae\u7801\u4e2d\u505a\u4efb\u610f\u63a7\u5236\u6d41\u8df3\u8f6c\uff09\u7684\u5fae\u7801\u64cd\u4f5c\uff0c\u6316\u6398\u51fa\u4e86\u4e24\u6761\u9690\u85cf x86 \u6307\u4ee4\u3002\u5229\u7528\u8fd9\u4e24\u6761\u6307\u4ee4\uff0c\u5373\u4f7f\u6ca1\u6709 Red Unlock \u6f0f\u6d1e\uff0c\u4e5f\u53ef\u4ee5\u5728 UEFI \u4e0b\u9762\u8fdb\u884c\u5fae\u7801\u4fee\u6539\u3002</p> <p>\u8fd9\u6837\u4e00\u6765\uff0c\u53ea\u8981\u627e\u5230 x87 \u5f02\u5e38\u76f8\u5173\u7684\u5fae\u7801\u5904\u7406\u64cd\u4f5c\uff0c\u7136\u540e\u5c06\u5176\u4fee\u6539\u6210\u76f4\u63a5 uret \uff08\u5fae\u7801\u9000\u51fa\uff09\uff0c\u6216\u8005\u8df3\u8f6c\u5230 cpuid \u7684\u5fae\u7801\u7a0b\u5e8f\u3002</p> <p>\u5982\u679c\u6211\u4eec\u63d2\u6869\u7684\u786e\u627e\u5230\u4e86\u5bf9\u5e94\u7684\u5fae\u7801\u7a0b\u5e8f\uff0c\u5e76\u4e14\u6210\u529f\u4fee\u6539\u4e86 CPU \u5bf9 x87 \u5f02\u5e38\u5904\u7406\u7684\u884c\u4e3a\uff0c\u90a3\u4e48\u5c31\u8bc1\u636e\u786e\u51ff\uff0c\u53ef\u4ee5\u5f15\u8bc1\u6211\u4eec\u7684\u731c\u60f3\u4e86\u3002</p> <ol> <li>\u91cd\u65b0\u8fdb\u884c\u5b9e\u9a8c\u6d4b\u8bd5</li> </ol> <p>\u5728\u4fee\u6539\u5fae\u7801\uff08\u4e3b\u8981\u662f\u8ba9\u5fae\u7801\u64cd\u4f5c\u53d8\u5c11\uff09\u4e4b\u540e\uff0c\u6211\u4eec\u5c06\u9884\u671f\u89c2\u5bdf\u5230\u8fdb\u884c denormal / subnormal \u76f8\u5173\u6d6e\u70b9\u6570\u8fd0\u7b97\u65f6\uff0cx87 \u6307\u4ee4\u901f\u5ea6\u53d8\u5feb\uff0c\u4e14\u4e0e sse \u6307\u4ee4\u63d2\u5165 cpuid \u6307\u4ee4\u76f8\u8fd1\u3002 \u8fd9\u6837\uff0c\u6211\u4eec\u4fbf\u4e0d\u4ec5\u53ef\u4ee5\u8bc1\u660e x87 \u6307\u4ee4\u8017\u65f6\u5f02\u5e38\u539f\u56e0\u4e0e Intel CPU \u5185\u90e8\u7684 Microcode Assist \u673a\u5236\u6709\u5173\uff0c\u8fd8\u53ef\u83b7\u77e5\u5904\u7406 x87 \u5f02\u5e38\u7684\u5fae\u7801\u975e\u5e38\u590d\u6742\uff0c\u9700\u8981\u6781\u9ad8\u7684\u5468\u671f\u6570\u624d\u53ef\u4ee5\u5b8c\u6210\u3002</p>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u603b\u7ed3","title":"\u603b\u7ed3","text":"<p>\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u6027\u80fd\u95ee\u9898\uff0c\u5c24\u5176\u662f\u5728\u5e95\u6570\u8f83\u5927\u65f6\uff0c\u5b9e\u9645\u4e0a\u662f\u7531\u4e8e x87 \u6d6e\u70b9\u6570\u5355\u5143\u5904\u7406\u5f02\u5e38\uff08\u5982 INF \u548c NaN\uff09\u65f6\u4f9d\u8d56\u5fae\u7801\u8f85\u52a9\uff0c\u5f15\u8d77\u7684 Machine Clear \u6253\u65ad\u6307\u4ee4\u89e3\u7801\u548c\u6d41\u6c34\u7ebf\u4e71\u5e8f\u6267\u884c\uff0c\u81f4\u4f7f CPU \u7684\u6307\u4ee4\u7ea7\u5e76\u884c\u4e27\u5931\uff0c\u4ece\u800c\u663e\u8457\u964d\u4f4e\u4e86\u6027\u80fd\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cSSE \u548c AVX \u6307\u4ee4\u96c6\u901a\u8fc7\u786c\u4ef6\u4f18\u5316\u89e3\u51b3\u4e86\u8fd9\u4e00\u95ee\u9898\uff0c\u907f\u514d\u4e86\u6027\u80fd\u74f6\u9888\u3002\u5728 AMD \u7684\u5904\u7406\u5668\u4e2d\uff0cx87 \u7684\u5f02\u5e38\u5904\u7406\u5f97\u5230\u4e86\u66f4\u597d\u7684\u4f18\u5316\uff0c\u56e0\u6b64\u6027\u80fd\u672a\u53d7\u660e\u663e\u5f71\u54cd\u3002</p> <p>\u4e0a\u9762\u7684\u5b9e\u9a8c\u4e0e\u5206\u6790\u542f\u53d1\u6211\u4eec\u5728\u672a\u6765\u7684\u7f16\u7a0b\u65f6:</p> <ul> <li>\u5c3d\u53ef\u80fd\u4f7f\u7528\u66f4\u65b0\u7684\u7f16\u8bd1\u5668\uff0c\u4ee5\u53ca\u6700\u65b0\u7684 CPU \u7279\u6027</li> <li>\u5728\u9488\u5bf9\u67d0\u6b3e CPU \u8fdb\u884c\u4f18\u5316\u65f6\uff0c\u53ef\u4ee5\u5148\u5bf9\u5176\u5fae\u67b6\u6784\u8fdb\u884c\u5256\u6790</li> <li>\u9047\u5230\u6027\u80fd\u95ee\u9898\u65f6\uff0c\u591a\u4f7f\u7528 Profiler \u6bd4\u5982 perf, Intel VTune \u6765\u5206\u6790\u95ee\u9898</li> </ul>"},{"location":"blog/2024/11/16/x870-fpu-performance-anomaly/#\u53c2\u8003\u6587\u732e","title":"\u53c2\u8003\u6587\u732e","text":"<ul> <li>8087 \u534f\u5904\u7406\u5668\u7ed3\u6784\u6df1\u5165\u63a2\u7a76: https://www.righto.com/2018/08/inside-die-of-intels-8087-coprocessor.html</li> <li>8086 \u4e0e 8087 \u5904\u7406\u5668\u7684\u540c\u6b65: https://stackoverflow.com/questions/42543905/what-are-8086-esc-instruction-opcodes</li> <li>Intel \u6d6e\u70b9\u6570\u53c2\u8003\u624b\u518c: https://www.intel.com/content/www/us/en/developer/articles/technical/floating-point-reference-sheet-for-intel-architecture.html</li> <li>Intel 64 \u4e0e IA-32 \u4f18\u5316\u624b\u518c: https://www.intel.com/content/www/us/en/content-details/671488/intel-64-and-ia-32-architectures-optimization-reference-manual-volume-1.html</li> <li>AMD Opteron \u67b6\u6784\u63a2\u7a76: https://web.archive.org/web/20241002032238/http://www.chip-architect.com/news/2003_09_21_Detailed_Architecture_of_AMDs_64bit_Core.html</li> </ul>"},{"location":"courses/24fall/applied-operations-research/","title":"\u5e94\u7528\u8fd0\u7b79\u5b66\u57fa\u7840","text":""},{"location":"courses/24fall/assembly-and-interface/","title":"\u6c47\u7f16\u4e0e\u63a5\u53e3","text":"<p>\u8bfe\u7a0b\u7b80\u4ecb</p> <p>\u672c\u8bfe\u7a0b\u7531 \u8521\u94ed \u8001\u5e08\u4e3b\u8bb2\uff0c\u8bfe\u7a0b\u5185\u5bb9\u6b63\u5982\u5176\u540d\uff0c\u9c9c\u660e\u5730\u5206\u6210\u4e86\u4e24\u4e2a\u6a21\u5757:</p> <ul> <li> <p>\u6c47\u7f16\u6a21\u5757: \u4e3b\u8981\u5728\u524d 8 \u5468\u8bb2\u6388\uff0c\u8986\u76d6 x86 \u6c47\u7f16\u8bed\u8a00\u7684\u57fa\u672c\u5185\u5bb9\u3002\u76f8\u8f83\u4e8e\u5c0f\u767d\u8001\u5e08\u7684\u300a\u6c47\u7f16\u8bed\u8a00\u300b\uff0c\u672c\u8bfe\u7a0b\u4f1a\u989d\u5916\u6269\u5c55\u4fdd\u62a4\u6a21\u5f0f\u3001\u957f\u6a21\u5f0f\u7b49\u6709\u5173 32 \u4f4d\u548c 64 \u4f4d x86 \u7cfb\u7edf\u7684\u5185\u5bb9\uff0c\u8fd8\u6d89\u53ca\u4e86 x86 \u6c47\u7f16\u7684\u7f16\u7801\u89c4\u5219\uff0c\u51fd\u6570\u8c03\u7528\u89c4\u5219\uff0c\u5185\u5b58\u5bfb\u5740\u65b9\u5f0f\u7b49\u7b49\u3002 \u4f46\u540c\u65f6\uff0c\u672c\u8bfe\u7a0b\u8bbe\u8ba1\u4e0a\u624b\u7f16\u5199\u6c47\u7f16\u7a0b\u5e8f\u7684\u90e8\u5206\u53ea\u6709\u7b2c\u4e00\u4e2a\u5927\u4f5c\u4e1a\uff0c\u4e0d\u4f1a\u50cf\u300a\u6c47\u7f16\u8bed\u8a00\u300b\u4e00\u6837\u6709\u5f88\u591a\u7ec3\u624b\u7684\u673a\u4f1a\u3002\u8fd9\u4e00\u90e8\u5206\u9002\u5408\u9009\u4fee\u8fc7\u300a\u6c47\u7f16\u8bed\u8a00\u300b\u6216\u300a\u6c47\u7f16\u8bed\u8a00\u7a0b\u5e8f\u8bbe\u8ba1\u57fa\u7840\u300b\u7684\u540c\u5b66\u6765\u8fdb\u9636\u3002</p> </li> <li> <p>\u63a5\u53e3\u6a21\u5757: \u4e3b\u8981\u5728\u540e 8 \u5468\u8bb2\u6388\uff0c\u4e3b\u8981\u5305\u62ec 8088 / 8086 \u65f6\u4ee3\u7684\u5e38\u89c1\u786c\u4ef6\u63a5\u53e3\u82af\u7247: 82C55 \u901a\u4fe1\u82af\u7247\uff0c8254 \u8ba1\u6570\u82af\u7247\uff0c16550 \u65f6\u949f\u82af\u7247\u4ee5\u53ca DAC0830 \u6570\u6a21\u8f6c\u6362\u82af\u7247\u3002\u8fd9\u4e00\u90e8\u5206\u504f\u786c\u4ef6\uff0c\u9700\u8981\u4e00\u5b9a\u300a\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1\u300b\u7684\u57fa\u7840\u3002\u8bfe\u7a0b\u4f1a\u4ecb\u7ecd\u4ee5\u4e0a\u82af\u7247\u7684\u5668\u4ef6\u6784\u6210\uff0c\u5f15\u811a\u529f\u80fd\uff0c\u8fd0\u884c\u65b9\u5f0f\u4ee5\u53ca\u4f7f\u7528 8088 / 8086 \u5fae\u5904\u7406\u5668\u8fdb\u884c\u7f16\u7a0b\u7684\u65b9\u6cd5\u3002\u8fd9\u4e00\u90e8\u5206\u4f1a\u8ba9\u6211\u4eec\u5bf9 x86 \u5904\u7406\u5668 <code>in, out</code> \u6307\u4ee4\u6709\u66f4\u6df1\u7684\u7406\u89e3\uff0c\u540c\u65f6\u8865\u5145\u4e00\u4e9b\u8f6f\u786c\u4ef6\u7ed3\u5408\u7684\u77e5\u8bc6\u3002</p> </li> </ul> <p>\u8bfe\u7a0b\u8003\u6838</p> <p>\u5e73\u65f6\u5360\u6bd4 30%, \u671f\u672b\u5360\u6bd4 70%\u3002 \u5e73\u65f6\u6210\u7ee9\u7531\u4e24\u6b21 Project \u7ec4\u6210\uff0c\u6bcf\u4e2a Project \u57fa\u672c\u4e0a\u6709\u534a\u4e2a\u5b66\u671f\u7684\u65f6\u95f4\u6765\u5b8c\u6210\u3002\u671f\u672b\u8003\u8bd5\u7684\u5f62\u5f0f\u7531\u8001\u5e08\u5728\u8bfe\u4e0a\u4e0e\u540c\u5b66\u4eec\u534f\u5546\uff0c\u8001\u5e08\u8bf4\u95ed\u5377\u8003\u8bd5\u4f1a\u63d0\u4f9b\u5fc5\u8981\u7684\u4fe1\u606f\uff0c\u65e0\u9700\u6b7b\u8bb0\u786c\u80cc\uff0c\u540c\u65f6\u9898\u76ee\u4f1a\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u6b64\u672c\u5b66\u671f\u540c\u5b66\u4eec\u9009\u62e9\u4e86\u95ed\u5377\u5f62\u5f0f\u3002</p> \u8003\u540e\u611f\u60f3 <p>\u548c\u5386\u5e74\u9898\u6574\u4f53\u5f88\u50cf, \u751a\u81f3\u586b\u7a7a\u8fd8\u6709\u51e0\u9053\u539f\u9898. \u4f46\u662f\u6211\u505a\u5f97\u4e0d\u592a\u597d, \u6709\u4e9b\u7ec6\u8282\u5fd8\u8bb0\u4e86\u5c31\u6ca1\u529e\u6cd5\u505a\u4e86. \u53cd\u6b63\u6211\u5df2\u7ecf\u628a\u8bb0\u4f4f\u7684\u77e5\u8bc6\u5c3d\u6700\u5927\u52aa\u529b\u4ea4\u4ed8\u4e86\ud83e\udd79</p> <p>\u771f\u7684\u611f\u89c9\u8fd9\u95e8\u8bfe 4.5 \u5b66\u5206, \u671f\u672b\u5360\u6bd4 70% \u6709\u70b9\u538b\u529b\u592a\u5927\u4e86, \u548c\u8ba1\u7b97\u673a\u7f51\u7edc\u5750\u4e00\u684c.</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-1/","title":"\u9884\u5907\u77e5\u8bc6","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-1/#\u8fdb\u5236\u8f6c\u6362","title":"\u8fdb\u5236\u8f6c\u6362","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-1/#\u7f16\u7801\u683c\u5f0f-bcd","title":"\u7f16\u7801\u683c\u5f0f: BCD","text":"<p>BCD (Binary-Coded Decimal) \u662f\u4e00\u79cd\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u5341\u8fdb\u5236\u6570\u7684\u65b9\u6cd5\uff0c\u5e38\u7528\u4e8e\u6570\u5b57\u663e\u793a\u548c\u5b58\u50a8\u3002\u7531\u4e8e\u5386\u53f2\u9057\u7559\u95ee\u9898\uff0c\u5728 x86 \u6307\u4ee4\u4e2d\u4ecd\u7136\u6709\u5f88\u591a\u64cd\u4f5c BCD \u6570\u5b57\u7684\u6307\u4ee4\u3002</p> <p>BCD \u6709\u4e24\u79cd\u683c\u5f0f: Unpacked BCD (\u975e\u7ec4\u5408\u578b BCD) \u548c Packed BCD (\u7ec4\u5408\u578b BCD), \u4ed6\u4eec\u7684\u7f16\u7801\u65b9\u5f0f\u5982\u4e0b:</p> <ul> <li> <p>Unpacked BCD: \u6bcf\u4e2a\u5341\u8fdb\u5236\u6570\u90fd\u7528\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\uff0c\u6bcf\u4e2a\u5b57\u8282\u4f4e 4 \u4f4d\u8868\u793a\u5341\u8fdb\u5236\u6570\uff0c\u9ad8\u4f4d\u8bbe\u4e3a 0.</p> </li> <li> <p>Packed BCD: \u5c06\u4e24\u4e2a\u5341\u8fdb\u5236\u6570\u5408\u6210\u4e00\u4e2a\u5b57\u8282\u6765\u8868\u793a\uff0c\u9ad8 4 \u4f4d\u8868\u793a\u9ad8\u4f4d\u5341\u8fdb\u5236\u6570\uff0c\u4f4e 4 \u4f4d\u8868\u793a\u4f4e\u4f4d\u5341\u8fdb\u5236\u6570\u3002</p> </li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-1/#ieee-754-\u6807\u51c6","title":"IEEE 754 \u6807\u51c6","text":"<p>\u63a8\u8350\u9605\u8bfb\u8fd9\u4e2a\u53c2\u8003\u624b\u518c\uff0c\u91cc\u9762\u4ecb\u7ecd\u4e86 IEEE 754 \u7f16\u7801\u683c\u5f0f\uff0c\u4ee5\u53ca Intel \u5904\u7406\u5668\u4e0a\u6d6e\u70b9\u8fd0\u7b97\u7684\u5168\u6d41\u7a0b: Floating-Point Reference Sheet for Intel\u00ae Architecture. \u4e0b\u56fe\u622a\u81ea\u8be5\u624b\u518c:</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-1/#\u7f16\u7801\u683c\u5f0f","title":"\u7f16\u7801\u683c\u5f0f","text":"<ul> <li>32 \u4f4d\u5355\u7cbe\u5ea6\u6d6e\u70b9\u6570: 1\u4f4d\u7b26\u53f7\u4f4d + 8\u4f4d\u504f\u7f6e\u6307\u6570 + 23\u4f4d\u5c3e\u6570</li> </ul> S Exponent Significand <ul> <li> <p>64 \u4f4d\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u6570: 1\u4f4d\u7b26\u53f7\u4f4d + 11\u4f4d\u504f\u7f6e\u6307\u6570 + 52\u4f4d\u5c3e\u6570</p> </li> <li> <p>80 \u4f4d\u6269\u5c55\u7cbe\u5ea6\u6d6e\u70b9\u6570: 1\u4f4d\u7b26\u53f7\u4f4d + 15\u4f4d\u504f\u7f6e\u6307\u6570 + 64\u4f4d\u5c3e\u6570</p> <ul> <li>\u4e3b\u8981\u7528\u4e8e 8087 \u7b49 x87 \u6d6e\u70b9\u6570\u534f\u5904\u7406\u5668\u4e2d</li> </ul> </li> </ul> <p>\u603b\u7ed3\u4e00\u4e0b:</p> \u6570\u636e\u7c7b\u578b \u7b26\u53f7\u4f4d\u957f\u5ea6 \u6307\u6570\u4f4d\u957f\u5ea6 \u6307\u6570\u504f\u7f6e\u91cf \u5c3e\u6570\u4f4d\u957f\u5ea6 \u603b\u4f4d\u6570 \u6307\u9488\u7c7b\u578b \u5355\u7cbe\u5ea6 1 8 \\(127 = 2^7-1\\) 23 32 <code>ptr dword</code> \u53cc\u7cbe\u5ea6 1 11 \\(1023 = 2^{10}-1\\) 52 64 <code>ptr qword</code> \u6269\u5c55\u7cbe\u5ea6 1 15 \\(16383 = 2^{14}-1\\) 64 80 <code>ptr tbyte</code>"},{"location":"courses/24fall/assembly-and-interface/chapter-1/#\u7279\u6b8a\u8868\u793a","title":"\u7279\u6b8a\u8868\u793a","text":"<ol> <li> <p>\u8d1f\u6570:</p> <p>IEEE 754 \u4e2d\uff0c\u8d1f\u6570\u7684\u8868\u793a\u65b9\u6cd5\u662f\u5c06\u7b26\u53f7\u4f4d\u8bbe\u4e3a 1\uff0c\u5176\u4f59\u4f4d\u6309\u7167\u6b63\u6570\u7684\u89c4\u5219\u8fdb\u884c\u7f16\u7801\uff0c\u5e76\u4e0d\u6d89\u53ca\u5230\u8d1f\u6570\u7684\u8865\u7801\u8868\u793a\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u4ea7\u751f\u4e86\u6b63\u8d1f 0 \u7684\u533a\u522b\u3002</p> </li> <li> <p>\u975e\u89c4\u683c\u6570\u4e0e\u65e0\u7a77\u5927:</p> \u7b26\u53f7\u4f4d \u6307\u6570\u4f4d \u5c3e\u6570\u4f4d \u7c7b\u578b \u6570\u503c \u4f8b\u5b50 (32\u4f4d) \\(\\pm\\) 0 \u975e\u5168 0 \u975e\u89c4\u683c\u6570 \\((-1)^s \\times 2^{-126} \\times 0.\\text{\u5c3e\u6570}\\) 0x0000 00010x8000 0001 \\(\\pm\\) \u5168 1 0 \u65e0\u7a77\u5927 \\(\\pm \\infty\\) 0xff80 00000x7f80 0000 \\(\\pm\\) \u5168 1 \u975e\u5168 0Quiet = 1 qNaN \u65e0\u6548\u6570\u503c 0x7fc0 0000 1 \u5168 1 \u975e 0Quiet = 1 R Ind(qNaN) \u65e0\u6548\u6570\u503c 0xffc0 0000 \\(\\pm\\) \u5168 1 \u975e\u5168 0Quiet = 0 sNaN \u65e0\u6548\u6570\u503c 0x7f80 0001 <p>\u6ce8: \u5c3e\u6570\u6700\u9ad8\u4f4d\u4e3a Quiet / Signal \u4f4d.</p> <ul> <li>sNaN (Signaling NaN): \u4f1a\u5f15\u53d1\u5f02\u5e38\u7684 NaN, \u7528\u4e8e\u6807\u8bb0\u672a\u521d\u59cb\u5316\u7684\u503c\uff0c\u6216\u8005\u65e0\u6548\u7684\u8fd0\u7b97\u7ed3\u679c.</li> <li>qNaN (Quiet NaN): \u4e0d\u4f1a\u5f15\u53d1\u5f02\u5e38\u7684 NaN, \u7528\u6765\u8868\u793a\u672a\u5b9a\u4e49\u7684\u8fd0\u7b97\u7ed3\u679c.</li> <li>R Ind (Real Indefinite): \u8868\u793a\u975e\u6cd5\u6d6e\u70b9\u6570\u8fd0\u7b97\u7684\u7ed3\u679c\uff0c\u6bd4\u5982 0.0 / 0.0 \u6216\u8005 \\(\\infty - \\infty\\).</li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-1/#\u6d6e\u70b9\u6570\u8fd0\u7b97","title":"\u6d6e\u70b9\u6570\u8fd0\u7b97","text":"<p>\u6d6e\u70b9\u6570\u4e2d\uff0c\u7531\u4e8e IEEE 754 \u4f7f\u7528\u7684\u662f\u7c7b\u4f3c\u79d1\u5b66\u8ba1\u6570\u6cd5\u7684\u8868\u793a\u65b9\u6cd5\uff0c\u518d\u7ed3\u5408\u4e8c\u8fdb\u5236\u7684\u7279\u70b9\uff0c\u4f7f\u5f97\u6d6e\u70b9\u6570\u4e58\u9664\u6cd5\u8fd0\u7b97\u6bd4\u52a0\u51cf\u6cd5\u8981\u7b80\u5355\u4e00\u4e9b\u3002</p> <p>\u4e58\u9664\u6cd5:</p> <ol> <li>\u7b26\u53f7\u8ba1\u7b97\uff1a\u6839\u636e\u4e24\u4e2a\u6d6e\u70b9\u6570\u7684\u7b26\u53f7\u4f4d\u786e\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7\u3002</li> <li>\u6307\u6570\u76f8\u51cf\uff1a\u5c06\u88ab\u9664\u6570\u7684\u6307\u6570\u51cf\u53bb\u9664\u6570\u7684\u6307\u6570\uff0c\u540c\u65f6\u52a0\u4e0a\u504f\u79fb\u503c\u3002</li> <li>\u5c3e\u6570\u76f8\u9664\uff1a\u5c06\u88ab\u9664\u6570\u7684\u5c3e\u6570\u90e8\u5206\u9664\u4ee5\u9664\u6570\u7684\u5c3e\u6570\uff0c\u901a\u5e38\u9700\u8981\u589e\u52a0\u7cbe\u5ea6\u6765\u8ba1\u7b97\u5546\u3002</li> <li>\u89c4\u683c\u5316\uff1a\u5982\u679c\u5546\u7684\u5c3e\u6570\u4e0d\u5728 [1, 2) \u8303\u56f4\u5185\uff0c\u9700\u8981\u8fdb\u884c\u89c4\u683c\u5316\u8c03\u6574\u5e76\u4fee\u6539\u6307\u6570\u3002</li> <li>\u820d\u5165\uff1a\u5bf9\u5c3e\u6570\u8fdb\u884c\u820d\u5165\u64cd\u4f5c</li> </ol> <p>\u52a0\u51cf\u6cd5:</p> <ol> <li>\u5bf9\u9636\uff1a\u5c06\u4e24\u4e2a\u6d6e\u70b9\u6570\u7684\u5c0f\u6570\u4f4d\u5bf9\u9f50\uff0c\u5373\u8c03\u6574\u8f83\u5c0f\u6570\u7684\u6307\u6570\u4e0e\u8f83\u5927\u6570\u7684\u6307\u6570\u76f8\u540c\u3002\u8fd9\u901a\u5e38\u9700\u8981\u53f3\u79fb\u8f83\u5c0f\u6570\u7684\u5c3e\u6570\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u6570\u503c\u4e0d\u53d8\u3002</li> <li>\u5c3e\u6570\u8fd0\u7b97\uff1a\u5b8c\u6210\u5bf9\u9636\u540e\uff0c\u5bf9\u5c3e\u6570\u90e8\u5206\u8fdb\u884c\u52a0\u6cd5\u6216\u51cf\u6cd5\u64cd\u4f5c\u3002</li> <li>\u89c4\u683c\u5316\uff1a\u7ed3\u679c\u53ef\u80fd\u9700\u8981\u91cd\u65b0\u89c4\u683c\u5316\uff0c\u786e\u4fdd\u5c3e\u6570\u90e8\u5206\u4fdd\u6301\u5728 [1, 2) \u7684\u8303\u56f4\u5185\u3002\u8fd9\u53ef\u80fd\u9700\u8981\u8c03\u6574\u6307\u6570\uff0c\u5e76\u5bf9\u5c3e\u6570\u8fdb\u884c\u5de6\u79fb\u6216\u53f3\u79fb\u64cd\u4f5c\u3002</li> <li>\u820d\u5165\uff1a\u5bf9\u89c4\u683c\u5316\u540e\u7684\u7ed3\u679c\u8fdb\u884c\u820d\u5165\u4ee5\u7b26\u5408\u76ee\u6807\u7cbe\u5ea6</li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-1/#\u975e\u89c4\u683c\u6570\u8fd0\u7b97\u5f8b","title":"\u975e\u89c4\u683c\u6570\u8fd0\u7b97\u5f8b","text":"<p>\u5728\u6d6e\u70b9\u8fd0\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u610f\u5916\u60c5\u51b5\u4e0b\u4f1a\u4f7f\u7ed3\u679c\u53d8\u6210\u975e\u89c4\u683c\u6570\uff0c\u975e\u89c4\u683c\u6570\u5206\u4e3a subnormal \u548c denormal \u4e24\u79cd\u3002</p> <p>\u975e\u89c4\u683c\u6570\u4e4b\u95f4\uff0c\u4ee5\u53ca\u975e\u89c4\u683c\u6570\u4e0e\u6b63\u5e38\u6d6e\u70b9\u6570\u7684\u8fd0\u7b97\u89c4\u5219\u6bd4\u8f83\u590d\u6742\uff0c\u4e5f\u4e0d\u662f\u5f88\u597d\u603b\u7ed3\uff0c\u8fd9\u91cc\u5217\u51fa\u56db\u5219\u8fd0\u7b97\u7684\u89c4\u5219\uff0c\u66f4\u5177\u4f53\u7684\u53ef\u4ee5\u53c2\u8003 Intel \u624b\u518c\u3002</p> <p>\u52a0\u51cf\u6cd5 (\u5c06 X - Y \u89c6\u4e3a X + (-Y)):</p> <ul> <li>\u6b63\u5e38\u6570 X \u4e0e\u975e\u89c4\u683c\u6570 Y \u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a Y.</li> <li>\\(\\pm 0\\) \u4e0e \\(\\pm 0\\) \u76f8\u52a0\u7ed3\u679c\u4e3a 0, \u4e0e\u5176\u4ed6\u6570 Y \u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a Y.</li> <li>Infinity \u4e0e\u4efb\u4f55\u6570\u8fd0\u7b97\u5747\u4e3a Infinity, \u7b26\u53f7\u4e0d\u53d8\u3002\\(\\pm\\)Infinity \u76f8\u52a0\u4e3a\u65e0\u6548\u8f93\u5165\uff0c\u7ed3\u679c\u4e3a R Ind.</li> <li>Denormal \u6570 X \u4e0e Normal / Denormal \u6b63\u5e38\u8fd0\u7b97\u5f97\u5230\u7ed3\u679c. \u4e0e \\(\\pm 0\\) \u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a X, \u4e0e Infinity \u8fd0\u7b97\uff0c\u7ed3\u679c\u4e3a Infinity.</li> </ul> <p>\u4e58\u6cd5:</p> <ul> <li>\u7b26\u53f7\u4f4d\u4e3a \\(\\text{X.s} \\oplus \\text{Y.s}\\).</li> <li>Infinity \\(\\times\\) 0 \u7c7b\u578b\u7684\u8fd0\u7b97\u7ed3\u679c\u4e3a R Ind.</li> <li>\u5176\u4ed6\u89c4\u5219\u4e0e\u52a0\u51cf\u6cd5\u76f8\u540c.</li> </ul> <p>\u9664\u6cd5:</p> <ul> <li>\u7b26\u53f7\u4f4d\u4e3a \\(\\text{X.s} \\oplus \\text{Y.s}\\).</li> <li>Infinity / Infinity \u548c 0 / 0 \u7c7b\u578b\u7684\u8fd0\u7b97\u7ed3\u679c\u4e3a R Ind.</li> <li>\u9664\u4e86\u6b63\u5e38\u8fd0\u7b97\u5916\uff0c\u5176\u4ed6\u7ed3\u679c\u5747\u4e3a 0.</li> </ul> Intel \u53c2\u8003\u624b\u518c\u4e2d\u7684\u8fd0\u7b97\u89c4\u5219\u8868 <p>\u52a0\u51cf\u6cd5: (\u5c06 X - Y \u89c6\u4e3a X + (-Y))  \u4e58\u6cd5: \u9664\u6cd5: </p>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/","title":"\u5fae\u5904\u7406\u5668\u53ca\u5176\u7ed3\u6784","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5bc4\u5b58\u5668","title":"\u5bc4\u5b58\u5668","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u6bb5\u5bc4\u5b58\u5668","title":"\u6bb5\u5bc4\u5b58\u5668","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u901a\u7528\u5bc4\u5b58\u5668","title":"\u901a\u7528\u5bc4\u5b58\u5668","text":"<p>\u6ce8:</p> <ol> <li> <p>\u90e8\u5206\u5bc4\u5b58\u5668</p> <ul> <li>\u5199\u5165 ah, al \u65f6, ax / eax / rax \u9ad8\u4f4d\u4e0d\u53d8</li> <li>\u5199\u5165 ax \u65f6, eax / rax \u9ad8\u4f4d\u4e0d\u53d8</li> <li>\u5199\u5165 eax \u65f6 rax \u9ad8\u4f4d\u81ea\u52a8\u6e05\u96f6<ul> <li>\u8fd9\u6837\u907f\u514d\u4e86 eax \u4e0e rax \u7684\u76f8\u5173\u6027\uff0c\u65b9\u4fbf\u5bc4\u5b58\u5668\u91cd\u547d\u540d</li> </ul> </li> </ul> </li> <li> <p>\u5bc4\u5b58\u5668\u7f16\u7801: \u987a\u5e8f\u662f ax, cx, bx, dx, sp, bp, si, di</p> </li> <li> <p>REX \u524d\u7f00:</p> <ul> <li>ah, bh, ch, dh \u53d8\u6210\u4e86 spl, bpl, sil, dil</li> <li>\u8be6\u89c1 REX \u524d\u7f00</li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u72b6\u6001\u5bc4\u5b58\u5668","title":"\u72b6\u6001\u5bc4\u5b58\u5668","text":"<ul> <li>16 \u4f4d: flags</li> <li>32 \u4f4d: eflags</li> <li>64 \u4f4d: rflags</li> </ul> <p>\u72b6\u6001\u6807\u5fd7\u4f4d: CF, PF, AF, ZF, SF, TF, IF, DF, OF</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u7cfb\u7edf\u8fd0\u884c\u6a21\u5f0f\u4e0e\u5185\u5b58\u5bfb\u5740","title":"\u7cfb\u7edf\u8fd0\u884c\u6a21\u5f0f\u4e0e\u5185\u5b58\u5bfb\u5740","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u603b\u89c8","title":"\u603b\u89c8","text":"<ol> <li> <p>Legacy Mode:</p> <p></p> <ul> <li>\u5b9e\u6a21\u5f0f (Real Mode): 16 \u4f4d\u6bb5\u5bc4\u5b58\u5668\u4f5c\u4e3a\u9009\u62e9\u503c (Selector), \u6709\u6548\u5730\u5740 16 \u4f4d, \u7ecf\u8fc7\u8fd0\u7b97\u5f97\u5230 20 \u4f4d\u7269\u7406\u5730\u5740\uff0c\u76f4\u63a5\u8bbf\u95ee\u5185\u5b58 (\u6700\u5927 1 MiB).</li> <li>\u865a\u62df 8086 \u6a21\u5f0f (Virtual 8086 Mode): \u5728 8086 \u5bfb\u5740\u57fa\u7840\u4e0a\uff0c\u6dfb\u52a0\u4e86\u53ef\u9009\u7684\u5206\u9875\u673a\u5236\uff0c\u6269\u5927\u4e86\u53ef\u8bbf\u95ee\u5185\u5b58\u7684\u8303\u56f4.</li> <li>\u4fdd\u62a4\u6a21\u5f0f (Protected Mode): \u6bb5\u5bc4\u5b58\u5668\u53ea\u4f7f\u7528 16 \u4f4d\uff0c\u4f5c\u4e3a\u9009\u62e9\u503c, \u6709\u6548\u5730\u5740\u4f7f\u7528 32 \u4f4d\uff0c\u901a\u8fc7\u6bb5\u7684\u63cf\u8ff0\u7b26\u5f97\u5230 Linear Address\uff0c\u518d\u7ecf\u8fc7\u53ef\u9009\u7684\u5206\u9875\u673a\u5236\u5f97\u5230\u7269\u7406\u5730\u5740.</li> </ul> </li> <li> <p>Long Mode:</p> <p></p> <ul> <li>\u517c\u5bb9\u6a21\u5f0f (Compatibility Mode): \u7c7b\u4f3c\u4fdd\u62a4\u6a21\u5f0f\uff0cVirtual Address \u4e3a 32 \u4f4d.</li> <li>64 \u4f4d\u6a21\u5f0f (64-bit Mode): 64 \u4f4d\u5730\u5740\uff0c\u53ea\u4f7f\u7528\u5206\u9875\u673a\u5236.</li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5b9e\u6a21\u5f0f","title":"\u5b9e\u6a21\u5f0f","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5bfb\u5740\u65b9\u5f0f","title":"\u5bfb\u5740\u65b9\u5f0f","text":"<p>\u5b9e\u6a21\u5f0f\u4e0b\uff0c\u6ca1\u6709\u865a\u62df\u5185\u5b58\u7684\u6982\u5ff5\uff0c\u6240\u6709\u5185\u5b58\u5730\u5740\u5747\u4e3a\u7269\u7406\u5730\u5740\u3002\u5b9e\u6a21\u5f0f\u91c7\u7528 Fixed Segment\uff0c\u5373\u5b9a\u957f\u5206\u6bb5\u7684\u5185\u5b58\u7ba1\u7406\u6a21\u5f0f\u3002</p> <p>\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u4e2d\u5b66\u4e60\u7684\u5206\u6bb5\u6709\u4e00\u70b9\u70b9\u4e0d\u540c\uff0c\u5b9e\u6a21\u5f0f\u7684\u5206\u6bb5\u5b9e\u9645\u4e0a\u5c31\u662f\u4e00\u4e2a\u786c\u4ef6\u8bbe\u8ba1\u7684\u6280\u5de7: \u5728 Intel 8086 \u5904\u7406\u5668\u4e0a\uff0c\u5176\u5730\u5740\u603b\u7ebf\u4e3a 20 \u4f4d\uff0c\u53ef\u4ee5\u5bfb\u5740 1 MiB \u7684\u5185\u5b58\u7a7a\u95f4\u3002\u7136\u800c 8086 \u7684\u5bc4\u5b58\u5668\u5374\u53ea\u6709 16 \u4f4d\uff0c\u56e0\u6b64\uff0c8086 \u5c06\u5185\u5b58\u5730\u5740\u5206\u4e3a\u6bb5\u5730\u5740 (segment) \u548c\u504f\u79fb\u5730\u5740 (offset)\uff0c\u5e76\u5728\u8ba1\u7b97\u5730\u5740\u65f6\uff0c\u5c06\u6765\u81ea\u6bb5\u5bc4\u5b58\u5668\u7684\u6bb5\u5730\u5740\u5de6\u79fb\u56db\u4f4d\uff0c\u5e76\u4e0e\u504f\u79fb\u5730\u5740\u76f8\u52a0\uff0c\u5f97\u5230 20 \u4f4d\u7269\u7406\u5730\u5740:</p> \\[ \\text{Physical Addr} = \\text{Segment} &lt;&lt; 4 + \\text{Offset}     \\] <p>\u7279\u70b9:</p> <ul> <li>\u6240\u6709\u7a0b\u5e8f\u5171\u4eab\u7269\u7406\u5730\u5740\u7a7a\u95f4\uff0c\u4fbf\u4e8e\u5171\u4eab\uff0c\u4f46\u4e5f\u6ca1\u6709\u9694\u79bb\u3002</li> <li>Wrap Around \u5730\u5740\u56de\u7ed5: \u5f53\u6bb5\u5730\u5740 &lt;&lt; 4 + \u504f\u79fb\u5730\u5740\u8d85\u8fc7 20 \u4f4d\u5730\u5740\u603b\u7ebf\u65f6\uff0c\u4f1a\u53d1\u751f\u81ea\u7136\u6ea2\u51fa\uff0c\u5bfc\u81f4\u5730\u5740\u56de\u7ed5\u3002\u6bd4\u5982 <code>FFFF:FFFF</code> \u7684\u7269\u7406\u5730\u5740\u4e3a <code>0x10FFEF</code>, \u8d85\u51fa\u4e86 1 MiB \u7684\u8303\u56f4\uff0c\u56e0\u6b64\u56de\u7ed5\u4e3a <code>0x0FFEF</code>. \u53c8\u6bd4\u5982 <code>F800:8000</code> \u6307\u5411 <code>0x100000</code>, \u5b9e\u9645\u8bbf\u95ee\u7684\u4fbf\u662f <code>0x00000</code>.</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u4e2d\u65ad\u5411\u91cf\u8868","title":"\u4e2d\u65ad\u5411\u91cf\u8868","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u4fdd\u62a4\u6a21\u5f0f","title":"\u4fdd\u62a4\u6a21\u5f0f","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u57fa\u672c\u6982\u5ff5","title":"\u57fa\u672c\u6982\u5ff5","text":"<p>\u4fdd\u62a4\u6a21\u5f0f\u91c7\u7528 Variable Length Segment \u5373\u53ef\u53d8\u957f\u5ea6\u5206\u6bb5\u7684\u5185\u5b58\u7ba1\u7406\u65b9\u5f0f\u3002\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c\u6709\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u6982\u5ff5: \u63cf\u8ff0\u7b26 (descriptor)\uff0c\u5b83\u662f\u63cf\u8ff0\u6bcf\u4e2a\u6bb5\u5c5e\u6027\u7684\u7ed3\u6784\u3002\u8fd9\u4e2a\u63cf\u8ff0\u7b26\uff0c\u5b9e\u9645\u4e0a\u662f GDT (Global Descriptor Table) \u6216 LDT (Local Descriptor Table) \u4e2d\u7684\u7d22\u5f15\uff0c\u901a\u8fc7\u5b83\u627e\u5230\u5bf9\u5e94\u8868\u9879\uff0c\u5c31\u80fd\u83b7\u53d6\u5230\u6bb5\u7684\u5c5e\u6027\u4fe1\u606f\u3002</p> <p>\u4e09\u4e2a\u91cd\u8981\u7684\u63cf\u8ff0\u7b26\u8868:</p> <ul> <li>GDT: \u5168\u5c40\u63cf\u8ff0\u7b26\u8868\uff0c\u5b58\u653e\u7cfb\u7edf\u4e2d\u6240\u6709\u8fdb\u7a0b\u7684\u6bb5\u63cf\u8ff0\u7b26.</li> <li>LDT: \u5c40\u90e8\u63cf\u8ff0\u7b26\u8868\uff0c\u5b58\u653e\u5f53\u524d\u8fdb\u7a0b\u7684\u6bb5\u63cf\u8ff0\u7b26.</li> <li>IDT: \u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868\uff0c\u5b58\u653e\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740.</li> </ul> <p>\u63cf\u8ff0\u7b26\u7684\u7ed3\u6784: </p> <ul> <li> <p>L \u4f4d: 64 \u4f4d\u6a21\u5f0f\u4f7f\u7528\u5206\u9875\u673a\u5236\uff0c\u63cf\u8ff0\u7b26\u65b0\u589e\u4e86 L \u4f4d\uff0c\u9700\u8981\u5f00\u542f Long bit \u6765\u8fdb\u5165 64-bit \u6a21\u5f0f</p> </li> <li> <p>Base: \u57fa\u5730\u5740 (80286: 24 \u4f4d, 80386 \u53ca\u4ee5\u540e: 32 \u4f4d)</p> </li> <li> <p>Limit: \u6bb5\u957f\u5ea6</p> </li> <li> <p>G \u4f4d: \u7c92\u5ea6\u4f4d\uff0c\u8bbe\u7f6e\u4e3a 1 \u65f6\uff0cLimit \u7684\u957f\u5ea6 1 bit \u4ee3\u8868 4 KiB, \u8fd9\u6837 4 KiB * 2^20 = 2^32 \u53ef\u4ee5\u8bbf\u95ee 32 \u4f4d\u5168\u90e8\u7684\u5185\u5b58</p> </li> <li> <p>D / B \u4f4d: \u4ee3\u7801\u6bb5\u5bf9\u5e94 D, \u6570\u636e\u6bb5\u5bf9\u5e94 B, \u8868\u793a\u9ed8\u8ba4\u64cd\u4f5c\u6570\u548c\u6709\u6548\u5730\u5740\u957f\u5ea6</p> </li> <li>P \u4f4d: \u63cf\u8ff0\u7b26\u662f\u5426\u6709\u6548</li> <li> <p>DPL \u4f4d (2 bit):</p> <ul> <li>\u6743\u9650\u7ea7\u522b\u5206\u4e3a: Ring 0, Ring 1, Ring 2, Ring 3, \u6570\u5b57\u8d8a\u5c0f\u7ea7\u522b\u8d8a\u9ad8</li> <li>\u4e0d\u5f97\u8d8a\u6743\u8bbf\u95ee\uff0c\u63d0\u5347\u6743\u9650\u9700\u8981\u901a\u8fc7\u95e8\u63cf\u8ff0\u7b26 (Gate Descriptor)</li> </ul> </li> <li> <p>S \u4f4d: \u662f\u5426\u4e3a\u7cfb\u7edf\u63cf\u8ff0\u7b26</p> </li> <li>Type \u5b57\u6bb5:<ul> <li> <p>\u5bf9\u4e8e\u975e\u7cfb\u7edf\u63cf\u8ff0\u7b26\uff0c\u8868\u793a\u4ee3\u7801 / \u5806\u6808 / \u6570\u636e\uff0c\u4ee5\u53ca\u8bfb\u5199\u6743\u9650:</p> <p></p> <ul> <li>E \u4f4d: \u6269\u5c55\u65b9\u5411<ul> <li>E = 0: \u5411\u4e0a\u6269\u5c55\uff0coffset \u8303\u56f4 0 - limit</li> <li>E = 1: \u5411\u4e0b\u6269\u5c55\uff0coffset \u8303\u56f4 limit - 0xFFFFFFFF (\u7528\u4e8e\u5806\u6808\u6bb5)</li> </ul> </li> <li>W \u4f4d: \u6570\u636e\u6bb5\u662f\u5426\u53ef\u5199</li> <li>C \u4f4d: \u4e00\u81f4\u6027\u4ee3\u7801\u6bb5<ul> <li>C = 0: \u975e\u4e00\u81f4\u6027\uff0c\u53ea\u80fd\u88ab\u540c\u7279\u6743\u7ea7\u522b\u4ee3\u7801\u6bb5\u8c03\u7528\uff0c\u6216\u8005\u901a\u8fc7\u95e8\u63cf\u8ff0\u7b26\u8c03\u7528</li> <li>C = 1: \u4e00\u81f4\u6027\uff0c\u4f4e\u7279\u6743\u7ea7\u522b\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\uff0c\u4f46\u6743\u9650\u4fdd\u6301\u539f\u7ea7\u522b</li> <li>\u5177\u4f53\u673a\u5236\u8be6\u89c1\u4e0b\u9762 DPL, RPL, CPL \u7684\u63cf\u8ff0</li> </ul> </li> <li>A \u4f4d: \u662f\u5426\u8bbf\u95ee\u8fc7<ul> <li>\u5bf9\u4e8e\u7cfb\u7edf\u63cf\u8ff0\u7b26\uff0c\u6709\u5982\u4e0b\u51e0\u79cd:</li> </ul> </li> <li>1100: Call Gate</li> <li>0101: Task Gate</li> <li>D110: Interrupt Gate</li> <li>D111: Trap Gate (D \u6307\u793a\u95e8\u63cf\u8ff0\u7b26\u5927\u5c0f 1 = 32 \u4f4d, 0 = 16 \u4f4d)</li> </ul> </li> </ul> </li> </ul> <p>\u9009\u62e9\u503c\u7684\u7ed3\u6784:</p> <p></p> <p>\u9009\u62e9\u503c (CS / DS / SS \u5b58\u7684 16-bit):</p> <ol> <li>\u7b2c 15-3 \u4f4d (13-bit, 8 KiB \u4e2a\u63cf\u8ff0\u7b26): Descriptor index</li> <li>\u7b2c 2 \u4f4d: TI, \u8868\u793a\u63cf\u8ff0\u7b26\u7d22\u5f15\u5728 GDT (\u5168\u5c40\u63cf\u8ff0\u7b26) \u8fd8\u662f LDT (\u5c40\u90e8\u63cf\u8ff0\u7b26)</li> <li>\u7b2c 1-0 \u4f4d: RPL \u9009\u62e9\u503c\u81ea\u8eab\u7684\u6743\u9650 Ring 0 - Ring 3</li> </ol> <p>\u5b89\u5168\u7ea7\u522b\u7684\u8bbe\u7f6e:</p> <ol> <li>DPL: \u63cf\u8ff0\u7b26\u6743\u9650\u7ea7\u522b</li> <li>RPL: \u8bf7\u6c42\u7684\u6743\u9650\u7ea7\u522b\uff0c\u653e\u5728 DS \u5bc4\u5b58\u5668\u7684\u4f4e 2 \u4f4d</li> <li>CPL: CPU \u81ea\u8eab\u7684\u6743\u9650\u7ea7\u522b\uff0c\u653e\u5728 CS \u5bc4\u5b58\u5668\u7684\u4f4e 2 \u4f4d</li> </ol> <p>RPL \u548c CPL\uff0c\u901a\u8fc7\u95e8\u63cf\u8ff0\u7b26\u8d8a\u7ea7\u6267\u884c\u9ad8\u6743\u9650\u7684\u4ee3\u7801\u65f6\uff0c\u8bf7\u6c42\u7684\u5185\u5b58\u5730\u5740\u8fd8\u662f\u539f\u6765\u7684\u6743\u9650\u7ea7\u522b</p> <ul> <li>\u6570\u636e\u9700\u8981 MAX(RPL, CPL) &lt;= DPL</li> <li>\u5806\u6808\u9700\u8981 CPL = RPL = DPL</li> </ul> <p></p> <p>\u63cf\u8ff0\u7b26\u8868\u7684\u57fa\u5730\u5740\u7531\u4e13\u95e8\u7684\u5bc4\u5b58\u5668\u5b58\u50a8: GDTR \u5168\u5c40\u63cf\u8ff0\u7b26\u5bc4\u5b58\u5668, LDTR \u5c40\u90e8\u63cf\u8ff0\u7b26\u5bc4\u5b58\u5668, IDTR \u4e2d\u65ad\u63cf\u8ff0\u7b26\u5bc4\u5b58\u5668</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5bfb\u5740\u65b9\u5f0f_1","title":"\u5bfb\u5740\u65b9\u5f0f","text":"<p>\u5206\u6bb5\u673a\u5236:</p> <p></p> <p>\u5206\u9875\u673a\u5236:</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u76f8\u5173\u8ba1\u7b97","title":"\u76f8\u5173\u8ba1\u7b97","text":"<ol> <li> <p>\u8ba1\u7b97\u6bb5\u754c\u9650</p> <p>\u8ba1\u7b97\u65b9\u6cd5:</p> <ul> <li> <p>G = 0 limit 1 bit = 1 B, \u6bb5\u5927\u5c0f = (limit + 1) B</p> </li> <li> <p>G = 1 limit 1 bit = 4 KiB, \u6bb5\u5927\u5c0f = (limit + 1) x 4 KiB</p> </li> </ul> <p>\u4f8b\u9898</p> <p>\u8ba1\u7b97\u4e0b\u9762\u7684\u6bb5\u8d77\u59cb\u5730\u5740\u548c\u7ed3\u675f\u5730\u5740: Base: 1000 0000, limit: 001FF</p> <ul> <li> <p>G = 0, 1000 0000 - 1000 01FF</p> </li> <li> <p>G = 1, 1000 0000 - 101F FFFF (\u7ed3\u675f\u4f4d\u7f6e = \u8d77\u59cb\u4f4d\u7f6e + \u6bb5\u957f\u5ea6 - 1)</p> </li> </ul> <p>Tips: G = 1 \u65f6\uff0c\u5de6\u79fb 3 \u4e2a\u5341\u516d\u8fdb\u5236\u4f4d\uff0c\u8865FFF</p> </li> <li> <p>\u4e2d\u65ad\u5411\u91cf\u4e0e\u5165\u53e3\u5730\u5740\u8ba1\u7b97</p> <p>\u8ba1\u7b97\u65b9\u6cd5:</p> <ul> <li>\u6839\u636e IDTR \u627e\u5230\u4e2d\u65ad\u63cf\u8ff0\u7b26\u8868:</li> </ul> <p></p> <ul> <li>\u6839\u636e\u4e2d\u65ad\u5411\u91cf\u53f7\u627e\u5230\u5bf9\u5e94\u7684\u63cf\u8ff0\u7b26:</li> </ul> <p></p> <p>\u8be5\u4e2d\u65ad\u63cf\u8ff0\u7b26\u4f1a\u5305\u542b\u4e00\u4e2a\u6bb5\u9009\u62e9\u503c\u548c\u504f\u79fb\u91cf\uff0c\u7136\u540e\u518d\u8d70\u4e00\u904d\u5206\u6bb5\u673a\u5236\uff0c\u627e\u5230\u4e2d\u65ad\u670d\u52a1\u7a0b\u5e8f</p> </li> </ol> <p>\u4fdd\u62a4\u6a21\u5f0f\u7684\u5f02\u5e38\u548c\u4e2d\u65ad:</p> \u4e2d\u65ad\u5411\u91cf\u53f7 \u52a9\u8bb0\u7b26 \u4ecb\u7ecd \u7c7b\u578b \u539f\u56e0 0 #DE Divide Error Fault DIV \u548c IDIV \u6307\u4ee4 1 #DB Debug Exception Fault/Trap \u6307\u4ee4\u3001\u6570\u636e\u548c I/O \u65ad\u70b9\uff1b\u5355\u6b65\u6267\u884c\u7b49 2 \u2014 NMI Interrupt Interrupt \u4e0d\u53ef\u5c4f\u853d\u7684\u5916\u90e8\u4e2d\u65ad 3 #BP Breakpoint Trap INT3 \u6307\u4ee4 4 #OF Overflow Trap INTO \u6307\u4ee4 5 #BR BOUND Range Exceeded Fault BOUND \u6307\u4ee4 6 #UD Invalid Opcode (Undefined Opcode) Fault \u65e0\u6548\u6307\u4ee4\u6216\u4fdd\u7559\u6307\u4ee4 7 #NM Device Not Available (No Math Coprocessor) Fault \u6d6e\u70b9\u6307\u4ee4\u6216 WAIT/FWAIT \u6307\u4ee4 8 #DF Double Fault Abort \u4efb\u4f55\u4f1a\u89e6\u53d1\u5f02\u5e38\u3001NMI \u6216 INTR \u7684\u6307\u4ee4 9 \u2014 Coprocessor Segment Overrun (reserved) Fault \u6d6e\u70b9\u6307\u4ee4 10 #TS Invalid TSS Fault \u4efb\u52a1\u5207\u6362\u6216\u8bbf\u95ee TSS 11 #NP Segment Not Present Fault \u52a0\u8f7d\u6bb5\u5bc4\u5b58\u5668\u6216\u8bbf\u95ee\u7cfb\u7edf\u6bb5 12 #SS Stack-Segment Fault Fault \u5806\u6808\u64cd\u4f5c\u6216\u52a0\u8f7d SS \u5bc4\u5b58\u5668 13 #GP General Protection Fault \u4efb\u4f55\u5185\u5b58\u5f15\u7528\u548c\u5176\u4ed6\u4fdd\u62a4\u68c0\u67e5 14 #PF Page Fault Fault \u4efb\u4f55\u5185\u5b58\u5f15\u7528 15 \u2014 Intel reserved. Do not use. \u2014 \u2014 16 #MF x87 FPU Floating-Point Error (Math Fault) Fault x87 FPU \u6d6e\u70b9\u6307\u4ee4\u6216 WAIT/FWAIT \u6307\u4ee4 17 #AC Alignment Check Fault \u4efb\u4f55\u5185\u5b58\u6570\u636e\u5f15\u7528 18 #MC Machine Check Abort \u9519\u8bef\u4ee3\u7801\uff08\u5982\u679c\u6709\uff09\u53ca\u6765\u6e90\u53d6\u51b3\u4e8e\u5177\u4f53\u578b\u53f7 19 #XM SIMD Floating-Point Exception Fault SSE/SSE2/SSE3 \u6d6e\u70b9\u6307\u4ee4 20 #VE Virtualization Exception Fault EPT \u8fdd\u89c4 21 #CP Control Protection Exception Fault RET\u3001IRET\u3001RSTORSSP \u548c SETSSBSY \u6307\u4ee4\u53ef\u80fd\u89e6\u53d1\u6b64\u5f02\u5e38\uff0c\u6216\u7531\u4e8e\u7f3a\u5c11 ENDBRANCH \u6307\u4ee4\u5bfc\u81f4\u7684\u5f02\u5e38\u8df3\u8f6c 22-31 \u2014 Intel reserved. Do not use. \u2014 \u2014 32-255 \u2014 User Defined (Non-reserved) Interrupts Interrupt \u5916\u90e8\u4e2d\u65ad\u6216 INT n \u6307\u4ee4"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u7279\u6743\u7ea7\u522b","title":"\u7279\u6743\u7ea7\u522b","text":"<p>\u95e8\u63cf\u8ff0\u7b26: \u95e8\u63cf\u8ff0\u7b26\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u63cf\u8ff0\u7b26\uff0c\u7528\u4e8e\u5b9e\u73b0\u7279\u6743\u7ea7\u522b\u7684\u8f6c\u6362\u3002\u95e8\u63cf\u8ff0\u7b26\u6709\u4e24\u79cd: \u4efb\u52a1\u95e8 (Task Gate) \u548c\u4e2d\u65ad\u95e8 (Interrupt Gate)\u3002</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#64-\u4f4d\u6a21\u5f0f","title":"64 \u4f4d\u6a21\u5f0f","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#rip-\u76f8\u5bf9\u5bfb\u5740","title":"RIP \u76f8\u5bf9\u5bfb\u5740","text":"<p>\u5728 64 \u4f4d\u6a21\u5f0f\u4e0b\uff0c\u5f53 ModR/M \u4f4d\u7684 r/m \u4e3a 101 \u65f6\uff0c\u662f\u6839\u636e\u4e0b\u4e00\u6761\u6307\u4ee4\u7684 RIP + \u76f8\u5bf9\u504f\u79fb\u91cf\u6765\u5bfb\u5740 (\u517c\u5bb9\u6a21\u5f0f\u65f6\u65f6\u76f8\u5bf9\u4e8e 0 \u8ba1\u7b97\u7684). \u6b64\u65f6 REX \u524d\u7f00\u4e0d\u5f71\u54cd RIP \u76f8\u5bf9\u5bfb\u5740.</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5730\u5740\u89c4\u8303\u5f62\u5f0f","title":"\u5730\u5740\u89c4\u8303\u5f62\u5f0f","text":"<p>64 \u4f4d\u6a21\u5f0f\u4e0b\uff0c\u5730\u5740\u4e3a\u89c4\u8303\u5f62\u5f0f (canonical form) \u610f\u5473\u7740\u4ece\u7b2c 63 \u4f4d\u5230\u5730\u5740\u7684 MSB \u4e4b\u524d\uff0c\u5fc5\u987b\u662f\u5168 0 \u6216\u5168 1.</p> <p>\u6bd4\u5982\u5bf9\u4e8e 48 \u4f4d\u7ebf\u6027\u5730\u5740 <code>addr</code>\uff0c<code>addr[63:48]</code> \u4e3a\u5168 0 \u6216\u5168 1:</p> <ul> <li>\u89c4\u8303\u5f62\u5f0f: 0xFFFF 8010 BC00 1000, 0x0000 7C80 B810 2040</li> <li>\u975e\u89c4\u8303\u5f62\u5f0f: 0x1122 3344 5566 7788</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u7cfb\u7edf\u8fd0\u884c\u6a21\u5f0f\u5207\u6362","title":"\u7cfb\u7edf\u8fd0\u884c\u6a21\u5f0f\u5207\u6362","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5185\u5b58\u5730\u5740\u7c7b\u578b\u53ca\u8f6c\u6362","title":"\u5185\u5b58\u5730\u5740\u7c7b\u578b\u53ca\u8f6c\u6362","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#\u5185\u5b58\u5206\u9875\u673a\u5236","title":"\u5185\u5b58\u5206\u9875\u673a\u5236","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#32-\u4f4d\u5206\u9875-10-10-12","title":"32 \u4f4d\u5206\u9875: 10-10-12","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-2/#32-\u4f4d-pae-\u5206\u9875-2-9-9-12","title":"32 \u4f4d PAE \u5206\u9875: 2-9-9-12","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-3/","title":"\u5bfb\u5740\u65b9\u5f0f","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-3/#\u5bfb\u5740\u65b9\u5f0f_1","title":"\u5bfb\u5740\u65b9\u5f0f","text":"<p>\u4f8b\u9898</p> <p>Which of the addressing mode in the following instruction is invalid?</p> <p>A. mov eax, [esp + 2]</p> <p>B. mov eax, [ebx + esp + 2]</p> <p>C. mov eax, [esp + 2 * ebx + 2]</p> <p>D. mov eax, [2 * esp + ebx + 2]</p> \u7b54\u6848 <p>D: \u56e0\u4e3a esp \u4e0d\u80fd\u4f5c\u4e3a index \u5bc4\u5b58\u5668, \u53ea\u80fd\u4f5c\u4e3a base \u5bc4\u5b58\u5668</p> <p>\u5bf9\u4e8e B \u9009\u9879, \u6c47\u7f16\u5668\u53ef\u4ee5\u81ea\u52a8\u9009\u62e9 esp \u4e3a base, ebp \u4e3a index \u5bc4\u5b58\u5668</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-3/#\u5c0f\u7aef\u5e8f","title":"\u5c0f\u7aef\u5e8f","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/","title":"x86 \u6c47\u7f16\u6307\u4ee4","text":"\u91cd\u70b9 <p>\u4e3b\u8981\u8003\u5bdf\u6307\u4ee4: <code>mov</code>, <code>lea</code>, <code>xchg</code>, <code>xlat</code>, <code>in</code>, <code>out</code>, <code>cmovcc</code>, <code>add</code>, <code>sub</code>, <code>and</code>, <code>or</code>, <code>xor</code>, <code>neg</code>, <code>sar</code>, <code>shr</code>, <code>test</code>, <code>cmp</code>, <code>jcc</code>, <code>enter</code>, <code>int</code></p> <p>\u9700\u8981\u91cd\u70b9\u8bb0\u5fc6\u548c\u7406\u89e3\u7684\u5185\u5bb9:</p> <ul> <li>\u6307\u4ee4\u64cd\u4f5c\u6570 (\u53ef\u80fd\u6709\u9690\u85cf\u64cd\u4f5c\u6570)</li> <li>\u6307\u4ee4\u6240\u5f71\u54cd\u7684\u6807\u5fd7\u4f4d</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u5e38\u89c1-x86-\u6307\u4ee4","title":"\u5e38\u89c1 x86 \u6307\u4ee4","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u6570\u636e\u4f20\u9001\u6307\u4ee4","title":"\u6570\u636e\u4f20\u9001\u6307\u4ee4","text":"<p>\u6ce8\u610f</p> <p>\u6240\u6709\u6570\u636e\u4f20\u9001\u6307\u4ee4\u4e0d\u6539\u53d8 flags</p> <ol> <li> <p>mov</p> <ul> <li>\u529f\u80fd: \u5bc4\u5b58\u5668\u4e0e\u5bc4\u5b58\u5668\u3001\u5bc4\u5b58\u5668\u4e0e\u5185\u5b58\u3001\u5185\u5b58\u4e0e\u5bc4\u5b58\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u9001</li> <li>\u64cd\u4f5c\u6570: \u64cd\u4f5c\u6570\u5bbd\u5ea6\u5fc5\u987b\u76f8\u540c\uff0c\u53ef\u4ee5\u662f byte, word, doubleword \u548c quadword.</li> </ul> <p>\u7ec6\u8282:</p> <ul> <li><code>mov</code> \u6307\u4ee4\u4e0d\u80fd\u6539\u53d8 <code>cs</code>, \u4ee3\u7801\u6bb5\u5bc4\u5b58\u5668\u53ea\u80fd\u7531\u63a7\u5236\u6307\u4ee4\u6539\u53d8</li> <li><code>mov</code> \u6307\u4ee4\u8d4b\u503c <code>ds, es, fs, gs, ss</code>: \u5b9e\u6a21\u5f0f\u4e0b, \u6e90\u64cd\u4f5c\u6570\u9700\u4e3a\u5bc4\u5b58\u5668 (8086 \u7535\u8def\u5c42\u9762\u9650\u5236, \u4ece die shot \u4e0a\u53ef\u4ee5\u770b\u5230\u8fd9\u4e9b\u5bc4\u5b58\u5668\u4e0e\u901a\u7528\u5bc4\u5b58\u5668\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e), \u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c\u6e90\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5408\u6cd5\u7684\u6bb5\u9009\u62e9\u503c</li> <li><code>mov</code> \u6307\u4ee4\u8d4b\u503c\u6808\u6bb5\u5bc4\u5b58\u5668 <code>ss</code> \u65f6, \u4e0b\u4e00\u6761\u8bed\u53e5\u4f1a\u4e0d\u88ab\u6253\u65ad\u5730\u6267\u884c\uff0c\u5373\u4f7f\u5f00\u542f\u5355\u6b65\u8c03\u8bd5. \u8fd9\u662f\u56e0\u4e3a <code>ss</code> \u7684\u8d4b\u503c\u5e38\u5e38\u4e0e <code>sp / esp</code> \u7684\u6307\u4ee4\u914d\u5408\uff0c\u7528\u6765\u5207\u6362\u6808\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u6253\u65ad\u4f1a\u5bfc\u81f4\u6808\u4e71\u6389.</li> <li>64 \u4f4d\u6a21\u5f0f\u4e0b, <code>mov</code> \u9ed8\u8ba4\u7684\u64cd\u4f5c\u6570\u5bbd\u5ea6\u4e3a 32 \u4f4d\uff0c\u9700\u4f7f\u7528 REX.W \u6307\u5b9a 64 \u4f4d\u64cd\u4f5c\u6570\uff0cREX.R \u8f85\u52a9\u7f16\u7801 r[8-15], \u6b64\u65f6\u65e0\u6cd5\u7f16\u7801 ah, bh, ch, dh \u5bc4\u5b58\u5668.</li> </ul> <p>\u53d8\u79cd: movsx, movzx</p> <p><code>movsx</code> \u548c <code>movzx</code> \u652f\u6301 \u6e90\u64cd\u4f5c\u6570\u5bbd\u5ea6 \u5c0f\u4e8e \u76ee\u7684\u64cd\u4f5c\u6570\u5bbd\u5ea6 \u7684\u60c5\u51b5\uff0c\u4f7f\u7528 <code>movsx</code> \u4f1a\u5bf9\u6e90\u64cd\u4f5c\u6570\u8fdb\u884c\u7b26\u53f7\u6269\u5c55 (signed extension, \u9ad8\u4f4d\u586b\u7b26\u53f7\u4f4d)\uff0c<code>movzx</code> \u5219\u8fdb\u884c\u96f6\u6269\u5c55 (zero extension, \u9ad8\u4f4d\u586b 0).</p> </li> <li> <p>lea</p> <ul> <li> <p>\u529f\u80fd: \u8ba1\u7b97\u6709\u6548\u5730\u5740 (Load Effective Address)</p> <ul> <li>\u4f46\u5b9e\u9645\u4e0a\u4e5f\u80fd\u8ba1\u7b97\u7b80\u5355\u7684 <code>base + scale * index + disp</code> \u7c7b\u578b\u7684\u7b97\u672f\u8fd0\u7b97, \u4e0d\u6539\u53d8 flags</li> </ul> </li> <li> <p>\u7ec6\u8282:</p> </li> </ul> <p><code>lea</code> \u6307\u4ee4\u4e0d\u4f1a\u8bbf\u95ee\u5185\u5b58\uff0c\u53ea\u662f\u8ba1\u7b97\u5185\u5b58\u5730\u5740\uff0c\u56e0\u6b64\u4e0d\u4f1a\u6539\u53d8\u5185\u5b58\u4e2d\u7684\u503c. \u5982\u679c\u8bf4 <code>mov</code> \u5bf9\u5e94 C \u8bed\u8a00\u4e2d\u7684\u53d6\u53d8\u91cf\u503c (\u5982 <code>c = a</code>)\uff0c\u90a3\u4e48 <code>lea</code> \u5bf9\u5e94\u53d6\u5730\u5740\u64cd\u4f5c (<code>ptr = &amp;a</code>). \u6c47\u7f16\u4ee3\u7801\u548c\u5bf9\u5e94\u64cd\u4f5c\u5bf9\u6bd4\u5982\u4e0b:</p> <pre><code>mov rax, [rbx + 8 * rcx + 4] ; rax = MEM[rbx + 8 * rcx + 4]\nlea rax, [rbx + 8 * rcx + 4] ; rax = rbx + 8 * rcx + 4\n</code></pre> </li> <li> <p>xlat</p> <ul> <li>\u529f\u80fd: \u67e5\u8868 (xlat = Translate).</li> </ul> <p>\u4ee5 <code>al</code> \u5bc4\u5b58\u5668\u7684\u503c\u4f5c\u4e3a\u7d22\u5f15\uff0c\u4ece <code>bx</code> \u6307\u5411\u7684\u8868\u4e2d\u53d6\u51fa\u4e00\u4e2a\u5b57\u8282\uff0c\u5b58\u5165 <code>al</code> \u5bc4\u5b58\u5668, \u53ef\u4ee5\u7406\u89e3\u4e3a <code>mov al, seg:[(e)bx + unsigned al]</code> (\u8be5 <code>mov</code> \u6e90\u64cd\u4f5c\u6570\u4e0d\u5408\u6cd5, \u56e0\u6b64\u53ea\u6709 <code>xlat</code> \u80fd\u5b9e\u73b0\u8fd9\u6837\u64cd\u4f5c). - \u64cd\u4f5c\u6570:     - \u9690\u85cf\u6e90\u64cd\u4f5c\u6570: <code>al</code> \u5bc4\u5b58\u5668\uff0c\u4f5c\u4e3a\u7d22\u5f15, <code>bx</code> \u548c\u6bb5\u5bc4\u5b58\u5668 (\u9ed8\u8ba4\u4e3a <code>dx</code>) \u6307\u5411\u7d22\u67e5\u7684\u8868     - \u9690\u85cf\u76ee\u7684\u64cd\u4f5c\u6570: <code>al</code> \u5b58\u50a8\u7ed3\u679c</p> <p>\u4f8b\u5b50: 7 \u6bb5\u6570\u7801\u7ba1\u663e\u793a</p> <pre><code>TABLE DB 3FH, 06H, 5BH, 4FH  ; LED status lookup table\n      DB 66H, 6DH, 7DH, 27H\n      DB 7FH, 6FH\nLOOK: MOV AL, 5              ; load AL with 5 (AL is a BCD number)\n      MOV BX, OFFSET TABLE   ; address lookup table\n      XLAT                   ; convert\n</code></pre> <p>\u7ec6\u8282:</p> <ul> <li>\u4f7f\u7528 <code>REX</code> \u524d\u7f00\u65f6, \u67e5\u8868\u5730\u5740\u53d8\u4e3a <code>[rbx + unsigned AL]</code>, \u4e0d\u518d\u4f7f\u7528 <code>ds</code> \u5bc4\u5b58\u5668.</li> </ul> </li> <li> <p>xchg</p> <ul> <li>\u529f\u80fd: \u539f\u5b50\u4ea4\u6362\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u503c</li> <li>\u64cd\u4f5c\u6570: \u4e24\u4e2a\u64cd\u4f5c\u6570\u5fc5\u987b\u662f\u5bc4\u5b58\u5668\u6216\u8005\u5185\u5b58\u5730\u5740, \u5bbd\u5ea6\u5fc5\u987b\u76f8\u540c.</li> </ul> <p>\u7528\u5904:</p> <ul> <li>\u5b9e\u73b0 semaphore, spinlock \u7b49\u540c\u6b65\u673a\u5236, \u5bf9\u4e8e\u64cd\u4f5c\u7cfb\u7edf\u6765\u8bf4\u5c24\u4e3a\u91cd\u8981.</li> </ul> <p>\u4f8b\u5b50: Spinlock</p> <p></p> <p>\u7ec6\u8282:</p> <ul> <li><code>nop</code> \u6307\u4ee4\u5b9e\u9645\u662f <code>xchg (e)ax, (e)ax</code> \uff0c\u7f16\u7801\u4e3a <code>90h</code>. </li> <li>\u64cd\u4f5c\u6570\u6d89\u53ca\u5185\u5b58\u65f6\uff0c\u4f1a\u9501\u4f4f\u603b\u7ebf\u786e\u4fdd\u4e00\u81f4\u6027\u548c\u539f\u5b50\u6027\uff0c\u5373\u4f7f\u6ca1\u6709 <code>lock</code> \u524d\u7f00.</li> </ul> </li> <li> <p>in, out</p> <ul> <li>\u529f\u80fd: \u4e0e I/O \u7aef\u53e3\u8fdb\u884c\u6570\u636e\u4f20\u9001</li> <li>\u64cd\u4f5c\u6570: \u4e24\u4e2a\u64cd\u4f5c\u6570\uff0c\u4e00\u4e2a\u662f I/O \u7aef\u53e3\u53f7\uff0c\u4e00\u4e2a\u662f\u6570\u636e\u5bc4\u5b58\u5668<ul> <li>I/O \u7aef\u53e3\u53f7: \u53ef\u4ee5\u662f 8 \u4f4d\u7acb\u5373\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f <code>dx</code> \u5bc4\u5b58\u5668 (\u6b64\u65f6\u53ef\u5bfb\u5740 16 \u4f4d\u7684\u7aef\u53e3\u53f7)</li> <li>\u6570\u636e\u5bc4\u5b58\u5668: <code>al</code>, <code>ax</code>, <code>eax</code> \u4e2d\u7684\u4e00\u4e2a</li> </ul> </li> </ul> <p>\u4f8b\u5b50: \u63a7\u5236\u8702\u9e23\u5668 (\u4ec5 DOS \u6a21\u5f0f)</p> <pre><code>.MODEL TINY\n.CODE\n.STARTUP\n    IN AL, 61H    ; speaker\n    OR AL, 3\n    OUT 61H, AL   ; speaker on\n    MOV CX, 8000H ; delay count\nL1:\n    LOOP L1\n    IN AL, 61H\n    AND AL, 0FCH  ; speaker off\n    OUT 61H, AL\n.EXIT\n</code></pre> \u6ce8\u610f <p>\u8fd9\u4e24\u6761\u6307\u4ee4\u5728\u63a5\u53e3\u90e8\u5206\u7684\u8bfe\u7a0b\u4e2d\u4f1a\u7ecf\u5e38\u89c1\u5230\uff0c\u8003\u8bd5\u4e00\u5b9a\u4f1a\u8003\u5230\u5176\u4f7f\u7528\u65b9\u6cd5\uff0c\u8bf7\u52a1\u5fc5\u5b66\u4f1a.</p> </li> </ol> <p>\u6761\u4ef6\u6570\u636e\u4f20\u9001\u6307\u4ee4 cmov \u7cfb\u5217</p> <p><code>cmov</code> \u7cfb\u5217\u6307\u4ee4\u6839\u636e\u6807\u5fd7\u4f4d\u7684\u72b6\u6001\u6765\u51b3\u5b9a\u662f\u5426\u6267\u884c\u6570\u636e\u4f20\u9001\u64cd\u4f5c\uff0c\u5c06\u539f\u672c\u9700\u8981\u5206\u652f\u8bed\u53e5\u7684\u529f\u80fd\u8f6c\u5316\u4e3a\u4e00\u6761\u6307\u4ee4\uff0c\u66f4\u9002\u5408\u73b0\u4ee3\u5904\u7406\u5668\u7684\u6d41\u6c34\u7ebf\u6267\u884c</p> <pre><code>; with cmov\ncmovz eax, ebx    ; if ZF = 1, eax &lt;- ebx\n\n; equivalent to\ntest eax, eax\njnz .label        ; if ZF != 1, skip\nmov eax, ebx      ; eax &lt;- ebx\n.label:\n</code></pre> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u7b97\u6570\u6307\u4ee4","title":"\u7b97\u6570\u6307\u4ee4","text":"<ol> <li> <p>add, sub</p> </li> <li> <p>sar, shr</p> </li> <li> <p>inc. dec: \u9012\u589e / \u9012\u51cf, \u4e0d\u6539\u53d8 CF \u503c, \u8bbe\u8ba1\u65f6\u5e0c\u671b\u5faa\u73af\u53d8\u91cf\u4e0d\u5e72\u6270\u5faa\u73af\u91cc\u9762\u7684 CF, \u4e0d\u8fc7\u4f1a\u7834\u574f OF</p> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u903b\u8f91\u6307\u4ee4","title":"\u903b\u8f91\u6307\u4ee4","text":"<ol> <li> <p>and, or, xor</p> </li> <li> <p>neg</p> </li> <li> <p>test</p> </li> <li> <p>cmp</p> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u63a7\u5236\u6307\u4ee4","title":"\u63a7\u5236\u6307\u4ee4","text":"<ol> <li> <p>jmp</p> <ul> <li>\u8fd1\u8df3\u8f6c: push eip, jmp offset</li> <li>\u8fdc\u8df3\u8f6c: push cs, push eip, jmp offset</li> </ul> </li> <li> <p>jcc</p> <p><code>jcc</code> \u662f\u4e00\u7cfb\u5217\u6761\u4ef6\u8df3\u8f6c\u6307\u4ee4\u7684\u7edf\u79f0\uff0c\u610f\u601d\u662f Jump if Condition Is Met. \u4e0b\u8868\u53ea\u5c55\u793a\u4e86\u5176\u4e2d\u4e00\u90e8\u5206\u7684\u6307\u4ee4:</p> <p></p> <p>\u7ec6\u8282:</p> <ul> <li>\u6709\u7b26\u53f7\u6bd4\u8f83\u4e0e\u65e0\u7b26\u53f7\u6bd4\u8f83\u7684\u8df3\u8f6c\u6307\u4ee4:<ul> <li>\u65e0\u7b26\u53f7\u6bd4\u8f83: <code>ja, jae, jb, jbe, je, jne</code> (Above, Below)</li> <li>\u6709\u7b26\u53f7\u6bd4\u8f83: <code>jg, jge, jl, jle, je, jne</code> (Greater, Less)</li> </ul> </li> <li><code>jcxz / jecxz / jrcxz</code> \u6307\u4ee4\u867d\u7136\u4e0d\u5c5e\u4e8e <code>jcc</code> (\u4e0d\u68c0\u67e5\u72b6\u6001\u4f4d), \u4f46\u4e5f\u503c\u5f97\u4e00\u63d0: \u5f53 <code>cx / ecx / rcx</code> \u4e3a 0 \u65f6\u8df3\u8f6c, \u5e38\u5e38\u5c06 <code>cx</code> \u4f5c\u4e3a\u5faa\u73af\u6b21\u6570, \u8be5\u6307\u4ee4\u7528\u4e8e\u5faa\u73af\u7ed3\u675f\u5224\u65ad.</li> <li><code>jcc</code> \u6307\u4ee4\u4e0d\u652f\u6301\u8fdc\u8df3\u8f6c (far jump).</li> </ul> </li> <li> <p>enter, leave</p> <p>\u6ce8\u610f</p> <p><code>enter</code> \u548c <code>leave</code> \u6307\u4ee4\u5728\u5b9e\u8df5\u4e2d\u6027\u80fd\u5f88\u5dee\uff0c\u800c\u4e14\u4e0d\u662f\u6240\u6709\u7f16\u7a0b\u8bed\u8a00\u9700\u8981\u5d4c\u5957\u7684\u6808\u5e27.</p> <p>\u73b0\u4ee3\u7f16\u8bd1\u5668\u5e76\u4e0d\u4f1a\u751f\u6210\u8fd9\u4e24\u6761\u6307\u4ee4\uff0c\u4e5f\u4e0d\u5efa\u8bae\u624b\u52a8\u4f7f\u7528.</p> <ul> <li>\u529f\u80fd: \u4e3a\u51fd\u6570\u521b\u5efa\u6808\u5e27\uff0c\u5206\u914d\u52a8\u6001\u5b58\u50a8\u7a7a\u95f4\uff0c\u5e76\u6839\u636e\u5d4c\u5957\u7ea7\u522b\u4fdd\u5b58\u4e0a\u4e00\u5c42\u6808\u5e27\u6307\u9488, \u4e00\u822c\u4e0e <code>leave</code> \u6307\u4ee4\u642d\u914d\u4f7f\u7528</li> <li>\u64cd\u4f5c\u6570:<ul> <li>\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u6570\u6307\u5b9a\u52a8\u6001\u5b58\u50a8\u7a7a\u95f4\u7684\u5927\u5c0f</li> <li>\u7b2c\u4e8c\u4e2a\u64cd\u4f5c\u6570\u786e\u5b9a\u5d4c\u5957\u7ea7\u522b (0-31)</li> <li>\u5d4c\u5957\u7ea7\u522b\u51b3\u5b9a\u4ece\u524d\u4e00\u6808\u5e27\u590d\u5236\u6307\u9488\u7684\u6570\u91cf\u548c\u5b58\u50a8\u6307\u9488\u7684\u7a7a\u95f4\u5927\u5c0f</li> </ul> </li> </ul> <p>\u4f8b\u5b50:</p> <ol> <li>\u5982\u679c\u4e0d\u4f7f\u7528\u5d4c\u5957\u6808\u5e27\u529f\u80fd, \u53ef\u4ee5\u4f7f\u7528 <code>enter 0, 0</code> \u4ee3\u66ff <code>push ebp; mov ebp, esp</code> \u7684\u64cd\u4f5c, \u6bd4\u5982:</li> </ol> <pre><code>enter 16, 0 ; 16 bytes of local storage, no nesting\n; ...\nleave       ; deallocate local storage and restore previous frame pointer\n\n; equivalent to\npush ebp      ; save old base pointer\nmov ebp, esp  ; set base pointer to current stack\nsub esp, 16   ; allocate 12 bytes for this stack frame\n; ...\nadd esp, 16   ; deallocate local storage\npop ebp       ; restore base pointer\n</code></pre> <ol> <li>\u5d4c\u5957\u6808\u5e27\u529f\u80fd, \u76f8\u5f53\u4e8e\u5728\u6784\u9020\u6808\u5e27\u65f6\uff0c\u5c06\u7236\u51fd\u6570\u7684 <code>ebp</code> \u4e5f\u4fdd\u5b58\u5230\u5f53\u524d\u6808\u5e27\u4e2d, \u4f7f\u5f97\u5b50\u51fd\u6570\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e9b\u7236\u7ea7 <code>ebp</code> \u5f15\u7528\u5230\u7236\u7ea7\u6808\u5e27\u7684\u5c40\u90e8\u53d8\u91cf.</li> </ol> <pre><code>enter 16, 3    ; 16 bytes of local storage, nesting level 3\n\n; equivalent to\npush ebp\nmov eax, esp   ; eax = temporary frame pointer\n\n.LOOP          ; assume cx = 3\n    sub ebp, 4 ; assume 32-bit mode\n    push dword ptr [ebp]\n.UNTILCXZ\npush eax      \n\nmov ebp, eax\nsub esp, 16\n</code></pre> <p></p> </li> <li> <p>int</p> <ul> <li>\u529f\u80fd: \u4ea7\u751f\u4e2d\u65ad</li> <li>\u64cd\u4f5c\u6570: \u4e2d\u65ad\u53f7<ul> <li>CPU \u968f\u540e\u6839\u636e\u4e2d\u65ad\u53f7\u67e5\u627e\u4e2d\u65ad\u5411\u91cf\u8868, \u8df3\u8f6c\u5230\u5bf9\u5e94\u7684\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</li> </ul> </li> </ul> <p>\u4f8b\u5b50: DOS \u7684 <code>int 21h</code> \u7528\u4e8e\u9000\u51fa\u7a0b\u5e8f</p> <pre><code>mov ax, 4ch ; al = 4ch, ah = 0 for return code\nint 21h\n</code></pre> <p>\u7ec6\u8282:</p> <ul> <li><code>int</code> \u6307\u4ee4\u4f1a\u5c06\u5f53\u524d\u7684 <code>CS</code> \u548c <code>EIP</code> \u538b\u5165\u6808\u4e2d\uff0c\u7136\u540e\u8df3\u8f6c\u5230\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f</li> <li>\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5165\u53e3\u5730\u5740\u5b58\u653e\u5728\u4e2d\u65ad\u5411\u91cf\u8868\u4e2d\uff0c\u4e2d\u65ad\u53f7\u4e58\u4ee5 4 \u4e3a\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u7684\u5730\u5740</li> <li>\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u4f7f\u7528 <code>iret</code> \u6307\u4ee4\u8fd4\u56de\uff0c<code>iret</code> \u4f1a\u5f39\u51fa\u6808\u4e2d\u7684 <code>CS</code> \u548c <code>EIP</code></li> <li>\u6240\u6709\u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u6709\u8d23\u4efb\u4fdd\u5b58\u548c\u6062\u590d\u6240\u6709\u4f7f\u7528\u8fc7\u7684\u5bc4\u5b58\u5668\uff0c\u5305\u62ec\u6807\u5fd7\u5bc4\u5b58\u5668\uff0c\u4ee5\u6062\u590d\u73b0\u573a</li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u4e2d\u65ad--\u5f02\u5e38","title":"\u4e2d\u65ad / \u5f02\u5e38","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u4f2a\u6307\u4ee4","title":"\u4f2a\u6307\u4ee4","text":"<p>\u8bfe\u7a0b\u4e3b\u8981\u4ecb\u7ecd masm \u7684\u4f2a\u6307\u4ee4 (Directive)</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u63a7\u5236\u6d41\u4f2a\u6307\u4ee4","title":"\u63a7\u5236\u6d41\u4f2a\u6307\u4ee4","text":"<ol> <li> <p>\u4f2a\u6307\u4ee4</p> <ul> <li> <p><code>.WHILE</code>, .<code>ENDW</code></p> </li> <li> <p><code>.REPEAT</code>, <code>.UNTIL</code>, <code>.UNTILCXZ</code></p> </li> <li> <p><code>.IF</code>, <code>.ELSE</code>, <code>.ELSEIF</code>, <code>.ENDIF</code></p> </li> <li> <p><code>.BREAK</code>, <code>.CONTINUE</code></p> </li> </ul> </li> <li> <p>\u8fd0\u7b97</p> <ul> <li><code>!</code>, <code>!!</code>, <code>&amp;&amp;</code>, <code>||</code>, <code>==</code>, <code>!=</code>, <code>&gt;</code>, <code>&lt;</code>, <code>&gt;=</code>, <code>&lt;=</code>: \u903b\u8f91\u8fd0\u7b97, \u4e0e C \u8bed\u8a00\u7c7b\u4f3c</li> <li><code>CARRY?</code>, <code>PARITY?</code>, <code>SIGN?</code>, <code>ZERO?</code>, <code>OVERFLOW?</code>: \u7528\u4e8e\u5224\u65ad\u72b6\u6001\u4f4d</li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u51fd\u6570\u5b9a\u4e49\u4f2a\u6307\u4ee4","title":"\u51fd\u6570\u5b9a\u4e49\u4f2a\u6307\u4ee4","text":"<ul> <li><code>PROC</code>, <code>ENDP</code>: \u5b9a\u4e49\u51fd\u6570</li> <li><code>NEAR</code>, <code>FAR</code>: \u51fd\u6570\u8c03\u7528\u65b9\u5f0f, \u5176 <code>ret</code> \u65f6\u8df3\u8f6c\u65b9\u5f0f Opcode \u4e0d\u540c\uff0c\u4e00\u4e2a\u662f\u8fd1\u8df3\u8fd4\u56de\uff0c\u4e00\u4e2a\u662f\u8fdc\u8df3\u8fd4\u56de</li> </ul> <ul> <li><code>USE</code>: \u58f0\u660e\u51fd\u6570\u6240\u4f7f\u7528\u7684\u5bc4\u5b58\u5668, \u6c47\u7f16\u5668\u4f1a\u81ea\u52a8\u4fdd\u62a4\u8fd9\u4e9b\u5bc4\u5b58\u5668</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u6307\u4ee4\u7f16\u7801","title":"\u6307\u4ee4\u7f16\u7801","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#rex-\u524d\u7f00","title":"REX \u524d\u7f00","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u529f\u80fd","title":"\u529f\u80fd","text":"<ul> <li>W \u4f4d: \u6307\u793a\u64cd\u4f5c\u6570\u5927\u5c0f, W = 1 \u4ee3\u8868 64 \u4f4d\u64cd\u4f5c\u6570\uff0cW = 0 \u65f6\u6839\u636e CS \u9009\u62e9\u7b26\u7684 D \u4f4d\u786e\u5b9a</li> <li>R \u4f4d: \u6269\u5c55 ModR/M \u5b57\u6bb5\u7684 reg</li> <li>X \u4f4d: \u6269\u5c55 SIB \u5b57\u6bb5\u7684 Index</li> <li>B \u4f4d: \u6269\u5c55 ModR/M \u5b57\u6bb5\u7684 r/m, SIB \u7684 base \u6216\u8005 Opcode \u7f16\u7801\u7684 reg</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u4f7f\u7528\u573a\u666f","title":"\u4f7f\u7528\u573a\u666f","text":"<p>\u9700\u8981 REX \u524d\u7f00\u7684\u60c5\u51b5:</p> <ul> <li>\u4f7f\u7528 r[8-15] \u53ca\u5176\u90e8\u5206\u5bc4\u5b58\u5668\u7684\u6307\u4ee4</li> <li>\u4f7f\u7528 spl, bpl, sil, dil \u5bc4\u5b58\u5668 (sp, bp, si, di \u7684\u4f4e\u516b\u4f4d) \u7684\u6307\u4ee4</li> <li>\u4f7f\u7528 64 \u4f4d\u64cd\u4f5c\u6570\u7684\u6307\u4ee4</li> </ul> <p>\u4e0d\u9700\u8981 REX \u524d\u7f00\u7684\u60c5\u51b5:</p> <p>\u5728 64 \u4f4d\u6a21\u5f0f\u4e0b\uff0c\u4e0b\u9762\u4e24\u79cd\u6307\u4ee4\u9ed8\u8ba4\u4f7f\u7528 64 \u4f4d\u64cd\u4f5c\u6570\uff0c\u65e0\u9700 REX \u524d\u7f00:</p> <ul> <li>\u8fd1\u8df3\u8f6c: Near Jump \u6307\u4ee4</li> <li>\u9664\u8fdc\u8df3\u8f6c\u4e4b\u5916\u7684\u6240\u6709\u7528\u5230 rsp \u7684\u6307\u4ee4\uff0c\u89c1\u4e0b\u8868:</li> </ul> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-4-6/#\u6742\u9879","title":"\u6742\u9879","text":"<ol> <li> <p>REX \u524d\u7f00\u5360\u636e\u4e86 40H - 4FH \u7684 Opcode \u7a7a\u95f4\uff0c\u56e0\u6b64\u5728 64 \u4f4d\u6a21\u5f0f\u4e0b\uff0c\u539f\u6709\u7684\u4e00\u4e9b\u5355\u5b57\u8282 Opcode (\u5982 inc, dec) \u4f1a\u88ab\u8986\u76d6\uff0c\u9700\u8981\u7528\u8be5\u6307\u4ee4\u7684 ModR/M \u5f62\u5f0f.</p> </li> <li> <p>64 \u4f4d\u6a21\u5f0f\u4e0b\u82e5\u4f7f\u7528 REX \u524d\u7f00, mov \u65e0\u6cd5\u7f16\u7801 ah, bh, ch, dh \u5bc4\u5b58\u5668</p> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/","title":"\u63a5\u53e3","text":"<p>\u8003\u8bd5\u8303\u56f4</p> <p>\u672c\u90e8\u5206\u4f1a\u8003\u5bdf\u7b80\u5355\u7684\u63a5\u53e3\u7f16\u7a0b\u65b9\u6cd5\uff0c\u56e0\u6b64\u9700\u8981\u5bf9\u5404\u63a5\u53e3\u82af\u7247\u7684\u7aef\u53e3\u53ca\u5176\u529f\u80fd\u6709\u4e00\u5b9a\u7684\u4e86\u89e3</p> <p>\u6700\u540e\u4e00\u9897\u6570\u6a21\u8f6c\u6362\u82af\u7247\u4e0d\u8003\u5bdf\u7f16\u7a0b\uff0c\u53ea\u9700\u4e86\u89e3\u4e00\u4e9b\u6280\u672f\u6307\u6807\u7684\u8ba1\u7b97</p> <p>\u8fd9\u4e00\u90e8\u5206\u6700\u7406\u60f3\u7684\u5b66\u4e60\u65b9\u5f0f\u662f\u8bfb\u624b\u518c\uff0c\u6211\u4f1a\u5728\u6bcf\u4e2a\u63a5\u53e3\u7684\u7ae0\u8282\u5f00\u5934\u9644\u4e0a\u5176\u5bf9\u5e94\u7684\u624b\u518c</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#8086-\u5fae\u5904\u7406\u5668","title":"8086 \u5fae\u5904\u7406\u5668","text":"<p>\u624b\u518c: Intel 8086/8088 \u5fae\u5904\u7406\u5668\u624b\u518c, \u4e00\u4e2a\u7b80\u5316\u7684 Cheat Sheet.</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u5f15\u811a\u63cf\u8ff0","title":"\u5f15\u811a\u63cf\u8ff0","text":"<p>8086 \u7684\u6570\u636e\u603b\u7ebf\u4e3a 16 \u4f4d\uff0c\u5730\u5740\u603b\u7ebf\u4e3a 20 \u4f4d\uff0c\u5bf9\u5e94\u5f15\u811a\u5982\u4e0b:</p> <ul> <li>AD0 - AD15: \u5730\u5740\u4e0e\u6570\u636e\u603b\u7ebf (\u5171\u7528\u90e8\u5206)</li> <li>A16 - A19: \u5730\u5740\u603b\u7ebf\u5269\u4f59\u7684\u90e8\u5206</li> </ul> <p>\u5176\u4ed6\u5f15\u811a\u529f\u80fd:</p> <ul> <li>CLK: \u65f6\u949f\u4fe1\u53f7</li> <li>INTR: \u4e2d\u65ad\u8bf7\u6c42\u7ebf</li> <li>\\(\\overline{\\text{BHE}}\\): \u603b\u7ebf\u9ad8\u5b57\u8282\u4f7f\u80fd (Bus High Enable), \u6307\u793a\u603b\u7ebf\u9ad8\u516b\u4f4d\u6570\u636e\u6709\u6548</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u5de5\u4f5c\u6a21\u5f0f","title":"\u5de5\u4f5c\u6a21\u5f0f","text":"<p>Maximum Mode \u6700\u5927\u6a21\u5f0f: \u6700\u5927\u6a21\u5f0f\u9002\u7528\u4e8e\u7cfb\u7edf\u5b58\u5728\u591a\u4e2a\u5fae\u5904\u7406\u5668\u7684\u60c5\u51b5\uff0c8086 \u4f5c\u4e3a\u4e3b\u5904\u7406\u5668\uff0c\u800c\u5176\u4ed6\u5904\u7406\u5668\u4f5c\u4e3a\u534f\u52a9\u5904\u7406\u5668\uff0c\u6bd4\u5982 8087 \u6d6e\u70b9\u6570\u534f\u5904\u7406\u5668\u53ef\u4ee5\u4e3a 8086 \u63d0\u4f9b\u6d6e\u70b9\u8fd0\u7b97\u529f\u80fd\u3002\u6b64\u65f6\uff0c8086 \u7684\u901a\u4fe1\u90fd\u662f\u8bf7\u6c42\u5f0f\u7684\uff0c\u9700\u8981\u7b49\u5f85 8288 \u603b\u7ebf\u82af\u7247\u7684\u4ef2\u88c1\u4fe1\u53f7\uff0c\u63a7\u5236\u4fe1\u53f7\u7531\u603b\u7ebf\u63a7\u5236\u5668 8288 \u4ea7\u751f\u3002</p> <p>Minimum Mode \u6700\u5c0f\u6a21\u5f0f: \u6700\u5c0f\u6a21\u5f0f\u9002\u7528\u4e8e\u7cfb\u7edf\u4e2d\u53ea\u6709 8086 \u4e00\u4e2a\u5fae\u5904\u7406\u5668\u7684\u60c5\u51b5\uff0c\u6b64\u65f6 8086 \u53ef\u4ee5\u76f4\u63a5\u53d1\u9001\u63a7\u5236\u4fe1\u53f7\uff0c\u5e76\u5bf9\u5185\u5b58\u548c\u5916\u90e8\u8bbe\u5907\u6709\u5b8c\u5168\u7684\u7ba1\u7406\u6743\u9650\u3002</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u5185\u5b58\u7ec4\u7ec7\u65b9\u5f0f","title":"\u5185\u5b58\u7ec4\u7ec7\u65b9\u5f0f","text":"<p>8086 \u548c 8088 \u7684 bank \u4ee5 1 Byte \u4e3a\u5bbd\u5ea6\u6765\u7ec4\u7ec7\u5185\u5b58\u30028088 \u7684\u6570\u636e\u603b\u7ebf\u662f 8 \u4f4d\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u4e00\u4e2a bank \u6765\u7ba1\u7406\uff0c\u65e0\u9700 \\(\\overline{\\text{BHE}}\\) \u4fe1\u53f7\u3002\u7136\u800c\uff0c8086 \u7684\u6570\u636e\u603b\u7ebf\u662f 16 \u4f4d\uff0c\u5185\u5b58\u9700\u8981\u5206\u4e3a\u5947\u5076\u4e24\u4e2a bank\uff0c\u5e76\u901a\u8fc7 \\(\\overline{\\text{BHE}}\\) \u4fe1\u53f7\u6765\u6307\u793a\u9ad8 8 \u4f4d (\u5947 bank) \u662f\u5426\u6709\u6548\u3002</p> <p></p> <p>\u4f7f\u7528\u6570\u636e\u7ebf\u7684\u4e0d\u540c\u60c5\u51b5:</p> <ul> <li> <p>\u5355\u5b57\u8282 &amp; \u5076\u5730\u5740: \\(D_7-D_0\\)</p> </li> <li> <p>\u5355\u5b57\u8282 &amp; \u5947\u5730\u5740 \\(D_{15}-D_8\\) </p> </li> <li> <p>\u53cc\u5b57\u8282 &amp; \u5076\u5730\u5740: \\(D_{15}-D_0\\)</p> </li> <li> <p>\u53cc\u5b57\u8282 &amp; \u5947\u5730\u5740: \u6b64\u65f6\u5185\u5b58\u672a\u5bf9\u9f50\uff0c\u8bbf\u95ee\u9700\u8981\u591a\u4e00\u4e2a\u5468\u671f\u3002\u5148\u8bfb \\(D_{15}-D_8\\)\uff0c\u518d\u8bfb \\(D_7-D_0\\)</p> </li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#82c55-\u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3","title":"82C55 \u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3","text":"<p>\u624b\u518c: Intersil \u63d0\u4f9b\u7684 82C55A \u624b\u518c</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u5668\u4ef6\u6784\u6210","title":"\u5668\u4ef6\u6784\u6210","text":"<p>82C55 \u662f\u4e00\u4e2a 24 \u5f15\u811a\u7684\u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3\uff0c\u5305\u542b 3 \u4e2a 8 \u4f4d I/O \u7aef\u53e3\uff0c\u5206\u522b\u4e3a A, B, C\u3002</p> <p>\u8fd9\u4e09\u4e2a\u7aef\u53e3\u5206\u4e3a\u4e24\u7ec4:</p> <ul> <li>Group A \u7531 A \u7aef\u53e3\u548c C \u7684\u9ad8 4 \u4f4d (\\(\\text{PC}_7-\\text{PC}_4\\)) \u6784\u6210\uff0c\u53ef\u4ee5\u5de5\u4f5c\u5728\u6a21\u5f0f 0, 1, 2</li> <li>Group B \u7531 B \u7aef\u53e3\u548c C \u7684\u4f4e 4 \u4f4d (\\(\\text{PC}_3-\\text{PC}_0\\)) \u6784\u6210\uff0c\u53ef\u4ee5\u5de5\u4f5c\u5728\u6a21\u5f0f 0, 1</li> </ul> <p>82C55 \u7684\u5f15\u811a\u63cf\u8ff0\u5982\u4e0b:</p> <p></p> <ul> <li>\\(\\overline{\\text{CS}}\\): \u82af\u7247\u9009\u62e9\u4fe1\u53f7\uff0c\u4f4e\u7535\u5e73\u6709\u6548</li> <li>\\(\\overline{\\text{RD}}\\): \u8bfb\u4fe1\u53f7\uff0c\u4f4e\u7535\u5e73\u6709\u6548\uff0c\u8868\u793a\u8bfb\u53d6\u6570\u636e\u6216\u5de5\u4f5c\u72b6\u6001</li> <li>\\(\\overline{\\text{WR}}\\): \u5199\u4fe1\u53f7\uff0c\u4f4e\u7535\u5e73\u6709\u6548\uff0c\u8868\u793a\u5199\u5165\u6570\u636e\u6216\u63a7\u5236\u5b57</li> <li>\\(\\text{A}_1-\\text{A}_0\\): \u7aef\u53e3\u5730\u5740\u7ebf\uff0c\u7528\u4e8e\u9009\u62e9 Port A, Port B, Port C</li> <li>\\(\\text{D}_7-\\text{D}_0\\): \u6570\u636e\u603b\u7ebf</li> <li>\\(\\text{PA}_7-\\text{PA}_0\\): Group A \u7684 8 \u4f4d\u7aef\u53e3</li> <li>\\(\\text{PB}_7-\\text{PB}_0\\): Group B \u7684 8 \u4f4d\u7aef\u53e3</li> <li>\\(\\text{PC}_7-\\text{PC}_0\\): Group C \u7684 8 \u4f4d\u7aef\u53e3</li> </ul> <p>\u7aef\u53e3 A \u6bd4\u7aef\u53e3 B \u529f\u80fd\u591a\u7684\u539f\u56e0\u5728\u4e8e\uff0c\u5728 82C55 \u5185\u90e8\uff0c\u7aef\u53e3 A \u7531\u72ec\u5360\u7684\u8f93\u5165 latch \u548c\u8f93\u51fa latch / buffer, \u800c\u7aef\u53e3 B \u53ea\u6709\u8f93\u5165 buffer \u548c\u5171\u4eab\u7684\u8f93\u5165\u8f93\u51fa latch / buffer.</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u63a7\u5236\u5b57\u8bbe\u7f6e","title":"\u63a7\u5236\u5b57\u8bbe\u7f6e","text":"<p>82C55 \u7684\u63a7\u5236\u5b57\u4e3a 8 \u4f4d\uff0c\u4f46\u662f\u53ef\u4ee5\u63a7\u5236\u4e24\u4e2a\u529f\u80fd\uff0c\u4e00\u662f\u8bbe\u7f6e\u6bcf\u4e2a Group \u7684\u5de5\u4f5c\u6a21\u5f0f\uff0c\u4e8c\u662f\u63a7\u5236 Port C \u6bcf\u4e2a\u5f15\u811a\u7684\u8f93\u5165\u8f93\u51fa\u65b9\u5411\uff0c\u8fd9\u4e24\u4e2a\u63a7\u5236\u529f\u80fd\u901a\u8fc7\u6700\u9ad8\u4f4d \\(D_7\\) \u6765\u533a\u5206.</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u63a7\u5236\u5b57-a---\u6a21\u5f0f\u8bbe\u7f6e","title":"\u63a7\u5236\u5b57 A - \u6a21\u5f0f\u8bbe\u7f6e","text":"<p>\u5f53 \\(D_7\\) \u4e3a 1 \u65f6\uff0c\u8bbe\u7f6e\u7684\u662f Group A \u548c Group B \u7684\u5de5\u4f5c\u6a21\u5f0f\u548c\u8f93\u5165\u8f93\u51fa\u65b9\u5411. \u6ce8\u610f\u53ea\u6709 Group A \u53ef\u4ee5\u5de5\u4f5c\u5728\u6a21\u5f0f 2, \u56e0\u6b64 Group A \u7684\u5de5\u4f5c\u6a21\u5f0f\u9700\u8981\u6709 2 \u4f4d\u6765\u8868\u793a.</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u63a7\u5236\u5b57-b---port-c-\u8bbe\u7f6e","title":"\u63a7\u5236\u5b57 B - Port C \u8bbe\u7f6e","text":"<p>\u5f53 \\(D_7\\) \u4e3a 0 \u65f6\uff0c\u8bbe\u7f6e\u7684\u662f Port C \u7684\u8f93\u51fa\u7535\u5e73. \\(D_0\\) \u8868\u793a\u7684\u662f\u8bbe\u7f6e / \u91cd\u7f6e (set / reset), \u800c \\(D_3-D_1\\) \u8868\u793a\u7684\u662f\u8bbe\u7f6e\u7684\u5f15\u811a. \u6ce8\u610f\u6b64\u65f6 \\(D_6-D_4\\)\u4e3a don't care.</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u8fd0\u884c\u65b9\u5f0f","title":"\u8fd0\u884c\u65b9\u5f0f","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-0","title":"\u6a21\u5f0f 0","text":"<p>\u6a21\u5f0f 0 \u65e0\u63e1\u624b\u4fe1\u53f7\uff0c\u53ea\u6709\u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u9002\u7528\u4e8e\u7b80\u5355\u7684 Always On \u7684 I/O \u64cd\u4f5c\u3002\u6bd4\u5982\u70b9\u4eae LED \u706f\uff0c\u53ea CPU \u9700\u8981\u8f93\u51fa\u4eae\u706f\u72b6\u6001\u5373\u53ef\u3002\u6a21\u5f0f 0 \u65f6\u63a5\u53e3\u529f\u80fd\u5982\u4e0b:</p> <ul> <li>\u4e24\u4e2a 8 \u4f4d\u7aef\u53e3 Port A, Port B \u4ee5\u53ca\u4e24\u4e2a 4 \u4f4d\u7aef\u53e3: Port C \u7684\u9ad8 4 \u4f4d\u548c\u4f4e 4 \u4f4d</li> <li>\u6bcf\u4e2a\u7aef\u53e3\u5747\u53ef\u4ee5\u72ec\u7acb\u8bbe\u7f6e\u8f93\u5165\u548c\u8f93\u51fa</li> <li>\u8f93\u51fa\u6709 latch \u9501\u5b58\u8f93\u51fa\u72b6\u6001\uff0c\u8f93\u5165\u6ca1\u6709</li> </ul> \u4f8b\u5b50: \u63a7\u5236\u6b65\u8fdb\u7535\u673a <p>half-step \u534a\u6b65\u63a7\u5236: <pre><code>.stack 64h\n.data\ndatacw  db 0000_0110b ;\n        db 0000_0100b ; half-step\n        db 0000_0011b ; \u987a\u65f6\u9488\u65cb\u8f6c\u4f4d\u7f6e\n        db 0000_0010b ;\n\n.code\n    mov ax, @data\n    mov ds, ax\n    mov bx, offset datacw\n    mov si, 0         ; \u6b65\u8fdb\u4f4d\u7f6e\n    mov cx, 16        ; \u6b65\u8fdb\u6b21\u6570\nnext_step:\n    mov al, [bx][si]  ; \u52a0\u8f7d\u5f53\u524d\u72b6\u6001\u6b65\u8fdb\u7535\u673a\u63a7\u5236\u72b6\u6001\n    out 7, al         ; \u8f93\u51fa\u5230\u7aef\u53e3\n    inc si\n    cmp si, 4\n    jb next_step\n    mov si, 0         ; \u91cd\u7f6e\u6b65\u8fdb\u4f4d\u7f6e\n    loop next_step\n    hlt\n.exit\n</code></pre></p> <p>micro-step \u5fae\u6b65\u63a7\u5236: \u7528 cx \u7684\u6700\u9ad8\u4f4d\u8868\u793a\u65b9\u5411\uff0c\u540e\u9762 15 \u4f4d\u8868\u793a\u6b65\u8fdb\u591a\u5c11\u6b65</p> <pre><code>    PORT EQU 40h ; \u7aef\u53e3 A \u5730\u5740\n\nSTEP PROC NEAR USES cx ax\n    mov al, pos\n    or  cx, cx                   ; \u5224\u65ad\u5f53\u524d\u8f6c\u5b50\u4f4d\u7f6e\n    .IF !ZERO?                   ; \u5982\u679c\u8f6c\u5b50\u4f4d\u7f6e\u4e0d\u4e3a 0\n        .IF !SIGN?\n            .REPEAT\n                rol al, 1        ; \u5411\u5de6\u65cb\u8f6c\n                out port al\n                call delay       ; \u7b49\u5f85 1 ms\n            .UNTILCXZ\n        .ELSE\n            and cx, 7FFFh\n            .REPEAT\n                ror al, 1        ; \u5411\u53f3\u65cb\u8f6c\n                out port, al\n                call delay       ; \u7b49\u5f85 1 ms\n            .UNTILCXZ\n        .ENDIF\n    .ENDIF\n    mov pos, al\n    ret\nSTEP ENDP\n</code></pre>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-1","title":"\u6a21\u5f0f 1","text":"<p>\u6a21\u5f0f 1 \u91c7\u7528\u9009\u901a\u5f0f\u63e1\u624b\u4fe1\u53f7\uff0c\u9002\u7528\u4e8e\u9700\u8981 CPU \u548c\u5916\u8bbe\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\u3002\u6bd4\u5982\u952e\u76d8\u8f93\u5165\uff0cCPU \u9700\u8981\u8bfb\u53d6\u952e\u76d8\u7684\u8f93\u5165\u3002</p> <p>\u6a21\u5f0f 1 \u8f93\u5165\u7684\u5de5\u4f5c\u65f6\u5e8f:</p> <ol> <li>\u8bbe\u5907\u901a\u8fc7 \\(\\overline{\\text{STB}}\\) \u4fe1\u53f7\u901a\u77e5 82C55 \u6570\u636e\u51c6\u5907\u597d</li> <li>82C55 \u901a\u8fc7 IBF \u4fe1\u53f7\u544a\u77e5\u8bbe\u5907\u5f53\u524d\u8f93\u5165\u7f13\u51b2\u5df2\u6ee1\uff0c\u4e0d\u8981\u518d\u4f20\u6570\u636e</li> <li>83C55 \u901a\u8fc7 INTR \u7ed9 CPU \u53d1\u9001\u4e2d\u65ad\uff0c\u8bf7\u6c42 CPU \u8bfb\u53d6\u6570\u636e</li> <li>CPU \u901a\u8fc7 \\(\\overline{\\text{RD}}\\) \u4fe1\u53f7\u8bfb\u53d6\u6570\u636e</li> </ol> <p>\u6a21\u5f0f 1 \u8f93\u51fa\u7684\u5de5\u4f5c\u65f6\u5e8f:</p> <ol> <li>CPU \u901a\u8fc7 \\(\\overline{\\text{WR}}\\) \u4fe1\u53f7\u5199\u5165\u6570\u636e</li> <li>82C55 \u901a\u8fc7 \\(\\overline{\\text{OBF}_\\text{B}}\\) \u4f4e\u7535\u5e73\u544a\u77e5\u8bbe\u5907\u8f93\u5165\u7f13\u51b2\u5df2\u6ee1\uff0c\u901a\u77e5\u8bbe\u5907\u8bfb\u53d6</li> <li>\u8bbe\u5907\u901a\u8fc7 \\(\\overline{\\text{ACK}}\\) \u901a\u77e5 82C55 \u5df2\u7ecf\u8bfb\u8d70\u6570\u636e</li> <li>82C55 \u5411 CPU \u53d1\u9001\u4e2d\u65ad\uff0c\u544a\u77e5 CPU \u53ef\u4ee5\u7ee7\u7eed\u5199\u5165\u6570\u636e</li> </ol> \u4f8b\u5b50: \u63a7\u5236\u5e76\u53e3\u6253\u5370\u673a <p>\u4e32\u53e3\u6253\u5370\u673a\u6bcf\u6b21\u63a5\u53d7 1 Byte ASCII \u7801\uff0c\u5b58\u50a8\u5728 ah \u5bc4\u5b58\u5668\u4e2d\u3002</p> <p>\u4f7f\u7528\u7aef\u53e3 B \u8fdb\u884c\u5e76\u884c\u8f93\u51fa\uff0c\u540c\u65f6\u63a7\u5236\u7aef\u53e3 C \u7684 \\(\\text{PC}_2\\) \u4f5c\u4e3a \\(\\overline{\\text{ACK}}\\) \u8f93\u5165\u5f15\u811a\uff0c\u7aef\u53e3 C \u7684 \\(\\text{PC}_4\\) \u4f5c\u4e3a \\(\\overline{\\text{DS}}\\) \u8f93\u51fa\u5f15\u811a\uff0c\u4ee3\u8868\u6570\u636e\u9009\u901a\u4fe1\u53f7:</p> <p></p> <pre><code>BIT1  EQU 2\nPORTC EQU 62H\nPORTB EQU 61H\nCMD   EQU 63H\n\nPRINT PROC NEAR\n    .REPEAT\n        in   al, portc ; \u8bfb\u53d6 82C55 \u72b6\u6001\u5b57\n        test al, BIT1  ; \u68c0\u6d4b OBF \u6807\u5fd7\u4f4d\n    .UNTIL !ZERO?      ; \u7b49\u5f85\u76f4\u5230 OBF = 1\uff0c\u5373\u8f93\u51fa\u7f13\u51b2\u533a\u6ee1\n    mov al, ah         ; \u5f85\u6253\u5370\u5b57\u7b26\u4f4d\u4e8e ah\n    out PORTB, al      ; \u53d1\u9001\u6570\u636e\n    mov al, 8          ; 0000_1000, bit reset, \u9009\u62e9 (100)_2 = 4\n    out CMD, al        ; \u91cd\u7f6e PC4 \u4e3a 0: \u9009\u901a\u4fe1\u53f7\u7f6e 0\n    mov al, 9          ; 0000_1001, bit set,   \u9009\u62e9 (100)_2 = 4\n    out CMD, al        ; \u8bbe\u7f6e PC4 \u4e3a 1: \u9009\u901a\u4fe1\u53f7\u7f6e 1\n    RET\nPRINT ENDP\n</code></pre> <p>TODO: \u8fd9\u91cc\u4f7f\u7528 PC4 \u7684\u539f\u56e0</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-2","title":"\u6a21\u5f0f 2","text":"<p>\u6a21\u5f0f 2 \u5219\u5305\u542b\u4e86\u53cc\u5411\u603b\u7ebf\u64cd\u4f5c\uff0c\u53ef\u4ee5\u5728\u4e0d\u540c\u65f6\u95f4\u505a\u8f93\u5165\u548c\u8f93\u51fa\uff0c\u800c\u6a21\u5f0f 0 \u548c 1 \u7684\u8f93\u5165\u8f93\u51fa\u65b9\u5411\u662f\u56fa\u5b9a\u7684\u3002</p> <pre><code>BIT5  EQU 20h\nPORTA EQU 62h\nPORTC EQU 60h\n\nREAD PROC NEAR\n    .REPEAT\n        in   al, PORTC  ; \u8bfb\u5165\u72b6\u6001\n        test al, BIT5   ; \u68c0\u67e5 IBF \u6807\u5fd7\u4f4d\n    .UNTIL !ZERO?       ; \u4e00\u76f4\u7b49\u5f85\uff0c\u76f4\u5230 IBF = 1\uff0c\u5373\u8f93\u5165\u7f13\u51b2\u533a\u6ee1\n    in al, PORTA        ; \u4ece\u6570\u636e\u7aef\u53e3\u8bfb\u53d6\n    ret\nREAD ENDP\n</code></pre>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#8254-\u53ef\u7f16\u7a0b\u5b9a\u65f6\u5668","title":"8254 \u53ef\u7f16\u7a0b\u5b9a\u65f6\u5668","text":"<p>\u624b\u518c: 8254 \u53ef\u7f16\u7a0b\u5b9a\u65f6\u5668\u624b\u518c</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u5668\u4ef6\u6784\u6210_1","title":"\u5668\u4ef6\u6784\u6210","text":"<p>8254 \u662f\u4e00\u4e2a\u53ef\u7f16\u7a0b\u5b9a\u65f6\u5668\uff0c\u5176\u5185\u90e8\u542b\u6709 3 \u4e2a\u72ec\u7acb\u7684\u8ba1\u6570\u5668\uff0c\u6bcf\u4e2a\u8ba1\u6570\u5668\u90fd\u662f 16 \u4f4d\u7684\uff0c\u53ef\u4ee5\u5de5\u4f5c\u5728\u4e0d\u540c\u7684\u5de5\u4f5c\u6a21\u5f0f\u4e0b\u3002\u4e0d\u8fc7\uff0c8254 \u7684\u6570\u636e\u603b\u7ebf\u53ea\u6709 8 \u4f4d\uff0c\u56e0\u6b64\u9700\u8981\u4e24\u6b21\u8bfb\u5199\u64cd\u4f5c\u624d\u80fd\u5b8c\u6210\u5bf9 16 \u4f4d\u8ba1\u6570\u5668\u7684\u64cd\u4f5c\u30028254 \u82af\u7247\u7684\u5185\u90e8\u7ed3\u6784\u4e0e\u5f15\u811a\u63cf\u8ff0\u5982\u4e0b:</p> <p></p> <ul> <li>\\(\\overline{\\text{CS}}\\): \u82af\u7247\u9009\u62e9\u4fe1\u53f7, \u4f4e\u7535\u5e73\u6709\u6548</li> <li>\\(\\text{A}_1-\\text{A}_0\\): \u7aef\u53e3\u9009\u62e9\uff0c\u6307\u5b9a\u8981\u64cd\u4f5c\u7684\u8ba1\u6570\u5668<ul> <li>\u5f53 \\(\\text{A}_1-\\text{A}_0 = 11\\) \u65f6\uff0c\u8868\u793a\u8bfb\u5199\u63a7\u5236\u5b57</li> </ul> </li> <li>\\(\\overline{\\text{RD}}\\): \u8bfb\u4fe1\u53f7, \u4f4e\u7535\u5e73\u6709\u6548</li> <li>\\(\\overline{\\text{WR}}\\): \u5199\u4fe1\u53f7, \u4f4e\u7535\u5e73\u6709\u6548</li> <li>\\(\\text{D}_7-\\text{D}_0\\): \u6570\u636e\u603b\u7ebf</li> <li>\\(\\text{CLK}\\), \\(\\text{GATE}\\), \\(\\text{OUT}\\): \u65f6\u949f\u8f93\u5165, \u95e8\u63a7\u8f93\u5165, \u8f93\u51fa\u4fe1\u53f7</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u7f16\u7a0b\u65b9\u5f0f","title":"\u7f16\u7a0b\u65b9\u5f0f","text":"<p>8254 \u5355\u4e2a\u8ba1\u6570\u5668\u7684\u5185\u90e8\u7ed3\u6784\u5982\u4e0b (\u63a7\u5236\u5b57\u5bc4\u5b58\u5668\u662f\u5171\u7528\u7684):</p> <p></p> <p>\u8ba1\u6570\u5668\u5bc4\u5b58\u5668\u662f 16 \u4f4d\u7684 CE\uff0c\u5176\u8f93\u5165\u662f\u4e24\u4e2a 8 \u4f4d\u7684\u5bc4\u5b58\u5668\u521d\u503c\u5bc4\u5b58\u5668 \\(\\text{CR}_\\text{M}\\) \u548c \\(\\text{CR}_\\text{L}\\)\uff0c\u5176\u8f93\u51fa\u53c8\u63a5\u5165\u4e86\u4e24\u4e2a 8 \u4f4d\u7684\u8f93\u51fa\u9501\u5b58\u5668 \\(\\text{OL}_\\text{M}\\) \u548c \\(\\text{OL}_\\text{L}\\). \u8fd9\u6837\u4e00\u6765\uff0c\u8bfb\u8ba1\u6570\u5668\u7684\u503c\u548c\u5199\u5165\u8ba1\u6570\u521d\u503c\u7684\u64cd\u4f5c\u90fd\u4e0d\u5f71\u54cd\u8ba1\u6570\u5668\u7684\u5de5\u4f5c (\u4e0d\u8fc7\u4ecd\u7136\u5efa\u8bae\u4f7f\u7528\u95e8\u63a7\u4fe1\u53f7\u6682\u505c\u8ba1\u6570\u518d\u64cd\u4f5c).</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u63a7\u5236\u5b57\u683c\u5f0f","title":"\u63a7\u5236\u5b57\u683c\u5f0f","text":"<p>8254 \u63a7\u5236\u5b57\u7684\u683c\u5f0f\u5982\u4e0b:</p> <p></p> <ul> <li>\\(\\text{SC}_1-\\text{SC}_0\\): \u9009\u62e9\u8ba1\u6570\u5668 (Select Counter)<ul> <li>\u5f53 \\(\\text{SC}_1-\\text{SC}_0 = 11\\) \u65f6, \u8868\u793a\u56de\u8bfb\u8ba1\u6570\u5668\u72b6\u6001</li> </ul> </li> <li>\\(\\text{RW}_1-\\text{RW}_0\\): \u8bfb\u5199\u8ba1\u6570\u5668\u7684\u65b9\u5f0f, 00 \u8868\u793a\u8ba1\u6570\u5668\u9501\u5b58</li> <li>\\(\\text{M}_2-\\text{M}_0\\): \u5de5\u4f5c\u6a21\u5f0f\uff0c\u6a21\u5f0f 0-5<ul> <li>000: \u6a21\u5f0f 0</li> <li>001: \u6a21\u5f0f 1</li> <li>X10: \u6a21\u5f0f 2</li> <li>X11: \u6a21\u5f0f 3</li> <li>100: \u6a21\u5f0f 4</li> <li>101: \u6a21\u5f0f 5</li> </ul> </li> <li>\\(\\text{BCD}\\): \u4e8c\u8fdb\u5236\u6216 BCD \u8ba1\u6570\u65b9\u5f0f, \u4e8c\u8fdb\u5236\u8ba1\u6570\u8303\u56f4 0 - 0xFFFF (65535), BCD \u8ba1\u6570\u8303\u56f4 0 - 9999</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u4e24\u9636\u6bb5\u521d\u59cb\u5316","title":"\u4e24\u9636\u6bb5\u521d\u59cb\u5316","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u8bfb\u8ba1\u6570\u5668\u65b9\u5f0f","title":"\u8bfb\u8ba1\u6570\u5668\u65b9\u5f0f","text":"<p>\u8bfb\u53d6\u8ba1\u6570\u5668\u7684\u503c: \u4f7f\u7528\u8ba1\u6570\u5668\u9501\u5b58\u6307\u4ee4</p> <p></p> <pre><code>    mov  al, 10000000b ; 10_00_0000: \u8ba1\u6570\u5668 2 \u9501\u5b58\n    out  43h, al\n    in   al, 42h       ; \u8bfb\u53d6 LSB\n    mov  ah, al\n    in   al, 42h       ; \u8bfb\u53d6 MSB\n    xchg ah, al        ; \u4ea4\u6362 ax \u7684\u9ad8\u4f4e\u5b57\u8282\n</code></pre> <p>\u8bfb\u53d6\u8ba1\u6570\u5668\u72b6\u6001: \u4f7f\u7528\u63a7\u5236\u5b57\u56de\u8bfb\u6307\u4ee4\uff0c\u5f53 \\(\\text{D}_7-\\text{D}_6 = 11\\) \u65f6\uff0c\u8868\u793a\u56de\u8bfb\u8ba1\u6570\u5668\u72b6\u6001\uff0c\u6b64\u65f6\u5176\u4ed6\u4f4d\u6709\u4e0d\u540c\u7684\u542b\u4e49:</p> <p></p> <p>\u4e00\u4e9b\u56de\u8bfb\u6307\u4ee4\u7684\u4f8b\u5b50:</p> <p></p> <p>\u6ce8\u610f\uff0c\u5982\u679c\u5df2\u7ecf\u9501\u5b58\u4e86 \u8ba1\u6570 / \u72b6\u6001\uff0c\u5982\u679c\u6ca1\u6709\u8bfb\u8d70\uff0c\u518d\u6b21\u53d1\u9001\u9501\u5b58\u6307\u4ee4\u4e0d\u4f1a\u66f4\u65b0\u9501\u5b58\u7684\u503c. \u5982\u679c\u8ba1\u6570\u548c\u72b6\u6001\u90fd\u9501\u5b58\u4e86\uff0c\u90a3\u4e48\u4e00\u5b9a\u5148\u8bfb\u53d6\u72b6\u6001\uff0c\u518d\u8bfb\u53d6\u8ba1\u6570 (\u56e0\u4e3a\u8ba1\u6570\u503c\u53ef\u80fd\u5355\u5b57\u8282\uff0c\u4e5f\u53ef\u80fd\u53cc\u5b57\u8282\uff0c\u8bfb\u53d6\u4e0e\u5199\u5165\u8bbe\u7f6e\u76f8\u540c).</p> <p>\u72b6\u6001\u5b57\u542b\u4e49: (\\(\\text{D}_5-\\text{D}_0\\) \u4e0e\u63a7\u5236\u5b57\u683c\u5f0f\u76f8\u540c)</p> <p></p> <pre><code>    mov  al, 11000010b ; 11_00_001_0: \u56de\u8bfb\u6307\u4ee4, \u9501\u5b58\u8ba1\u6570\u548c\u72b6\u6001, \u8ba1\u6570\u5668 0\n    out  43h, al\n    in   al, 40h       ; \u8bfb\u53d6\u8ba1\u6570\u5668 0 \u72b6\u6001\u5b57\n    mov  bl, al        ; \u72b6\u6001\u5b57\u4fdd\u5b58\u81f3 bl\n    in   al, 40h       ; \u8bfb\u53d6\u8ba1\u6570\u5668 LSB (\u5047\u8bbe\u8ba1\u6570\u5668 0 \u8bfb\u5199\u53cc\u5b57\u8282)\n    mov  ah, al\n    in   al, 40h       ; \u8bfb\u53d6\u8ba1\u6570\u5668 MSB\n    xchg ah, al        ; \u4ea4\u6362 ax \u7684\u9ad8\u4f4e\u5b57\u8282\n</code></pre>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u8fd0\u884c\u6a21\u5f0f","title":"\u8fd0\u884c\u6a21\u5f0f","text":"<p>\u4e0b\u9762\u7528\u5230\u7684\u4e00\u4e9b\u672f\u8bed:</p> <ul> <li>CLK Pulse (CLK \u8109\u51b2): \u65f6\u949f\u4fe1\u53f7 CLK \u7684\u4e00\u4e2a\u4e0a\u5347\u6cbf + \u4e00\u4e2a\u4e0b\u964d\u6cbf\uff0c\u76f4\u5230\u4e0b\u964d\u6cbf\u624d\u7b97\u4e00\u4e2a\u8109\u51b2.</li> <li>Trigger (\u95e8\u63a7\u89e6\u53d1): \u95e8\u63a7\u4fe1\u53f7 GATE \u7684\u4e0a\u5347\u6cbf.</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-0-interrupt-on-terminal-count-\u8ba1\u6570\u5b9a\u65f6\u4e2d\u65ad","title":"\u6a21\u5f0f 0: Interrupt on Terminal Count \u8ba1\u6570\u5b9a\u65f6\u4e2d\u65ad","text":"<p>\u6a21\u5f0f 0 \u9002\u5408\u5c06 \\(\\text{OUT}\\) \u4e0e\u4e2d\u65ad\u63a7\u5236\u5668\u76f8\u8fde\uff0c\u7528\u4e8e\u4ea7\u751f\u5b9a\u65f6\u4e2d\u65ad.</p> <p>\u5199\u5165\u63a7\u5236\u5b57\u540e\uff0c\u95e8\u63a7\u6709\u6548\u5f00\u59cb\u8ba1\u65f6\uff0c\\(\\text{OUT}\\) \u59cb\u7ec8\u4e3a\u4f4e\u7535\u5e73\uff0c\u76f4\u5230\u8ba1\u6570\u5668\u53d8\u4e3a 0\uff0c\\(\\text{OUT}\\) \u53d8\u4e3a\u9ad8\u7535\u5e73\u5e76\u7ef4\u6301.</p> <p>\u7279\u70b9: \u8ba1\u6570\u521d\u503c\u5728 CLK \u8109\u51b2\u4e0b\u964d\u6cbf\u52a0\u8f7d\uff0c\u76f4\u5230\u521d\u503c\u5b8c\u5168\u52a0\u8f7d\u540e\u624d\u5f00\u59cb\u8ba1\u6570. \u65e0\u8bba\u662f\u5355\u5b57\u8282\u8fd8\u662f\u53cc\u5b57\u8282\u521d\u503c N\uff0c\u90fd\u53ea\u5728\u5b8c\u5168\u52a0\u8f7d\u540e\u624d\u5f00\u59cb\u8ba1\u6570. \u5355\u5b57\u8282 N+1 \u4e2a CLK \u8109\u51b2\uff0c\u53cc\u5b57\u8282 N+2 \u4e2a CLK \u8109\u51b2.</p> \u65f6\u5e8f\u56fe <p>Case 1: \u6b63\u5e38\u5de5\u4f5c\u60c5\u51b5. \u8ba1\u6570\u521d\u503c\u5728 CLK \u8109\u51b2\u4e0b\u964d\u6cbf\u52a0\u8f7d\uff0c\u8ba1\u6570\u5668\u53d8\u4e3a 0 \u65f6, OUT \u62c9\u9ad8\u5e76\u4fdd\u6301. \u8ba1\u6570\u5230 0 \u7ee7\u7eed\u51cf 1 \u4f1a\u53d8\u6210 0xFFFF.</p> <p></p> <p>Case 2: \u95e8\u63a7\u4fe1\u53f7 GATE \u62c9\u4f4e\uff0c\u8ba1\u65f6\u6682\u505c.</p> <p></p> <p>Case 3: \u91cd\u65b0\u8f7d\u5165\u8ba1\u6570\u521d\u503c\u60c5\u51b5.</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-1-hardware-retriggerable-one-shot-\u786c\u4ef6\u53ef\u91cd\u89e6\u53d1\u5355\u8109\u51b2","title":"\u6a21\u5f0f 1: Hardware Retriggerable One-shot \u786c\u4ef6\u53ef\u91cd\u89e6\u53d1\u5355\u8109\u51b2","text":"<p>\\(\\text{OUT}\\) \u6700\u5f00\u59cb\u662f\u9ad8\u7535\u5e73\uff0c\u5f53\u68c0\u6d4b\u5230\u4e00\u4e2a CLK \u8109\u51b2\u548c\u95e8\u63a7\u89e6\u53d1\u65f6\uff0c\\(\\text{OUT}\\) \u53d8\u4e3a\u4f4e\u7535\u5e73\uff0c\u76f4\u5230\u8ba1\u6570\u5668\u53d8\u4e3a 0 \u540e\uff0c\u62c9\u9ad8\u5e76\u4ec5\u7ef4\u6301. \u76f4\u5230\u4e0b\u4e00\u6b21\u95e8\u63a7\u89e6\u53d1\u8ddf\u4e00\u4e2a CLK \u8109\u51b2\uff0c\u91cd\u65b0\u5f00\u59cb\u8ba1\u6570.</p> <p>\u8ba1\u6570\u521d\u503c\u52a0\u8f7d (armed) \u540e\uff0c\u95e8\u63a7\u89e6\u53d1 (trigger) \u4f1a\u5728\u4e0b\u4e00\u4e2a CLK \u8109\u51b2\u4e0b\u964d\u6cbf\u7acb\u523b\u52a0\u8f7d\u8ba1\u6570\u5668\uff0c\u5c06 \\(\\text{OUT}\\) \u62c9\u4f4e\uff0c\u5f00\u59cb\u5355\u8109\u51b2\u8ba1\u6570. \u5728\u8ba1\u6570\u671f\u95f4\u5199\u5165\u8ba1\u6570\u521d\u503c\u4e0d\u5f71\u54cd\u5f53\u524d\u8ba1\u6570\uff0c\u9664\u975e\u53c8\u6765\u4e86\u4e00\u6b21\u89e6\u53d1\u4fe1\u53f7.</p> \u65f6\u5e8f\u56fe <p>Case 1: \u6b63\u5e38\u5de5\u4f5c\u60c5\u51b5. \u65f6\u949f\u5728\u95e8\u63a7\u89e6\u53d1 + CLK \u8109\u51b2\u7684\u4e0b\u964d\u6cbf\u8f7d\u5165\uff0c\u6bcf\u6b21 CLK \u8109\u51b2\u8ba1\u6570\u4e00\u6b21.</p> <p></p> <p>Case 2: \u591a\u6b21\u89e6\u53d1\u60c5\u51b5. \u53ef\u4ee5\u770b\u5230\u8ba1\u6570\u5668\u5728\u95e8\u63a7\u89e6\u53d1 + CLK \u8109\u51b2\u7684\u4e0b\u964d\u6cbf\u91cd\u65b0\u52a0\u8f7d.</p> <p></p> <p>Case 3: \u91cd\u65b0\u5199\u5165\u521d\u503c\u60c5\u51b5. \u91cd\u65b0\u5199\u5165\u521d\u503c\u4e0d\u4f1a\u5f71\u54cd\u5f53\u524d\u8ba1\u6570\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u89e6\u53d1.</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-2-rate-generator-\u65f6\u949f\u5206\u9891","title":"\u6a21\u5f0f 2: Rate Generator: \u65f6\u949f\u5206\u9891","text":"<p>\u6a21\u5f0f 2 \u9002\u7528\u4e8e\u65f6\u949f\u5206\u9891\uff0c\u5f53\u8ba1\u6570\u521d\u503c\u4e3a N \u65f6\uff0c\u8f93\u51fa\u9891\u7387\u88ab\u5206\u9891\u4e3a \\(\\frac{1}{N}\\).</p> <p>\\(\\text{OUT}\\) \u7edd\u5927\u591a\u6570\u60c5\u51b5\u4e3a\u9ad8\u7535\u5e73\uff0c\u76f4\u5230\u5f53\u8ba1\u6570\u5668\u51cf\u5c0f\u5230 1 \u65f6\uff0c\u53d8\u4e3a\u4f4e\u7535\u5e73\uff0c\u4e14\u53ea\u7ef4\u6301\u4e00\u4e2a CLK \u8109\u51b2. \u968f\u540e\u8ba1\u6570\u5668\u91cd\u65b0\u52a0\u8f7d\u521d\u503c\uff0c\u7ee7\u7eed\u8ba1\u6570\uff0c\u5faa\u73af\u4e0b\u53bb. </p> <p>\u95e8\u63a7\u4fe1\u53f7\u4f1a\u5f71\u54cd\u6a21\u5f0f 2 \u7684\u8f93\u51fa. \u5f53\u95e8\u63a7\u4fe1\u53f7 = 0 (\u65e0\u6548) \u65f6\uff0c\\(\\text{OUT}\\) \u7acb\u523b\u62c9\u9ad8\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u95e8\u63a7\u6709\u6548\uff0c\u91cd\u65b0\u88c5\u5165\u521d\u59cb\u503c\u5e76\u5f00\u59cb\u8ba1\u6570.</p> \u65f6\u5e8f\u56fe <p>Case 1: \u6b63\u5e38\u5de5\u4f5c\u60c5\u51b5. \u53ef\u4ee5\u770b\u5230 \\(\\text{OUT}\\) \u6bcf N = 3 \u4e2a\u5468\u671f\u62c9\u4f4e\u4e00\u6b21.</p> <p></p> <p>Case 2: \u95e8\u63a7\u4fe1\u53f7\u5f71\u54cd\u60c5\u51b5. \u5f53\u95e8\u63a7\u4fe1\u53f7 = 0 (\u65e0\u6548) \u65f6\uff0c\\(\\text{OUT}\\) \u7acb\u523b\u62c9\u9ad8\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u95e8\u63a7\u6709\u6548\uff0c\u91cd\u65b0\u88c5\u5165\u521d\u59cb\u503c\u5e76\u5f00\u59cb\u8ba1\u6570.</p> <p></p> <p>Case 3: \u91cd\u65b0\u8f7d\u5165\u8ba1\u6570\u521d\u503c\u60c5\u51b5. \u91cd\u65b0\u5199\u5165\u521d\u503c\u4e0d\u4f1a\u5f71\u54cd\u5f53\u524d\u8ba1\u6570\uff0c\u76f4\u5230\u4e0b\u4e00\u6b21\u8ba1\u6570.</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-3-square-wave-mode-\u65b9\u6ce2","title":"\u6a21\u5f0f 3: Square Wave Mode: \u65b9\u6ce2","text":"<p>\u6a21\u5f0f 3 \u9002\u7528\u4e8e\u4ea7\u751f\u65b9\u6ce2\u4fe1\u53f7\uff0c\\(\\text{OUT}\\) \u4f1a\u5728\u8ba1\u6570\u5668\u7684\u4e00\u534a\u65f6\u62c9\u9ad8\uff0c\u53e6\u4e00\u534a\u65f6\u62c9\u4f4e.</p> <p>\u5982\u679c\u8f93\u5165 N \u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u5360\u7a7a\u6bd4\u4e3a 50%, \u5982\u679c N \u4e3a\u5947\u6570\uff0c\u9ad8\u7535\u5e73\u5468\u671f\u6bd4\u4f4e\u7535\u5e73\u5468\u671f\u591a\u4e00\u4e2a\uff0c\u5360\u7a7a\u6bd4\u4e3a \\(\\frac{N+1}{2N}\\).</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-4-software-triggered-strobe-\u8f6f\u4ef6\u89e6\u53d1\u9009\u901a","title":"\u6a21\u5f0f 4: Software Triggered Strobe: \u8f6f\u4ef6\u89e6\u53d1\u9009\u901a","text":"<p>\u7c7b\u6bd4\u6a21\u5f0f 0, \u4e0d\u8fc7\u6a21\u5f0f 4 \u5728\u8ba1\u6570\u5668\u5230\u8fbe 0 \u65f6\u53ea\u4ea7\u751f 1 \u62cd\u4f4e\u7535\u5e73.</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6a21\u5f0f-5-hardware-triggered-strobe-retriggerable-\u786c\u4ef6\u89e6\u53d1\u9009\u901a","title":"\u6a21\u5f0f 5: Hardware Triggered Strobe (Retriggerable): \u786c\u4ef6\u89e6\u53d1\u9009\u901a","text":"<p>\u4e0e\u6a21\u5f0f 4 \u7c7b\u4f3c\uff0c\u4f46\u662f\u53ea\u8981\u95e8\u63a7\u4fe1\u53f7\u4e0a\u5347\u6cbf\u5c31\u89e6\u53d1\u8ba1\u6570\uff0c\u5373\u4f7f\u6ca1\u6709\u88ab\u65f6\u949f\u4fe1\u53f7\u4e0a\u5347\u6cbf\u91c7\u6837\u5230 (\u56e0\u4e3a\u786c\u4ef6\u4ea7\u751f\u7684\u4fe1\u53f7\u65f6\u5f02\u6b65\u7684).</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u603b\u7ed3","title":"\u603b\u7ed3","text":"<p>\u95e8\u63a7\u4fe1\u53f7 \\(\\text{GATE}\\) \u5bf9\u4e0d\u540c\u6a21\u5f0f\u7684\u5f71\u54cd:</p> \u6a21\u5f0f \u4f4e\u7535\u5e73 / \u4e0b\u964d\u6cbf \u4e0a\u5347\u6cbf \u9ad8\u7535\u5e73 0 \u6682\u505c\u8ba1\u6570 \u542f\u52a8\u8ba1\u6570 1 1) \u8f7d\u5165\u8ba1\u6570\u521d\u503c 2) \u5728\u4e0b\u4e00\u6b21 CLK \u65f6\u91cd\u7f6e\u8f93\u51fa 2 1) \u6682\u505c\u8ba1\u65702) \u7acb\u523b\u62c9\u9ad8\u8f93\u51fa \u8f7d\u5165\u8ba1\u6570\u521d\u503c \u542f\u52a8\u8ba1\u6570 3 1) \u6682\u505c\u8ba1\u65702) \u7acb\u523b\u62c9\u9ad8\u8f93\u51fa \u8f7d\u5165\u8ba1\u6570\u521d\u503c \u542f\u52a8\u8ba1\u6570 4 \u6682\u505c\u8ba1\u6570 \u542f\u52a8\u8ba1\u6570 5 \u8f7d\u5165\u8ba1\u6570\u521d\u503c <p>\u6700\u5c0f\u548c\u6700\u5927\u8ba1\u6570\u6b21\u6570\u7684\u8ba1\u6570\u521d\u503c\u8bbe\u7f6e:</p> \u6a21\u5f0f \u6700\u5c0f\u6b21\u6570 \u6700\u5927\u6b21\u6570 0 1 0 1 1 0 2 2 0 3 2 0 4 1 0 5 1 0 <p>\u4f8b\u9898: \u8ba1\u6570\u521d\u503c\u8ba1\u7b97</p> <ol> <li> <p>\u8f93\u5165\u65f6\u949f\u9891\u7387\u4e3a 8 MHz, \u9700\u8981\u4e00\u4e2a 100 KHz \u7684\u65b9\u6ce2\u548c 200 KHz \u7684\u6301\u7eed\u8109\u51b2\uff0c\u8be5\u5982\u4f55\u8bbe\u7f6e 8254 \u7684\u8ba1\u6570\u521d\u503c?</p> <ul> <li>\u8ba1\u6570\u5668 0: \u6a21\u5f0f 3, \u8ba1\u6570\u521d\u503c\u4e3a 80 (8 Mhz / 100 Khz = 80)</li> <li>\u8ba1\u6570\u5668 1: \u6a21\u5f0f 2, \u8ba1\u6570\u521d\u503c\u4e3a 40 (8 Mhz / 200 Khz = 40)</li> </ul> </li> <li> <p>\u5982\u679c\u8981\u4ea7\u751f 100 Hz \u7684\u65b9\u6ce2\uff0c\u8be5\u5982\u4f55\u8bbe\u7f6e 8254 \u7684\u8ba1\u6570\u521d\u503c?</p> <ul> <li>8 Mhz / 100 Hz = 80000 &gt; 65535 \u8d85\u8fc7\u8ba1\u6570\u521d\u503c\u4e0a\u9650</li> <li>\u9700\u8981\u4e32\u8054\u5206\u9891: \u6bd4\u5982\u5148\u964d\u5230 10 KHz \u518d\u964d\u5230 100 Hz<ul> <li>\u8ba1\u6570\u5668 0: \u6a21\u5f0f 2, \u8ba1\u6570\u521d\u503c\u4e3a 800 (8 Mhz / 10 Khz = 800)\uff0c\u8f93\u51fa\u8fde\u63a5\u5230\u8ba1\u6570\u5668 1 \u7684 CLK \u4fe1\u53f7</li> <li>\u8ba1\u6570\u5668 1: \u6a21\u5f0f 3, \u8ba1\u6570\u521d\u503c\u4e3a 100 (10 Khz / 100 Hz = 100)</li> </ul> </li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u4f8b\u7a0b","title":"\u4f8b\u7a0b","text":"<p>\u4f8b\u7a0b 1: 8 MHz \u65f6\u949f\uff0c\u8f93\u51fa 100 KHz \u65b9\u6ce2\u4e0e 200 KHz \u6301\u7eed\u8109\u51b2</p> <pre><code>TIME PROC NEAR USES ax dx\n    mov dx, 706h       ; \u8ba1\u6570\u5668\u63a7\u5236\u5b57\u7aef\u53e3\n    mov al, 00110110b  ; 00_11_011_0: \u8ba1\u6570\u5668 0 \u5199\u5165\u53cc\u5b57\u8282, \u5de5\u4f5c\u5728\u6a21\u5f0f 3\n    out dx, al\n    mov al, 01110100b  ; 01_11_010_0: \u8ba1\u6570\u5668 1 \u5199\u5165\u53cc\u5b57\u8282, \u5de5\u4f5c\u5728\u6a21\u5f0f 2\n    out dx, al\n\n    mov dx, 700h       ; \u8ba1\u6570\u5668 0 \u7aef\u53e3\n    mov al, 80         ; LSB = 80 (\u5206\u9891\u7cfb\u6570)\n    out dx, al\n    mov al, 0          ; MSB = 0\n    out dx, al\n\n    mov dx, 702h       ; \u8ba1\u6570\u5668 1 \u7aef\u53e3\n    mov al, 40         ; LSB = 40 (\u5206\u9891\u7cfb\u6570)\n    out dx, al\n    mov al, 0          ; MSB = 0\n    out dx, al\n\n    ret\nTIME ENDP\n</code></pre>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#16550-\u4e32\u884c\u901a\u4fe1\u63a5\u53e3","title":"16550 \u4e32\u884c\u901a\u4fe1\u63a5\u53e3","text":"<p>\u624b\u518c: 16550 UART</p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u5668\u4ef6\u6784\u6210_2","title":"\u5668\u4ef6\u6784\u6210","text":"<ul> <li> <p>\\(\\text{A}_2-\\text{A}_0\\): \u4e09\u6839\u5730\u5740\u7ebf\uff0c\u4e0d\u8fc7\u540e\u9762\u5229\u7528\u8bfb\u5199\u590d\u7528\uff0c\u63d0\u4f9b\u4e86 12 \u4e2a\u7aef\u53e3</p> </li> <li> <p>CS: \u4e09\u6839\u7247\u9009\u4fe1\u53f7\uff0c\u4e3a\u4e86\u517c\u5bb9\u6027\uff0c\u5b9e\u9645\u4e0a\u53ea\u7528\u4e00\u4e2a\u5c31\u884c\uff0c\u5176\u4ed6\u7684\u5fc5\u987b disable (\u6216\u95e8)</p> </li> <li> <p>RD, WR: \u8bfb\u548c\u5199\u90fd\u6709\u4e24\u4e2a\uff0c\u4e5f\u662f\u4e3a\u4e86\u517c\u5bb9\u6027\uff0c\u53e6\u4e00\u4e2a\u5fc5\u987b enable (\u4e0e\u95e8)</p> </li> <li> <p>ADS: \u5730\u5740\u9501\u5b58\u4fe1\u53f7: \u5e76\u4e0d\u662f\u6240\u6709\u7684\u82af\u7247\u90fd\u80fd\u4fdd\u8bc1\u8bfb\u5199\u4fe1\u53f7\u6709\u6548\u7684\u60c5\u51b5\u4e0b\uff0c\u5730\u5740\u4ecd\u7136\u6709\u6548\uff08\u6bd4\u5982\u6469\u6258\u7f57\u62c9\u7684 CPU\uff09, Intel \u7684\u82af\u7247\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e5f\u4e0d\u9700\u8981. \u53ea\u8981\u7ed9 ADS \u63a5\u4f4e\u5c31\u53ef\u4ee5</p> </li> <li> <p>XIN, XOUT: \u5916\u90e8\u65f6\u949f\u8f93\u5165</p> </li> <li> <p>\\(\\overline{\\text{TXRDY}}\\), \\(\\overline{\\text{RXRDY}}\\): \u7528\u4e8e DMA</p> </li> <li> <p>INTR: \u4e2d\u65ad</p> </li> <li> <p>SIN, SOUT: \u4e32\u884c\u6570\u636e\u7684\u8fdb\u51fa\uff0c\u5168\u53cc\u5de5</p> </li> <li> <p>\\(\\overline{\\text{BAUDOUT}}\\), RCLK: \u4e24\u4e2a\u65f6\u949f\uff0c\u4e00\u4e2a\u662f\u53d1\u9001\u65f6\u949f\uff0c\u4e00\u4e2a\u662f\u63a5\u6536\u65f6\u949f. \u524d\u8005\u662f\u5185\u90e8\u4ea7\u751f\u7684\uff0c\u540e\u8005\u53ef\u4ee5\u4ece\u5916\u90e8\u63a5\u8fc7\u6765\uff0c\u4e5f\u53ef\u4ee5\u63a5 \\(\\overline{\\text{BAUDOUT}}\\)</p> </li> <li> <p>\u540e\u9762\u7684\u5f15\u811a\u90fd\u662f\u7528\u6765\u63a5\u8c03\u5236\u89e3\u8c03\u5668\u7684</p> </li> </ul> <p>\u7aef\u53e3\u8bfb\u5199\u590d\u7528:</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u63a7\u5236\u5b57\u683c\u5f0f_1","title":"\u63a7\u5236\u5b57\u683c\u5f0f","text":"<ul> <li>PE: \u5947\u5076\u6821\u9a8c\u4f7f\u80fd</li> <li>P: \u5947\u5076\u6821\u9a8c\u7c7b\u578b, 0 \u4e3a\u5947\u6821\u9a8c, 1 \u4e3a\u5076\u6821\u9a8c</li> <li>ST: \u7c98\u6ede\u4f4d (Sticky) \u6253\u5f00\u65f6, \u6821\u9a8c\u4f4d\u4e0e\u6709\u6548\u8f7d\u8377\u65e0\u5173\uff0c\u56fa\u5b9a\u4e3a 0 (\u5076\u6821\u9a8c) / 1 (\u5947\u6821\u9a8c) \\(= \\overline{\\text{P}}\\)</li> <li>DL: DLAB \u4f4d, \u53d1\u9001\u4e3a 1 \u7684\u63a7\u5236\u5b57\u540e, \u5148\u540e\u5199\u5165\u5206\u9891\u7cfb\u6570\u7684 LSB \u548c MSB</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u72b6\u6001\u5b57\u683c\u5f0f","title":"\u72b6\u6001\u5b57\u683c\u5f0f","text":"<ul> <li>DE: Data Ready, 1 \u8868\u793a\u6709\u6570\u636e\u53ef\u8bfb</li> <li>TH: Transmitter Holding, 1 \u8868\u793a\u53d1\u9001\u7f13\u51b2\u533a\u4e3a\u7a7a, \u53ef\u4ee5\u53d1\u9001</li> </ul>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u4e24\u9636\u6bb5\u7f16\u7a0b","title":"\u4e24\u9636\u6bb5\u7f16\u7a0b","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u521d\u59cb\u5316","title":"\u521d\u59cb\u5316","text":"<p>\u4f7f\u7528 16550 \u82af\u7247\u65f6, \u9996\u5148\u9700\u8981\u8ba1\u7b97\u65f6\u949f\u5206\u9891\u56e0\u5b50, \u4ee5\u53ca\u6570\u636e\u5e27\u7684\u683c\u5f0f, \u7136\u540e\u6e05\u7406 FIFO, \u5b8c\u6210\u521d\u59cb\u5316:</p> <pre><code>LINE EQU 0F3H\nLSB  EQU 0F0H\nMSB  EQU 0F1H\nFIFO EQU 0F2H\n\nINIT PROC NEAR\n    mov al, 10001010b\n    out LINE, al\n\n    mov al, 120         ; 9600 \u6ce2\u7279\u7387\u7684\u5206\u9891\u7cfb\u6570 (\u67e5\u8868)\n    out LSB, al\n\n    mov al, 0\n    out MSB, al\n\n    mov al, 00001010b   ; 7 \u6570\u636e\u4f4d, 1 \u505c\u6b62\u4f4d, \u5947\u6821\u9a8c\n    out LINE, al\n\n    mov al, 00000111b   ; \u542f\u7528\u53d1\u9001\u548c\u63a5\u53d7\n    out FIFO, al\n\n    ret\nINIT ENDP\n</code></pre> <p>\u8ba1\u7b97\u5206\u9891\u7cfb\u6570\u7684\u65b9\u6cd5:</p> <p></p> <p>\u6ce8: \u4e0a\u5f0f\u4e2d\u7684 16 \u4e3a\u8fc7\u91c7\u6837\u500d\u6570.</p> <p>\u5f53\u7136\u67e5\u8868\u624d\u662f\u6b63\u89e3:</p> <p></p>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#\u6536\u53d1\u4f7f\u80fd","title":"\u6536\u53d1\u4f7f\u80fd","text":"<p>\u53d1\u9001\u6570\u636e:</p> <pre><code>LSTAT EQU 0F5H\nDATA  EQU 0F0H\n\nSEND PROC NEAR USES AX\n    .REPEAT\n        in   al, LSTAT\n        test al, 20h    ; \u68c0\u6d4b TH \u6807\u5fd7\u4f4d (Transmitter holding)\n    .UNTILL !ZERO?\n\n    mov al, ah\n    out DATA, al        ; \u53d1\u9001\u6570\u636e\n    ret\nSEND ENDP\n</code></pre> <p>\u63a5\u6536\u6570\u636e</p> <pre><code>LSTAT EQU 0F5H\nDATA  EQU 0F0H\n\nREVC PROC NEAR USES AX\n    .REPEAT\n        in   al, LSTAT\n        test al, 1      ; \u68c0\u6d4b DR \u6807\u5fd7\u4f4d (Data Ready)\n    .UNTILL !ZERO?\n\n    test al, 0Eh        ; \u68c0\u6d4b\u662f\u5426\u53d1\u751f\u9519\u8bef (FE, PE, OE \u975e 0)\n    .IF ZERO?\n        in  al, DATA    ; \u8bfb\u53d6\u6570\u636e\n    .ELSE\n        mov al, '?'     ; \u7528 '?' \u4ee3\u8868\u63a5\u53d7\u9519\u8bef\n    .ENDIF\n    ret\nREVC ENDP\n</code></pre>"},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#dac0830-\u6570\u6a21\u8f6c\u6362\u82af\u7247","title":"DAC0830 \u6570\u6a21\u8f6c\u6362\u82af\u7247","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#da-\u8f6c\u6362","title":"D/A \u8f6c\u6362","text":""},{"location":"courses/24fall/assembly-and-interface/chapter-9-11/#dac-\u6280\u672f\u6307\u6807","title":"DAC \u6280\u672f\u6307\u6807","text":"<ul> <li>Resolution / Step size \u5206\u8fa8\u7387: \u6700\u5c0f\u6570\u5b57\u91cf\u7535\u538b\u53d8\u5316\u7684\u503c, \u5bf9\u4e8e \\(n\\) \u4f4d\u7684 DAC, \u5206\u8fa8\u7387\u8ba1\u7b97\u65b9\u6cd5\u4e3a:</li> </ul> \\[ \\text{Resolution} = \\dfrac{V_{\\text{REF}}}{2^n} = \\dfrac{V_{\\text{FS}}}{2^n-1}     \\] <p>\u5176\u4e2d \\(V_{\\text{REF}}\\) \u4e3a\u53c2\u8003\u7535\u538b, \\(V_{\\text{FS}}\\) \u4e3a\u6ee1\u91cf\u7a0b\u8f93\u51fa\u7535\u538b.</p> <ul> <li>Linearity \u7ebf\u6027\u5ea6<ul> <li> <p>\u5b9e\u9645\u8fdb\u884c\u8f6c\u6362\u8f93\u51fa\u65f6\uff0c\u4f1a\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\u4f1a\u504f\u79bb\u7406\u60f3\u7684\u76f4\u7ebf, \u6bd4\u5982:</p> <ul> <li>\u7535\u963b\u53d1\u751f\u4e86\u53d8\u5316</li> <li>\u8fd0\u653e\u96f6\u70b9\u53d1\u751f\u4e86\u504f\u79fb</li> <li>\\(V_\\text{ref}\\) \u53d1\u751f\u4e86\u53d8\u5316</li> </ul> </li> </ul> </li> </ul> <p></p> <ul> <li>Settling Time \u5efa\u7acb\u65f6\u95f4: \u8f93\u51fa\u7535\u538b\u7a33\u5b9a\u5230\u7406\u60f3\u7535\u538b \\(\\pm \\frac{1}{2}\\) \u6700\u5c0f\u6570\u5b57\u91cf\u7535\u538b\u6240\u9700\u8981\u7684\u65f6\u95f4.</li> </ul> <p></p> <p>\u4f8b\u9898</p> <ol> <li> <p>\u4e00\u4e2a 4 \u4f4d DAC \u7684\u6ee1\u91cf\u7a0b\u8f93\u51fa\u7535\u538b\u4e3a 15V, \u6c42\u8f93\u5165\u4e3a \\((0110)_2\\) \u65f6\u5176\u8f93\u51fa\u7535\u538b:</p> <ul> <li>\u5206\u8fa8\u7387: \\(\\dfrac{15}{2^4-1} =\\) 1V / LSB</li> <li>\u8f93\u51fa\u7535\u538b: \\(6 \\times 1 =\\) 6 V</li> </ul> </li> <li> <p>\u4e00\u4e2a 4 \u4f4d DAC \u7684\u53c2\u8003\u7535\u538b\u4e3a 15V, \u6c42\u8f93\u5165\u4e3a \\((0110)_2\\) \u65f6\u5176\u8f93\u51fa\u7535\u538b:</p> <ul> <li>\u5206\u8fa8\u7387: \\(\\dfrac{15}{2^4} =\\) \\(\\dfrac{15}{16}\\) V / LSB</li> <li>\u8f93\u51fa\u7535\u538b: \\(6 \\times \\dfrac{15}{16} =\\) 5.625 V</li> </ul> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/final/","title":"\u671f\u672b\u5386\u5e74\u5377","text":""},{"location":"courses/24fall/assembly-and-interface/final/#2023-2024-\u79cb\u51ac\u5b66\u671f","title":"2023-2024 \u79cb\u51ac\u5b66\u671f","text":"<p>\u6765\u6e90: 23-24\u79cb\u51ac \u6c47\u7f16\u4e0e\u63a5\u53e3 \u56de\u5fc6\u5377</p>"},{"location":"courses/24fall/assembly-and-interface/final/#\u586b\u7a7a\u9898-102","title":"\u586b\u7a7a\u9898 (10*2)","text":"<ol> <li> <p>A7 BCD, unpacked BCD</p> </li> <li> <p>\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0c() \u5bc4\u5b58\u5668\u6307\u5411\u6808\u5f53\u524d\u4f4d\u7f6e\uff0c\uff08\uff09\u5bc4\u5b58\u5668\u6307\u5411\u5f53\u524d\u6808\u5e27\u9876\u90e8</p> </li> <li> <p>segment register contains () for descriptor</p> </li> <li> <p>\u4fdd\u62a4\u6a21\u5f0f\u4e0b\uff0cbase = 00360000, limit=10H, G=1, \u6bb5\u7684\u8303\u56f4\uff08\u5341\u516d\u8fdb\u5236\uff09</p> </li> <li> <p>\u5047\u8bbe\u7aef\u53e3\u5730\u5740\u5206\u522b\u4e3a 300H\uff0c302H\uff0c304H\uff0c308H\uff0c\u5e94\u8be5\u628a\u54ea\u4e24\u4e2a\u5730\u5740\u63a5\u5165\u5230 A1 A0</p> </li> <li> <p>basic input device (), basic output device</p> </li> <li> <p>8254 contains () counter, each is ()-bit</p> </li> <li> <p>\u5b9e\u6a21\u5f0f\u4e0b\uff0c\u4e2d\u65ad\u5411\u91cf\u7684\u5730\u5740\u5728 0A0H-0A3H\uff0c\u6c42\u4e2d\u65ad\u5411\u91cf\u53f7</p> </li> <li> <p>\u5199\u51fa\u6307\u4ee4\uff0c\u80fd\u628a F2h \u5199\u5165\u5230 bp \u4e3a\u57fa\u5730\u5740\u7684\u4e00\u4e2a\u5b57\u7684\u6570\u636e\u5199\u5230\u5bc4\u5b58\u5668 ax \u4e2d\u3002</p> </li> </ol> \u7b54\u6848 <p>\u7b54\u6848\u4ec5\u4f9b\u53c2\u8003\uff0c\u5982\u679c\u6709\u95ee\u9898\u6b22\u8fce\u63d0\u51fa~</p> <ol> <li>0xA7 = 167, Packed BCD: 0x0167, Unpacked BCD: 0x010607</li> <li>esp, ebp</li> <li>\u9009\u62e9\u503c (selector)</li> <li>TODO</li> <li>AD1 \u63a5\u5165 A0, AD2 \u63a5\u5165 A1. \u4f7f\u7528\u5076\u5730\u5740\u7aef\u53e3\u662f\u4e3a\u4e86\u907f\u514d\u5c06 \\(\\overline{\\text{BHE}}\\) \u4fe1\u53f7\u4e5f\u52a0\u5165\u89e3\u7801</li> <li>\u9898\u610f\u4e0d\u662f\u5f88\u6e05\u695a</li> <li>3, 16</li> <li>0A0h / 4 = (1010 0000)\\(_2\\) / 4 = (0010 1000)\\(_2\\) = 0x28 = 40 \u53f7\u4e2d\u65ad</li> <li>\u9898\u610f\u4e0d\u662f\u5f88\u6e05\u695a</li> </ol>"},{"location":"courses/24fall/assembly-and-interface/final/#\u9009\u62e9\u9898-152","title":"\u9009\u62e9\u9898 (15*2)","text":"<ol> <li>() \u628a\u6c47\u7f16\u8bed\u8a00\u7ffb\u8bd1\u6210\u673a\u5668\u8bed\u8a00</li> <li>A=\u2026 B=\u2026 \u6c42 CF \u548c OF</li> <li>\u54ea\u4e2a\u5411\u91cf\u5316\u6307\u4ee4\u96c6\u662f\u5411\u91cf\u957f\u5ea6\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u53d8\u5316\uff08\u9009\u9879\u6709 AVX SSE SVE\uff09</li> <li> <p>\u54ea\u4e2a\u6307\u4ee4\u4e0d\u4f1a\u6539\u53d8 AL \u7684\u503c</p> <p>A. xchg AL, AL</p> <p>B. cmp AL, 0</p> <p>C. test AL, AL</p> <p>D. \u4ee5\u4e0a\u90fd\u5bf9</p> </li> <li> <p>\u4e0b\u9762\u54ea\u4e2a\u5bfb\u5740\u662f\u5bf9\u7684</p> <p>A. mov ax, [eax + esp + 2]</p> <p>B. mov ax, [eax + esp * 2 + 2]</p> <p>C. mov ax, [eax + esp * 4]</p> <p>D. mov ax, [eax + esp * 8 + 2]</p> </li> <li> <p>\u4ee5\u4e0b\u54ea\u4e2a\u6307\u4ee4\u4e0d\u4f1a\u6539\u53d8 CF (\u9009\u9879\u6709 neg add \u6b63\u786e\u7b54\u6848\u5fd8\u4e86)</p> </li> <li> <p>\u4e0b\u9762\u6307\u4ee4\u7b49\u4ef7\u4e8e <code>edx &lt;- edx + 4*ebx + 8</code></p> <p>A. <code>mov edx, [edx + 4*ebx + 8]</code></p> <p>B. <code>lea edx, [edx + 4*ebx + 8]</code></p> <p>C. <code>mov edx, offset edx + 4*ebx + 8</code></p> <p>D. <code>add edx, 4*ebx + 8</code></p> </li> </ol> \u7b54\u6848 <ol> <li>\u6c47\u7f16\u5668</li> <li>\u7565, \u6ce8\u610f CF \u662f\u65e0\u7b26\u53f7\u6ea2\u51fa, OF \u662f\u6709\u7b26\u53f7\u6ea2\u51fa</li> <li>SVE: \u53ef\u9009\u5411\u91cf\u957f\u5ea6\uff0c\u53ea\u9700\u8981\u4fdd\u6301\u662f 128 \u7684\u500d\u6570</li> <li>D \u90fd\u4e0d\u6539\u53d8: xchg AL, AL \u4e0d\u6539\u53d8 AL \u7684\u503c\uff0ccmp AL, 0 \u4f1a\u6539\u53d8 ZF, test AL, AL \u4f1a\u6539\u53d8 ZF</li> <li>A, \u56e0\u4e3a esp \u4e0d\u80fd\u5728 (base, scale, index, disp) \u4e2d\u4f5c\u4e3a index \u5bc4\u5b58\u5668</li> <li><code>inc</code> \u548c <code>dec</code> \u4e0d\u6539\u53d8 CF</li> <li>B, lea \u7528\u4e8e\u8ba1\u7b97\u6709\u6548\u5730\u5740\uff0c\u800c\u5730\u5740\u6070\u597d\u662f edx + 4*ebx + 8</li> </ol>"},{"location":"courses/24fall/assembly-and-interface/final/#\u5927\u9898","title":"\u5927\u9898","text":"<ol> <li>\u9875\u8868\u4e3a 10-10-13\uff0c9-9-9-21 \u5199\u51fa\u5bf9\u5e94\u7684\u9875\u5927\u5c0f\uff0c\u9875\u8868\u7ea7\u6570\uff0c\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5927\u5c0f</li> <li> <p>\u7ed9\u4e86\u4ece\u5185\u5b58 30100h \u5230 301A0 \u7684\u5730\u5740\u91cc\u7684\u6570\u636e ds = 3000h, ss=3001h, bx=100h, si=2h, bp=0F2h\u3002\u4e0b\u9762\u4e00\u6bb5\u6307\u4ee4\uff0c\u5199\u51fa\u64cd\u4f5c\u540e ax \u7684\u503c <pre><code>    mov ax, [bx] \n    mov ax, 1[bx]\n    mov ax, [bx][si]\n    mov ax, [bp]\n</code></pre></p> </li> <li> <p>\u7ed9\u51fa\u4e00\u6bb5\u6307\u4ee4\uff0c\u5199\u51fa\u64cd\u4f5c\u540e eax \u7684\u503c <pre><code>test eax, eax\njg .L1\nje .L2\nlea eax, [edi + 5]\nret \nL2: \n    mov eax, edi\n    sar eax, 2\n    ret\nL1:\n    mov eax, edi\n    ret\n</code></pre></p> </li> </ol> <p>(1) edi=0 (2) edi=100 (3) edi=-30</p> \u7b54\u6848 <ol> <li> <ol> <li>10-10-13:<ul> <li>\u9875\u5927\u5c0f: \\(2^{13} = 8\\) KiB.</li> <li>\u9875\u8868\u7ea7\u6570: 2 \u7ea7\u9875\u8868</li> <li>\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5927\u5c0f \\(2^{33} = 8\\) GiB</li> </ul> </li> <li>9-9-9-21:<ul> <li>\u9875\u5927\u5c0f: \\(2^{21} = 2\\) MiB</li> <li>\u9875\u8868\u7ea7\u6570: 3 \u7ea7\u9875\u8868</li> <li>\u865a\u62df\u5730\u5740\u7a7a\u95f4\u5927\u5c0f \\(2^{48} =  256\\) TiB</li> </ul> </li> </ol> </li> <li></li> </ol> <pre><code>    mov ax, [bx]     ; ax &lt;- MEM[30100h], [bx] = ds:[bx]\n    mov ax, 1[bx]    ; ax &lt;- MEM[30101h], 1[bx] = ds:[bx + 1]\n    mov ax, [bx][si] ; ax &lt;- MEM[30102h], [bx][si] = ds:[bx + si]\n    mov ax, [bp]     ; ax &lt;- MEM[30102h], [bp] = ss:[bp], 3001:00F2h = 30102h\n</code></pre>"},{"location":"courses/24fall/assembly-and-interface/final/#\u4ee3\u7801\u586b\u7a7a","title":"\u4ee3\u7801\u586b\u7a7a","text":"<ol> <li> <p>82C55 \u7aef\u53e3\u5730\u5740\u5206\u522b\u662f 4000h, 4001h, 4002h, 40003h, Group A B \u5747\u5728 mode 0 \u4e0b</p> <ol> <li>\u5047\u8bbe A \u662f\u8f93\u5165\uff0cB C \u662f\u8f93\u51fa\u3002</li> <li>\u628a\u6570\u636e\u4ece A \u4e2d\u8bfb\u5165\uff0c\u5e76\u5c06\u8fd9\u4e2a\u6570\u636e\u8f93\u51fa\u5230 B C \u4e2d\u3002</li> </ol> </li> <li> <p>8254 \u7684\u7aef\u53e3\u5730\u5740\u5206\u522b\u4e3a 4000h, 4001h, 4002h, 4003h\uff0c\u8f93\u5165\u9891\u7387\u662f 2Mhz</p> <ol> <li>\u5047\u8bbe Counter 2 \u4f7f\u7528\u6a21\u5f0f 0\uff0ccount \u662f 50000\uff08C350h\uff09\uff0c\u5199\u51fa\u914d\u7f6e\u7684\u8fc7\u7a0b</li> <li>\u6211\u4eec\u4ece Counter 2 \u4e2d\u8bfb\u6570\u636e\u3002</li> <li>\u5047\u8bbe\u7528 Counter 0\uff0c\u8981\u9891\u7387\u4e3a 8Khz\uff0c\u5199\u51fa\u914d\u7f6e\u7684\u8fc7\u7a0b\u3002</li> </ol> </li> <li> <p>16550 \u7ed9\u4e86\u4e00\u6bb5\u4ee3\u7801\uff0c\uff08\u5177\u4f53\u4e0d\u8bb0\u5f97\u4e86\uff0c\u6700\u5f00\u59cb\u5199\u5165\u7684\u63a7\u5236\u5b57\u662f 10001000\uff0c\u8bbe\u7f6e\u7684 divisor \u503c\u65f6\u5148\u5199\u4e86 00h\uff0c\u518d\u5199\u4e86 0F0h\uff09</p> <ol> <li>\u6c42 divisor \u548c baud rate</li> <li>\u591a\u5c11\u4e2a start bit\uff0cdata bits\uff0c\u591a\u5c11\u4e2a parity bit\uff08\u5982\u679c\u6709\uff0c\u662f even/odd\uff09\uff0c\u591a\u5c11\u4e2a stop bit</li> <li>\u7ed9\u4e86\u4e00\u6bb5\u6ce2\u5f62\uff0c\u95ee\u63a5\u6536\u5230\u7684\u6570\u636e\u4f4d\u662f\u591a\u5c11\u3002</li> </ol> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/final/#2022-2023-\u79cb\u51ac\u5b66\u671f","title":"2022-2023 \u79cb\u51ac\u5b66\u671f","text":"<p>\u6765\u6e90: 22-23\u79cb\u51ac \u6c47\u7f16\u4e0e\u63a5\u53e3 \u56de\u5fc6\u5377 &amp; \u7b14\u8bb0</p>"},{"location":"courses/24fall/assembly-and-interface/final/#\u4e0d\u5b9a\u9879\u9009\u62e9","title":"\u4e0d\u5b9a\u9879\u9009\u62e9","text":"<p>\u4e2d\u65ad\u5411\u91cf18H\u7684\u4e2d\u65ad\u5411\u91cf\u8868\u5730\u5740\u662f\u591a\u5c11\uff1f AX\u662f0x1000, ADD AX, AX\u540e\uff0cCF\u548cOF\u6807\u5fd7\u4f4d\u5404\u662f\u591a\u5c11\uff1f long mode\u4e2d\uff0c\u9ed8\u8ba4\u7684\u5730\u5740\u7684\u957f\u5ea6\u548c\u9ed8\u8ba4\u7684Operand size\u90fd\u662f\u591a\u5c11\uff1f\uff0864\u4f4d\uff0c32\u4f4d\uff09 \u54ea\u4e2a\u5bfb\u5740\u6307\u4ee4\u662f\u9519\u7684\uff1f\uff08ESP\u7684\u95ee\u9898\uff09 \u54ea\u4e00\u6761\u6307\u4ee4\u80fd\u5206\u914d\u5d4c\u5957\u7684\u6808\uff1f\uff08ENTER\uff09 MOV [53H], AL \u6307\u4ee4\uff0c\u6b64\u65f6\u7684BHE\u548cBLE\u4fe1\u53f7 TEST AX, AX\u76f8\u5f53\u4e8e\uff1f\uff08\u76f8\u5f53\u4e8eCMP AX, 0\uff09 \u4ec0\u4e48\u6307\u4ee4\u80fd\u628a\u7ed3\u6784\u5192\u9669\u8f6c\u6362\u4e3a\u6570\u636e\u5192\u9669\uff1f\uff08\u6761\u4ef6\u79fb\u52a8\u6307\u4ee4cmove\uff09 \u4e00\u4e2avector\u80fd\u5bb9\u7eb3\u7684\u6700\u5927\u5143\u7d20\u7684\u4e2a\u6570\u79f0\u4f5c\uff1f\uff08vectorization factor\uff09 \u54ea\u4e00\u4e2a\u6307\u4ee4\u96c6\u652f\u6301\u53ef\u53d8\u957fvector\uff1f\uff08AVX\uff09 82C55\u7684\u7aef\u53e3\u5730\u5740\u5206\u522b\u662fXXX\uff0cXXX...\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528\u54ea\u4e24\u6839\u6570\u636e\u7ebf\uff1f\uff08\u7aef\u53e3\u5730\u5740\u76f8\u96944\u4f4d\uff0c\u7528A2\u548cA3\uff09 8254\u7684largest initial counts\uff0c\u76f8\u5f53\u4e8eBCD\u7801\u7684\u591a\u5c11\uff08\u5e94\u8be5\u662f0\u548c10000\uff09 \u54ea\u4e2a\u4e0d\u662f16550\u652f\u6301\u7684error\uff1f\uff08\u652f\u6301\u7684\u6709Overrun, Parity, Framing\uff09 \u54ea\u4e9b\u662fx86\u67b6\u6784\u652f\u6301\u7684\u6a21\u5f0f\uff08\u9009\u9879\uff1aLong mode, virtual 8086 mode, real mode, protected mode\uff09 \u4e0d\u540c\u7c92\u5ea6\uff08G, granularity bit\uff09\u4e0b\u7684segment size\u8ba1\u7b97 How to access the SIMD units? (Four choices) \u54ea\u6761\u6307\u4ee4\u662f\u539f\u5b50\u64cd\u4f5c\uff1f\uff08\u9009\u9879\u597d\u50cf\u662fINC, XCHG, XADD, CMPXCHG\uff09 \u54ea\u4e9b\u5c5e\u4e8e\u6307\u4ee4\u524d\u7f00\uff1f\uff08REP\uff0cLOCK\uff0cOperand-size Override\uff09 \u68c0\u6d4b\u6570\u636e\u4f9d\u8d56\u7684\u65b9\u6cd5\u6709\u54ea\u4e9b\uff1f\uff08GCD, Delta, Banerjee\uff09 CPU \u548c\u8bbe\u5907\u901a\u4fe1\u7684\u65b9\u5f0f\u6709\u54ea\u4e9b\uff1f\uff08Isolated I/O, Memory mapped I/O\uff09</p>"},{"location":"courses/24fall/assembly-and-interface/final/#\u4ee3\u7801\u586b\u7a7a_1","title":"\u4ee3\u7801\u586b\u7a7a","text":"<ol> <li> <p>82C55</p> </li> <li> <p>8254</p> </li> <li> <p>16550</p> </li> </ol>"},{"location":"courses/24fall/assembly-and-interface/note/","title":"\u7b14\u8bb0","text":"<p>x86 \u5e73\u53f0\u7684\u8fd0\u7b97\u8d44\u6e90</p> <p>IA-32</p> <p>\u6bb5\u5bc4\u5b58\u5668</p> <p>A: Accumulator, (\u7d2f\u52a0\u8fd0\u7b97\u6709\u7279\u6b8a\u7684\u7f16\u7801\uff0c\u8f83\u77ed) B: Base index, C: Counter, D: Data</p> <p>\u901a\u7528\u5bc4\u5b58\u5668</p> <p>EFLAGS</p> <p>EIP</p> <p>MMX (\u591a\u5a92\u4f53\u6269\u5c55) \u590d\u7528\u4e86 x87 FPU \u7684\u5bc4\u5b58\u5668\u7684\u4f4e 64 \u4f4d\uff0c\u53ef\u4ee5\u8fdb\u884c\u6574\u6570\u7684\u5411\u91cf\u5316 \u8981\u8fdb\u884c\u6d6e\u70b9\u8fd0\u7b97\uff0c\u9700\u8981\u7528 EMMS \u6307\u4ee4\u5207\u6362\u56de x87 FPU</p> <p>XMM[0-7]</p> <p>IA-64</p> <p>\u901a\u7528\u5bc4\u5b58\u5668\u589e\u52a0\u5230 16 \u4e2a: RAX, RBX, RCX, RDX, RSI, RDI, RSP, R[8-15] SSE2 \u5bc4\u5b58\u5668: XMM[0-15]</p> <p>8-bit: R8B-R15B 16-bit: R8W-R15W 32-bit: R8D-R15D 64-bit: R8-R15</p> <p>\u51fa\u4e8e\u517c\u5bb9\u8003\u8651: \u5199\u5165 EAX, RAX \u9ad8\u4f4d\u6e05\u96f6\u3002\u4f46\u5199\u5165 AX, AL \u65f6\uff0c\u9ad8\u4f4d\u4e0d\u52a8\u3002</p> <p>EAX \u4f1a\u8ba9\u9ad8\u4f4d\u6e05\u96f6\uff0c\u6240\u4ee5\u4e0d\u7528\u5fc5\u987b\u770b\u6210 RAX \u7684 partial register\uff0c \u53ef\u4ee5\u901a\u8fc7\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u8ba9 EAX \u5b9e\u9645\u4e0a\u7531\u591a\u4e2a\u5bc4\u5b58\u5668\u5e76\u884c\u8fd0\u7b97</p> <p>\u4f46\u662f\u4e00\u6bb5\u4ee3\u7801\u91cc\u5982\u679c\u51fa\u73b0 EAX \u548c AX\uff0c\u90a3\u4e48\u5c31\u6ca1\u6cd5\u505a\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u4e86</p> <p>RFLAGS, EFLAGS, FLAGS: Parity Flag, Auxilary FLag</p> <p>Memory Management Requirements \u8f6f\u4ef6\u4e0e\u786c\u4ef6\u914d\u5408\u7684\u5185\u5b58\u7ba1\u7406</p> <ul> <li>Relocation: \u91cd\u5b9a\u4f4d</li> <li>Protection: \u4fdd\u62a4\u4e0e\u9694\u79bb</li> <li>Sharing: \u5171\u4eab\u90e8\u5206\u8d44\u6e90 (\u7236\u8fdb\u7a0b -&gt; \u5b50\u8fdb\u7a0b -&gt; \u7ebf\u7a0b)</li> </ul> <p>\u5386\u53f2\u4e0a\u7684\u7ba1\u7406\u65b9\u6848:</p> <ul> <li>Segmentation: \u5206\u6bb5\u673a\u5236</li> <li>Paging: \u5206\u9875\u673a\u5236</li> </ul> <p>Pitfalls: Segmentation leads to external fragmentation, Paging is subject to internal fragmentation</p> <p>Segmentation are faster than paging table lookups Paging needs MMU and TLB to accelerate look up</p> <p>Legacy Mode: \u5b9e\u6a21\u5f0f: 16+16 Segmentation \u865a\u62df 8086 \u6a21\u5f0f: 16+16 Segmentation + \u53ef\u9009 Paging \u4fdd\u62a4\u6a21\u5f0f: 16+32 Segmentation + \u53ef\u9009 Paging Long Mode: \u517c\u5bb9\u6a21\u5f0f: 16+32 Segmentation + \u5fc5\u9009 Paging 64-bit \u6a21\u5f0f: 64-bit Paging</p> <p>\u5185\u5b58\u5bfb\u5740:</p> <ol> <li> <p>\u5b9e\u6a21\u5f0f     (Segment Addr &lt;&lt; 4) + Offset Addr = Physical Addr</p> <ul> <li>Relocatable</li> <li>Shared</li> <li>No protection \u95ee\u9898:</li> <li>Wrap Around: FFFF:FFFF -&gt; 0x10FFEF \u8d85\u51fa\u4e86 1M \u7a7a\u95f4 -&gt; \u53d8\u6210\u4e86 0x0FFEF                F800:8000 -&gt; 0x100000 -&gt; 0x00000                Only happens on 8086 / 8088 / 80186 until 80286 upgraded to 24-bit address lines                https://www.os2museum.com/wp/the-a20-gate-fallout/</li> </ul> </li> <li> <p>\u4fdd\u62a4\u6a21\u5f0f     16-bit Segment \u6307\u5411\u5168\u5c40\u63cf\u8ff0\u7b26\u8868 GDT \u91cc\u7684\u4e00\u4e2a\u63cf\u8ff0\u7b26 (descriptor)     \u6bb5\u7684\u57fa\u5730\u5740\uff0c\u957f\u5ea6\u548c\u6743\u9650     \u8bbe\u7f6e\u4e86 CPU \u7684\u8fd0\u884c\u7ea7\u522b ring-0 ... ring-3</p> <p>\u7a7a\u63cf\u8ff0\u7b26: 1. \u5728\u521d\u59cb\u5316\u65f6\uff0c\u6bb5\u5bc4\u5b58\u5668\u8fd8\u6ca1\u6709\u8bbe\u7f6e\u597d\uff0c\u4f46\u53ef\u80fd\u53d1\u751f\u610f\u5916\uff0c\u6210\u4e3a\u4e86\u6bb5\u7684\u9009\u62e9\u503c\uff0c \u8fd9\u65f6\u5019\u8ba9\u4ed6\u4eec (=0) \u90fd\u6307\u5411\u7a7a\u63cf\u8ff0\u7b26\uff0c\u5c31\u53ef\u4ee5\u89e6\u53d1 #GP (general protection) \u5f02\u5e38\uff0c\u800c\u4e0d\u9020\u6210\u95ee\u9898 2. \u5224\u65ad\u4e2d\u65ad\u662f\u5426\u5d4c\u5957</p> <p>\u63cf\u8ff0\u7b26\u7684\u7ed3\u6784:</p> <p>Limit \u6bb5\u957f\u5ea6, Base \u57fa\u5730\u5740 (80286: 24-bit, &gt;=80386: 32-bit) Access Right \u8bbf\u95ee\u6743\u9650 G \u7c92\u5ea6\u4f4d: \u4e3a 1 \u65f6\uff0cLimit \u957f\u5ea6 1bit \u4ee3\u8868 4k, 4k * 2^20 = 2^32 D, AV</p> <p>\u5728 64-bit mode, \u7edd\u5927\u591a\u6570\u90e8\u5206\u4e0d\u518d\u4f7f\u7528\uff0c\u65b0\u589e\u4e86 L \u4f4d\uff0c \u9700\u8981\u5f00\u542f Long bit \u6765\u8fdb\u5165 64-bit \u6a21\u5f0f</p> <p>\u5fc5\u8003\u8ba1\u7b97: G=0 limit 1 bit = 1b, segment size = (limit+1) bytes G=1 limit 1 bit = 4kb, segment size = (limit+1)x4k bytes</p> <p>eg: Base: 1000 0000, limit: 001FF G=0, 1000 0000 - 1000 01FF G=1, 1000 0000 - 101F FFFF (\u7ed3\u675f\u4f4d\u7f6e = \u8d77\u59cb\u4f4d\u7f6e + \u6bb5\u957f\u5ea6 - 1) \u5de6\u79fb3\u4f4d\uff0c\u8865FFF</p> <p>Access Rights: 1. P \u4f4d \u8868\u793a\u63cf\u8ff0\u7b26\u662f\u5426\u6709\u6548 2. DPL \u4f4d (2 bit):     Ring 0, Ring 1, Ring 2, Ring 3     \u4e0d\u5f97\u8d8a\u6743\u8bbf\u95ee\uff0c\u9700\u8981\u901a\u8fc7 Gate Descriptor 3. S \u4f4d \u8868\u793a\u662f\u5426\u4e3a\u7cfb\u7edf\u63cf\u8ff0\u7b26 4. Type: \u4ee3\u7801 / \u5806\u6808 / \u6570\u636e\uff0c \u4ee5\u53ca\u8bfb\u5199\u6743\u9650</p> <ol> <li>A \u4f4d: \u6bb5\u662f\u5426\u88ab\u8bbf\u95ee\u8fc7</li> </ol> <p>\u9009\u62e9\u503c (CS / DS / SS \u5b58\u7684 16-bit): 1. 15-3 (13-bit, 8k \u4e2a\u63cf\u8ff0\u7b26): Descriptor index 2. 2: TI, \u8868\u793a\u63cf\u8ff0\u7b26\u7d22\u5f15\u5728 GDT (\u5168\u5c40\u63cf\u8ff0\u7b26) \u8fd8\u662f LDT (\u5c40\u90e8\u63cf\u8ff0\u7b26) 3. 1-0: RPL \u9009\u62e9\u503c\u81ea\u8eab\u7684\u6743\u9650 Ring 0 - Ring 3</p> <p>\u5b89\u5168\u7ea7\u522b\u7684\u8bbe\u7f6e: 1. DPL \u63cf\u8ff0\u7b26\u6743\u9650\u7ea7\u522b 2. RPL \u8bf7\u6c42\u7684\u6743\u9650\u7ea7\u522b\uff0c\u653e\u5728 DS \u5bc4\u5b58\u5668\u7684\u4f4e 2 \u4f4d 2. CPL CPU \u81ea\u8eab\u7684\u6743\u9650\u7ea7\u522b\uff0c\u653e\u5728 CS \u5bc4\u5b58\u5668\u7684\u4f4e 2 \u4f4d</p> <p>RPL \u548c CPL\uff0c\u901a\u8fc7\u95e8\u63cf\u8ff0\u7b26\u8d8a\u7ea7\u6267\u884c\u9ad8\u6743\u9650\u7684\u4ee3\u7801\u65f6\uff0c\u8bf7\u6c42\u7684\u5185\u5b58\u5730\u5740\u8fd8\u662f\u539f\u6765\u7684\u6743\u9650\u7ea7\u522b</p> <p>\u6570\u636e\u9700\u8981 MAX(RPL, CPL) &lt;= DPL \u5806\u6808\u9700\u8981 CPL = RPL = DPL</p> <p>\u63cf\u8ff0\u7b26\u8868\u7684\u57fa\u5730\u5740\u7531\u4e13\u95e8\u7684\u5bc4\u5b58\u5668\u5b58\u50a8: GDTR \u5168\u5c40\u63cf\u8ff0\u7b26, LDTR \u5c40\u90e8\u63cf\u8ff0\u7b26, IDTR \u4e2d\u65ad\u63cf\u8ff0\u7b26</p> </li> </ol> <p>Chapter 3 \u5bfb\u5740\u65b9\u5f0f</p> <p>\u9ed8\u8ba4\u5730\u5740\u957f\u5ea6\u548c\u9ed8\u8ba4\u64cd\u4f5c\u6570\u957f\u5ea6:</p> <p></p> <p>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u6307\u4ee4\u7f16\u7801\u8f83\u77ed</p> <p>\u6bd4\u5982 64-bit \u6a21\u5f0f\u4e0b <code>mov eax, [rbx]</code> \u64cd\u4f5c\u6570\u957f\u5ea6\u4e3a 32 \u4f4d\uff0c\u5730\u5740\u957f\u5ea6\u4e3a 64 \u4f4d\uff0c\u7f16\u7801\u4e3a <code>8B 03</code>, \u76f8\u6bd4\u4e4b\u4e0b <code>mov rax, [rbx]</code> \u7684\u7f16\u7801\u4e3a <code>48 8B 03</code>.</p> <p>Part 1 \u6570\u636e\u76f8\u5173\u7684\u5bfb\u5740</p> <p>\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u7acb\u5373\u6570\uff0c\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u4e0a\u7684\u503c</p> <ol> <li>\u5bc4\u5b58\u5668\u5bfb\u5740 <code>mov ax, bx</code></li> <li>\u7acb\u5373\u6570\u5bfb\u5740 <code>mov eax, 12345H</code></li> </ol> <p>\u9700\u8981\u6ce8\u610f: 16\u8fdb\u5236\u6570\u5b57\u5b57\u6bcd\u5f00\u5934\u65f6\uff0c\u524d\u52a00\uff0c\u5426\u5219\u4f1a\u88ab\u7406\u89e3\u4e3a label</p> <p></p> <p>\u6ce8\u610f\u5212\u7ebf</p> <p></p> <p>\u5bfb\u5740\u65b9\u5f0f:</p> <ol> <li><code>Effective Address = Disp</code></li> </ol> <p>\u5982\u679c\u76ee\u7684\u5bc4\u5b58\u5668\u662f A \u7cfb\u5217\u7684\u5bc4\u5b58\u5668\uff0c\u6307\u4ee4\u7f16\u7801\u4f1a\u77ed</p> <pre><code>mov al, [1234H] ; A0 34 12\nmov cl, [1234H] ; 8A 0E 34 12\n</code></pre> <p></p> <ol> <li><code>Effective Address = Base</code></li> </ol> <p>8086-80286, \u53ea\u5141\u8bb8\u4f7f\u7528 (base register:) bx, bp, (index register:) si, di \u6765\u4f5c\u4e3a\u57fa\u5740\u5bc4\u5b58\u5668</p> <p>80386 \u53ca\u4e4b\u540e\u53ef\u7528\u4efb\u610f 32 \u4f4d\u901a\u7528\u5bc4\u5b58\u5668</p> <p>64-bit \u6a21\u5f0f\uff0c\u6bb5\u5bc4\u5b58\u5668\u4e0d\u7528\u6765\u8fdb\u884c\u5bfb\u5740</p> <p>bp\u5bfb\u5740\u65f6\uff0c\u9ed8\u8ba4\u6bb5\u5bc4\u5b58\u5668\u4e3a ss</p> <p></p> <p>\u4e0a\u9762\u7684 size directive \u5982\u4f55\u5f71\u54cd\u6307\u4ee4\u7f16\u7801:</p> <p></p> <ol> <li><code>Effective Address = Base + Index</code></li> </ol> <p></p> <p>movsx \u7684\u4f7f\u7528\u975e\u5e38\u7ec6\u8282\uff0cchar -&gt; int \u7684\u8f6c\u6362\u53d1\u751f\u5728\u8fd9\u91cc</p> <ol> <li> <p><code>Effective Address = Base / Index + Disp</code></p> </li> <li> <p><code>Effective Address = Base + Index + Disp</code></p> </li> </ol> <p>\u53ef\u7528\u4e8e\u4e8c\u7ef4\u6570\u7ec4/\u7ed3\u6784\u4f53\u7684\u7d22\u5f15</p> <ol> <li><code>Effective Address = Base + (Scale\u00d7Index) + Disp</code></li> </ol> <p>\u4e5f\u53ef\u7528\u4e8e\u4e8c\u7ef4\u6570\u7ec4/\u7ed3\u6784\u4f53\u7684\u7d22\u5f15, scale \u53ef\u4ee5\u662f 1, 2, 4, 8</p> <p></p> <p>64 \u4f4d\u7684\u65b0\u5bfb\u5740\u65b9\u5f0f: RIP relative addressing</p> <p>\u5e73\u5766\u5185\u5b58\u65b9\u5f0f\uff0c\u6ca1\u6709\u4ec0\u4e48\u6bb5\u4e86\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528 rip \u548c\u504f\u79fb\u91cf\u5bfb\u5740</p> <p></p> <p>\u5b9e\u9645\u4e0a\u53ea\u7528\u4e86 48 \u4f4d\u865a\u62df\u5730\u5740\uff0c\u6240\u4ee5\u9ad8 4 byte \u5fc5\u987b\u662f\u7b26\u53f7\u6269\u5c55\uff0c\u5426\u5219\u89e6\u53d1 #GP</p> <p></p> <p>\u603b\u7ed3: 8 \u79cd\u5185\u5b58\u5bfb\u5740\u65b9\u5f0f</p> <p></p> <p>base \u548c index register \u7684\u9009\u62e9:</p> <p></p> <p>\u7279\u6b8a\u89c4\u5219: </p> <ol> <li>\u53ea\u8981\u51fa\u73b0 BP/EBP, \u6216\u8005 ESP, \u90a3\u4e48\u6bb5\u7684\u57fa\u5730\u5740\u9ed8\u8ba4\u5c31\u662f ss</li> <li>ESP \u4e0d\u80fd\u505a\u7d22\u5f15 index \u5bc4\u5b58\u5668</li> </ol> <p>\u4f8b\u9898:</p> <p></p> <p>ESP \u53ea\u80fd\u505a base \u4e0d\u80fd\u4f5c\u4e3a index\uff0c\u6240\u4ee5 D \u662f\u9519\u7684</p> <p>Part 2 \u4ee3\u7801\u76f8\u5173\u7684\u5bfb\u5740 - \u4e0e\u7a0b\u5e8f\u63a7\u5236\u6d41\u7684\u6307\u4ee4\u6709\u5173</p> <p> </p> <p>Relative offset: \u57fa\u4e8e ip + offset \u8df3\u8f6c</p> <p>Absolute offset: \u57fa\u4e8e\u7edd\u5bf9\u5730\u5740\u8df3\u8f6c</p> <p>\u8df3\u8f6c\u65b9\u5f0f\u4e0e\u8ddd\u79bb:</p> <p></p> <p>\u6307\u4ee4\u7f16\u7801: 71AC - 71AA = 2</p> <p></p> <p>Far jump \u8de8\u6bb5\u8df3\u8f6c\u65f6\uff0c\u5fc5\u987b\u8df3\u8f6c\u5230\u76f8\u540c ring \u7ea7\u522b</p> <p>\u8fdb\u5165\u4fdd\u62a4\u6a21\u5f0f\u65f6\uff0ccs \u4ece\u6bb5\u53d8\u6210\u4e00\u4e2a\u9009\u62e9\u503c\uff0c\u8981\u5237\u65b0 cs\uff0c\u800c\u53ea\u6709\u8df3\u8f6c\u6307\u4ee4\u53ef\u4ee5\u66f4\u6539 cs</p> <p>jmp \u8fd8\u53ef\u4ee5\u4f7f\u7528\u5185\u5b58\u91cc\u7684\u503c\u4f5c\u4e3a\u504f\u79fb <pre><code>jmp near ptr[di+2] ; 2 Byte, Offset\njmp far ptr[di+2]  ; 4 Byte, Segment + Offset\n</code></pre></p> <p>\u6808\u5185\u5b58\u7684\u5730\u5740\u5bfb\u5740\u65b9\u5f0f</p> <p>\u6808\u7684\u64cd\u4f5c: push, pop\uff0cLIFO</p> <p>\u53ef\u4ee5\u5165\u6808\u6216\u51fa\u6808\u7684: \u901a\u7528\u5bc4\u5b58\u5668\uff0c\u6807\u5fd7\u5bc4\u5b58\u5668\uff0c\u6d6e\u70b9\u5bc4\u5b58\u5668\uff0c\u7acb\u5373\u6570</p> <p>\u5165\u6808\u6309\u7167\u5c0f\u7aef\u683c\u5f0f\uff0c\u4e5f\u53ef\u4ee5\u7406\u89e3\u4e3a: \u9ad8\u4f4d\u5148\u5165\u6808\uff0c\u4f4e\u4f4d\u540e\u5165\u6808\uff0c\u4f4e\u4f4d\u5148\u51fa\u6808\uff0c\u9ad8\u4f4d\u540e\u51fa\u6808</p> <p>pusha (push all): \u5b58\u5165\u6240\u6709\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u4e0d\u5305\u62ec\u6bb5\u5bc4\u5b58\u5668\uff08\u6bb5\u5bc4\u5b58\u5668\u4e0d\u662f\u901a\u7528\u5bc4\u5b58\u5668\uff09\uff0csp \u4e3a\u5165\u6808\u524d\u7684\u503c</p> <p>pushad (push all double): \u5b58\u5165 32 \u4f4d\u5bc4\u5b58\u5668</p> <p>pushf (push flags): \u5b58\u5165 flag \u5bc4\u5b58\u5668</p> <p>Chapter 4</p> <p>2-bit \u7f16\u7801 3 \u79cd\u6307\u4ee4\u64cd\u4f5c\u6a21\u5f0f</p> <p></p> <p>\u6307\u4ee4\u7f16\u7801\u683c\u5f0f:</p> <p></p> <pre><code>mov word ptr [eax], 5 ; 67 66 c7 00 05 00 - 64-bit\nmov word ptr [eax], 5 ;    66 c7 00 05 00 - 32-bit\n</code></pre> <p>\u6700\u957f\u7684\u6307\u4ee4\u80fd\u8fbe\u5230 15 Byte</p> <p>OPCODE \u4e2d\u7684\u65b9\u5411\u4f4d\u548c\u5bbd\u5ea6\u4f4d</p> <p></p> <p>D=0 \u6570\u636e\u7531 R/M \u5230 REG</p> <p>D=1, \u6570\u636e\u7531 REG \u5230 R/M</p> <p>W=0, \u6570\u636e\u4e3a byte, 8 \u4f4d</p> <p>W=1, \u6570\u636e\u4e3a word / doubleword</p> <p></p> <p>MOD Field, \u6307\u5b9a\u5bfb\u5740\u65b9\u5f0f</p> <p></p> <p>REG/Opcode Field</p> <p></p> <p>20/r \u8868\u793a\u4e24\u4e2a\u57df\u90fd\u662f\u5bc4\u5b58\u5668\uff0copcode \u4e3a 0x20</p> <p>80 /4 ib \u8868\u793a MOD \u4e0d\u662f\u653e\u5bc4\u5b58\u5668\uff0c/4 \u8868\u793a\u6269\u5c55\u4e00\u4e2a\u64cd\u4f5c\u7801\uff0cMOD \u7b2c\u4e8c\u4e2a\u57df R/M \u8bbe\u7f6e\u4e3a 3'b100\uff0c\u5408\u8d77\u6765\u4ee3\u8868\u5e26\u4e86\u4e00\u4e2a\u7acb\u5373\u6570</p> <p>\u6307\u4ee4\u7f16\u7801\u89e3\u6790:</p> <p></p> <p>32 \u4f4d\u4e0b\uff0c\u51e0\u4e4e\u6240\u6709\u5bc4\u5b58\u5668\u90fd\u53ef\u4ee5\u4f5c\u4e3a index \uff08\u9664\u4e86 esp\uff09</p> <p>\u6b64\u65f6 R/M \u57df\u7684\u7f16\u7801\u6709\u6269\u5c55</p> <p></p> <p>REX \u5bc4\u5b58\u5668\u6269\u5c55\u524d\u7f00\uff0c\u53ef\u4ee5\u7528\u6765\u53bb\u627e r8-r15 \u8fd9\u4e9b\u5bc4\u5b58\u5668\uff0c\u8865\u5145\u4e86\u539f\u6765\u7684\u7f16\u7801</p> <p></p> <p></p> <p>Legacy Prefix: \u7ec4\u5185\u4e0d\u80fd\u91cd\u590d\uff0c\u7ec4\u4e4b\u95f4\u53ef\u4ee5\u7ec4\u5408</p> <p></p> <ol> <li>\u91cd\u590d</li> <li>\u6bb5\u6539\u5199</li> <li>\u64cd\u4f5c\u6570\u957f\u5ea6\u53d8\u5316</li> <li>\u5bfb\u5740\u957f\u5ea6\u53d8\u5316</li> </ol> <p>LOCK \u524d\u7f00: \u539f\u5b50\u64cd\u4f5c\uff0c\u7ed9\u4e0d\u652f\u6301\u7684\u6307\u4ee4\u52a0\uff0c\u4f1a\u62a5 undefined opcode \u5f02\u5e38</p> <p></p> <p></p> <p>0FH \u8f6c\u4e49\u5e8f\u5217</p> <p></p> <p>\u6269\u5c55 opcode \u7684\u7f16\u7801\u7a7a\u95f4</p> <p>lea \u7528\u6765\u7075\u6d3b\u5730\u8ba1\u7b97\u5730\u5740\u504f\u79fb / \u7b80\u5316\u8ba1\u7b97</p> <p>mov \u7c7b\u6307\u4ee4\u4e0d\u6539\u53d8 flags</p> <p></p> <p>mov \u7684\u65f6\u5019\uff0c\u6c47\u7f16\u5df2\u7ecf\u628a offset \u7b97\u597d\u4e86\uff0c</p> <p>\u800c lea \u9700\u8981\u6267\u884c\u7684\u65f6\u5019\u624d\u5f00\u59cb\u8ba1\u7b97</p> <p>\u4f46 mov \u53ea\u80fd\u662f\u9759\u6001\u7684\u7acb\u5373\u6570\uff0clea \u53ef\u4ee5\u7528\u5730\u5740\u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u7ec4\u5408\u591a\u4e2a\u5bc4\u5b58\u5668</p> <p>\u88c5\u8f7d\u6307\u9488\u7684\u6307\u4ee4: lds, les, lfs, lgs, lss</p> <p></p> <p>\u4efb\u52a1\u5207\u6362\u7684\u65f6\u5019\u53ef\u4ee5\u7528\u8fd9\u4e2a</p> <p>\u5b57\u7b26\u4e32\u64cd\u4f5c\u6307\u4ee4: lods, stos, movs, ins, outs</p> <p>\u5b57\u7b26\u4e32\u6bd4\u8f83\u6307\u4ee4: scas, cmps</p> <p>\u6307\u4ee4\u7f16\u7801\u77ed\uff0c\u56e0\u4e3a\u9690\u85cf\u4e86\u64cd\u4f5c\u6570  (esi, edi / ds:si, es:di \u4ee5\u53ca ecx \u4f5c\u4e3a\u6700\u5927\u6bd4\u8f83\u6b21\u6570)\uff0c\u524d\u52a0 repe \u524d\u7f00</p> <p>\u8fd9\u4e00\u5957\u6307\u4ee4\u90fd\u6709\u540e\u7f00: s, w, d \u4ee3\u8868\u5355\u6b21\u64cd\u4f5c\u7684\u957f\u5ea6</p> <p></p> <p>rep \u91cd\u590d\u524d\u7f00\u4e5f\u662f\u4e00\u7cfb\u5217\u7684:</p> <p></p> <p>bswap \u4ea4\u6362\u5b57\u8282\u5e8f</p> <p>\u56e0\u4e3a\u6ca1\u6709 MOD\uff0c \u7f16\u7801\u5bc4\u5b58\u5668\u653e\u5728\u4e86 Opcode \u91cc\uff0c0F C8 \u7684\u540e\u4e09\u4f4d 64 \u4f4d\u65f6\uff0c\u518d\u548c REX.W \u4e2d\u7684 1 \u4f4d\u7ec4\u5408\uff0c\u7f16\u7801 16 \u4e2a\u5bc4\u5b58\u5668</p> <p>\u6761\u4ef6\u79fb\u52a8 cmov\uff0c \u6839\u636e flags \u4e2d\u7684\u72b6\u6001\u4f4d\u8fdb\u884c\u79fb\u52a8 cmov \u7684\u597d\u5904\u5728\u4e8e\u53ef\u4ee5\u51cf\u5c11 if-else \u7684\u5206\u652f\u6307\u4ee4\uff0c\u51cf\u5c11 branch misprediction</p> <p>Memory Organization</p> <pre><code>name SEGMENT\nname ENDS\n\nname MACRO\nENDM (\u4e0d\u9700\u8981\u518d\u5199\u4e00\u6b21 name)\n\nEND start -&gt; \u6307\u793a\u5165\u53e3\u70b9\n</code></pre> <p>Arithmetic and Logic Instructions</p> <p>INC \u6307\u4ee4\u4fdd\u6301 CF \u4e0d\u52a8\uff0c\u5176\u4ed6\u7684 Flags \u90fd\u6709\u53ef\u80fd\u66f4\u65b0</p> <p>\u9012\u589e\u6307\u4ee4\u5f80\u5f80\u7528\u4e8e\u5faa\u73af\uff0c\u5e0c\u671b\u8fd9\u4e2a\u9012\u589e\u53d8\u91cf\u4e0d\u8981\u5e72\u6270\u5faa\u73af\u91cc\u9762\u7684 CF</p> <p>ADC \u5e26\u8fdb\u4f4d\u52a0</p> <p>\u8f83\u957f\u7684\u4e8c\u8fdb\u5236\u6570\u52a0\u6cd5\u7528\u5faa\u73af\u548c ADC \u6307\u4ee4\u5b9e\u73b0</p> <p>\u5728\u5f00\u59cb\u524d\u9700\u8981\u7528 clc \u6e05\u9664\u8fdb\u4f4d flag</p> <p></p> <p>\u7ec6\u8282: \u8fd9\u91cc\u4f7f\u7528\u4e86 lea\uff0clea \u5c5e\u4e8e\u5185\u5b58\u79fb\u52a8\u6307\u4ee4\uff0c\u4e0d\u5f71\u54cd flags\uff0c\u540c\u7406 dec \u4e5f\u4e0d\u5f71\u54cd Carry Flag</p> <p>\u800c ADD \u6307\u4ee4\u4f1a\u5f71\u54cd Carry</p> <p>\u53d8\u79cd\u5e26\u8fdb\u4f4d\u52a0\u6cd5\u6307\u4ee4: adcx, adox</p> <p></p> <p>\u76f8\u5f53\u4e8e Ripple \u52a0\u6cd5\u5668\u5230\u8d85\u524d\u8fdb\u4f4d\u52a0\u6cd5\u5668\u7684\u53d8\u5316</p> <p>\u539f\u6765\u53ea\u80fd\u6709\u4e00\u6761 Carry Chain, \u4e0d\u80fd\u51b2\u7a81\uff0c</p> <p>\u540e\u9762\u82f1\u7279\u5c14\u5f15\u5165\u4e86 adcx \u548c adox\uff0c\u5141\u8bb8\u4e24\u6761 Carry Chain\uff0c\u5206\u522b\u4f7f\u7528 CF \u548c OF\uff0c\u63d0\u9ad8\u4e86\u5e76\u884c\u6027 \uff082012\uff09</p> <p></p> <p>adcx \u4f7f\u7528 Carry Flag\uff0c\u4e0d\u4f1a\u4fee\u6539 Overflow Flag</p> <p>adox \u4f7f\u7528 Overflow Flag, \u4e0d\u4f1a\u4fee\u6539 Carry Flag</p> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u6709\u4e00\u70b9\u5c0f\u95ee\u9898\uff0c\u56e0\u4e3a dec \u4e0d\u4f1a\u7834\u574f CF\uff0c\u800c\u4f1a\u7834\u574f OF\uff0c\u4f46\u662f dec \u5728\u6b63\u5e38\u5faa\u73af\u4e2d\u4e0d\u4ea7\u751f OF</p> <p>Karatsuba \u7b97\u6cd5: Intel \u8fd8\u8bbe\u8ba1\u4e86 mulx \u6307\u4ee4</p> <p>xadd (&gt; 80486)</p> <p>\u5148\u8fdb\u884c\u6e90\u548c\u76ee\u6807\u6570\u636e\u4ea4\u6362\uff0c\u5e76\u628a\u6e90\u52a0\u5230\u76ee\u7684\u64cd\u4f5c\u6570\u91cc des = src + des</p> <p>\u5f88\u5c11\u7684\u6539\u53d8 src \u7684\u6307\u4ee4</p> <p>xadd \u5176\u4e2d\u4e00\u4e2a\u64cd\u4f5c\u6570\u53ef\u4ee5\u662f\u5185\u5b58\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u6765\u505a\u9501</p> <p>\u4e50\u89c2\u9501\u4e0e\u60b2\u89c2\u9501:</p> <p>spin lock \u662f\u60b2\u89c2\u9501: \u8ba4\u4e3a\u5f88\u5927\u6982\u7387\u51b2\u7a81\uff0c\u5728\u8fdb\u884c\u4e8b\u60c5\u524d\u4e0a\u9501\uff0c\u7ed3\u675f\u540e\u89e3\u9501</p> <p>\u4e50\u89c2\u9501\uff1a\u6709\u5e76\u53d1\uff0c\u4f46\u51b2\u7a81\u53ef\u80fd\u6027\u8f83\u5c0f\uff0c\u5148\u505a\u52a8\u4f5c\uff0c\u518d\u68c0\u67e5\u662f\u5426\u51b2\u7a81</p> <p></p> <p></p> <p>\u51cf\u6cd5: sub, dec, sbb \u5e26\u501f\u4f4d\u51cf\u6cd5\uff08\u5168\u51cf\uff09</p> <p>Compare and Exchange</p> <p>\u5148\u505a compare \u518d\u505a exchange</p> <p>CMPXCHG des, src (\u9690\u85cf\u64cd\u4f5c\u6570\u7d2f\u52a0\u5668: AL/AX/EAX)</p> <ul> <li>if des == accu, then des = src, ZF=1</li> <li>if des != accu, then accu = des, ZF=0</li> </ul> <p></p> <p>div, idiv, mul, imul \u533a\u5206\u6709\u65e0\u7b26\u53f7\uff0c\u6700\u4e3b\u8981\u7684\u533a\u522b\u662f\u8fdb\u884c\u6269\u5c55\u65f6\u9ad8\u4f4d\u5982\u4f55\u586b\u5145</p> <p>\u800c add \u548c sub \u4e0d\u9700\u8981\u7ba1\uff0c\u56e0\u4e3a\u8865\u7801\u7b97\u51fa\u6765\u5c31\u662f\u5bf9\u7684</p> <p>\u7b26\u53f7\u6269\u5c55\u6307\u4ee4:</p> <p>CBW, CWDE, CDQE\uff1a A \u7cfb\u5217\u5bc4\u5b58\u5668\u6709\u7b26\u53f7\u6269\u5c55</p> <p>CWD,CDQ,CQO\uff1aAX -&gt; DX:AX \u6269\u5c55</p> <p>MOVSX, MOVSD\uff1a\u79fb\u52a8+\u6269\u5c55</p> <p>MOVZX: \u96f6\u6269\u5c55</p> <p>\u5386\u53f2\u9057\u7559\u6307\u4ee4\uff0cBCD \u4e0e ASCII \u6307\u4ee4:</p> <ul> <li>DAA, DAS \u5bf9 BCD \u7801\u8fdb\u884c\u8fd0\u7b97</li> </ul> <pre><code>mov al, 35H\nadd al, 48H\ndaa\n\nmov al, 35h\nadd al, 65h\ndaa\n# al: 00, CF: 1\n</code></pre> <ul> <li>AAA,  AAS, AAM, AAD \u5bf9 ASCII \u7801\u8fdb\u884c\u8fd0\u7b97:  ASCII: <code>30h-39h</code></li> </ul> <pre><code>aaa ; if AL[3:0]&gt;9 or AF=1, then AL+=6, AH=1, clear AL[7:4],CF=1, AF=1; else CF=0, AF=0\nmov al, '3' ; 33h\nadd al, '4' ; 34h, al = 67h\naaa         ; AH=0, AL=7h, CF=0, AF=0\nmov ax, '1' ; 31h\nmov ax, '9' ; 39h, al=6Ah\naaa         ; AH=1, AL=0h, CF=1, AF=1s\n</code></pre> <p>test \u505a\u4e0e\u64cd\u4f5c\uff0c\u4e0d\u5f71\u54cd\u7ed3\u679c\uff0c\u53ea\u5f71\u54cd flags</p> <p>\u4f4d\u64cd\u4f5c\u6307\u4ee4</p> <p>bt, btc, btr, bts</p> <pre><code>bt: \u6d4b\u8bd5\u8be5\u4f4d\nbtc: \u6d4b\u8bd5\uff0c\u53d6\u53cd\nbtr: \u6d4b\u8bd5\uff0c\u8bbe\u7f6e\u4e3a 0\nbts: \u6d4b\u8bd5\uff0c\u8bbe\u7f6e\u4e3a 1\n</code></pre> <p>not \u53d6\u975e</p> <p>neg \u53d6\u8865\uff0c\u5f71\u54cd flag</p> <p></p> <pre><code>int signum (int x) \n{ \n    if (x &gt; 0)  \n        return 1; \n    else if (x &lt; 0)  \n        return -1; \n    else  \n        return 0; \n}\n</code></pre> <pre><code>signum-icx:\n    mov     ecx, edi\n    sar     ecx, 31\n    test    edi, edi\n    mov     eax, 1\n    cmovle  eax, ecx\n    ret\nsignum-minimum:\n    cwd\n    neg ax\n    adc dx, dx\n</code></pre> <p></p> <p>sar\uff0c sal \u7b97\u6570\u79fb\u4f4d\uff0c\u8865\u5145\u7b26\u53f7\u4f4d</p> <p>idiv \u548c sar \u6709\u65f6\u4f1a\u4e0d\u4e00\u6837,idiv\u7684\u7b56\u7565\u662f round toward zero\uff0c\u800c\u7b97\u6570\u53f3\u79fb rount toward negative infinity</p> <p></p> <p>\u4fee\u8865: \u5728\u9664\u4e4b\u524d\uff0c\u5bf9\u88ab\u9664\u6570\u6dfb\u52a0 (1&lt;&lt;k-1) \u4e5f\u5c31\u662f\u52a0\u4e0a\u4f4e k \u4f4d\u4e3a 1 \u7684\u6570\uff0c\u5982\u679c\u88ab\u9664\u6570\u4f4e k \u4f4d\u5b58\u5728\u4e00\u4f4d\u4e3a 1\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fdb\u4f4d\u4e0a\u53bb\uff0c\u540e\u9762\u79fb\u4f4d\u56de\u53bb\u65f6\uff0c\u88ab\u9664\u6570\u8fd9\u4e00\u4f4d\u8fd8\u4fdd\u7559\uff0c\u90a3\u4e48\u5c31\u5b9e\u73b0\u4e86 round toward zero \u7684\u820d\u5165\u6a21\u578b</p> <p></p> <p>shldm shrd: \u53cc\u7cbe\u5ea6\u79fb\u4f4d\uff0c\u4e24\u4e2a\u5bc4\u5b58\u5668\u4e32\u5728\u4e00\u8d77\u79fb\u4f4d</p> <p></p> <p>ROL, ROR \u4e0d\u5e26 CF \u5faa\u73af\u79fb\u4f4d</p> <p>RCL, RCR \u5e26 CF \u5faa\u73af\u79fb\u4f4d</p> <p>\u5b57\u7b26\u4e32\u6bd4\u8f83\u6307\u4ee4 movs, lods, stos, ins, outs</p> <p>\u4ee5\u53ca\u4e24\u6761\u5f71\u54cd flag \u7684\u6307\u4ee4: scas (string scan), cmps (string compare)</p> <p></p> <p>di \u56de\u9000\u4e00\u4e2a\u4f4d\u7f6e\u624d\u80fd\u627e\u5230 00</p> <p>Chapter 6 \u63a7\u5236\u6307\u4ee4</p> <ol> <li>\u8df3\u8f6c\u6307\u4ee4</li> </ol> <p>\u65e0\u6761\u4ef6\u8df3\u8f6c</p> <p>jmp short, jmp near, jmp far</p> <p></p> <p>jmp with register operand\uff0c\u5bc4\u5b58\u5668\u76f4\u63a5\u62f7\u8d1d\u5230 ip\uff0c\u7edd\u5bf9\u8df3\u8f6c</p> <p>jmp table[si] \u8df3\u8868</p> <p>\u6761\u4ef6\u8df3\u8f6c:</p> <p></p> <pre><code>test word ptr[esi], 8000h ; \u4e0e\u7b26\u53f7\u4f4d\u505a test\npushf ; \u4fdd\u62a4 flags\nadd esi, 2\npopf\n</code></pre> <p>\u8de8\u6743\u9650\u63a7\u5236\u6d41\u8f6c\u6362</p> <ul> <li>conforming code segmentv\u8bbe\u7f6e\u4e3a\u4e00\u81f4\u6027\u4ee3\u7801\u6bb5\uff0c\u53ef\u4ee5\u5141\u8bb8\u4f4e\u6743\u9650\u7684\u4ee3\u7801\u6765\u8c03\u7528\uff0c\u7528\u4e8e\u5171\u4eab\u5e93</li> <li>\u95e8\u63cf\u8ff0\u7b26</li> <li>\u5feb\u901f\u7cfb\u7edf\u8c03\u7528</li> </ul> <p>\u4e2d\u65ad\u548c\u5f02\u5e38:</p> <ul> <li>\u4e2d\u65ad: \u5916\u90e8\u4e2d\u65ad: \u5f02\u6b65\uff0c\u8f6f\u4e2d\u65ad: \u540c\u6b65\u3002 \u7279\u70b9: \u4e3b\u52a8\u8bf7\u6c42 os \u670d\u52a1</li> <li>\u5f02\u5e38: cpu \u8fd0\u884c\u65f6\u53d1\u73b0\u5f02\u5e38\u8ba9 os \u5904\u7406</li> </ul> <p>\u5f02\u5e38\u7684\u6765\u6e90:</p> <ul> <li>Program-Error Exception: \u6bd4\u5982\u9664\u4ee5\u96f6</li> <li>Software-Generated Exceptions: into (overflow), int1, int3 (software break-point)</li> <li>Machine-Check Exceptions: \u673a\u5668\u81ea\u68c0\u5f02\u5e38\uff0c\u6bd4\u5982\u8dd1\u7740\u8dd1\u7740\u62d4\u6389\u5185\u5b58</li> </ul> <p>\u5f02\u5e38\u7684\u79cd\u7c7b:</p> <ul> <li>\u7cbe\u786e\u5f02\u5e38: </li> <li>\u53d1\u751f\u5f02\u5e38\u7684\u4f4d\u7f6e\u5b9a\u4f4d\u662f\u51c6\u786e\u7684\uff0c\u6240\u4ee5\u7cfb\u7edf\u5904\u7406\u5b8c\u53ef\u4ee5\u7ee7\u7eed\u5728\u65ad\u70b9\u6267\u884c\u4e0b\u53bb\u7684 (can be restarted)</li> <li>\u6bd4\u5982 Page Fault \u4e4b\u540e\uff0c\u9875\u9762\u8f7d\u5165\u5185\u5b58\uff0c\u53ef\u4ee5\u4ece\u65ad\u70b9\u7ee7\u7eed\u6267\u884c</li> <li>\u975e\u7cbe\u786e\u5f02\u5e38: </li> <li>\u5f02\u5e38\u7684\u4f4d\u7f6e\u662f\u4e0d\u51c6\u786e\u7684</li> <li>not restartable</li> </ul> <p>\u53e6\u4e00\u79cd\u5206\u7c7b:</p> <p></p> <p>\u4e2d\u65ad\u5165\u53e3:</p> <ul> <li>\u5b9e\u6a21\u5f0f: \u4e2d\u65ad\u5411\u91cf\u8868\uff0c\u5411\u91cf\u53f7:</li> <li>\u5411\u91cf\u53f7\u4e3a 2 \u7684\u662f\u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad</li> </ul> <p></p> <p></p> <p>\u7528\u6237\u53ea\u80fd\u81ea\u5b9a\u4e49\u4e2d\u65ad\uff0c\u4e14\u5411\u91cf\u53f7\u5728 32-25</p> <ul> <li>Double Fault Exception: \u5728\u5904\u7406\u5f02\u5e38\u7684\u8fc7\u7a0b\u4e2d\u53c8\u51fa\u73b0\u4e86\u5f02\u5e38</li> <li>\u6bd4\u5982\u5904\u7406 Page Fault \u7684\u65f6\u5019\uff0c\u5982\u679c\u6ca1\u5199\u7f3a\u9875\u5f02\u5e38\u7684\u5904\u7406\u4ee3\u7801\uff0c\u5c31\u4f1a\u518d\u62a5\u51fa\u4e00\u4e2a\u5f02\u5e38</li> <li>\u5e76\u4e0d\u662f\u6240\u6709\u7684\u5d4c\u5957\u5f02\u5e38\u90fd\u662f Double Fault Exception<ul> <li>\u5fc5\u987b\u6ee1\u8db3\u67d0\u79cd\u7ec4\u5408</li> <li></li> </ul> </li> <li> <p>\u53cc\u6545\u969c\u5f02\u5e38\u5fc5\u987b\u8981\u7279\u522b\u5c0f\u5fc3\u5730\u5904\u7406\uff0c\u4e0d\u80fd\u518d\u51fa\u73b0\u5f02\u5e38</p> <ul> <li>\u5982\u679c\u89e6\u53d1\u4e09\u6545\u969c\u5f02\u5e38\uff0c\u7cfb\u7edf\u5c31\u4f1a\u7acb\u523b\u91cd\u542f</li> </ul> </li> <li> <p>\u4fdd\u62a4\u6a21\u5f0f: IDT</p> </li> </ul> <p>\u5f02\u5e38\u7684\u9519\u8bef\u7801: \u9009\u62e9\u503c\u7c7b\uff0c\u4ee5\u53ca Page Fault \u9519\u8bef\u7801</p> <p></p> <ul> <li>Page Fault \u6709\u4e24\u79cd: \u771f\u7684\u7f3a\u9875\uff0c\u8fd8\u6709\u8bbf\u95ee\u6743\u9650\u4e0d\u591f</li> <li>cr2 \u5b58\u50a8\u53d1\u751f Page Fault \u7684\u865a\u62df\u5730\u5740</li> </ul> <p>\u4e2d\u65ad/\u5f02\u5e38\u7684\u4f18\u5148\u7ea7\u5206\u7ea7\uff0c\u4f18\u5148\u7ea7\u9ad8\u7684\u53ef\u4ee5\u6253\u65ad\u5176\u4ed6\u4f4e\u4f18\u5148\u7ea7\u4e2d\u65ad\u7684\u5904\u7406\u8fc7\u7a0b:</p> <p></p> <p></p> <ul> <li>\u76f8\u540c\u4f18\u5148\u7ea7\u7684\u5f02\u5e38\u6765\u7684\u65f6\u5019\uff0c\u662f\u5d4c\u5957\u8fd8\u662f\u6392\u961f\uff0c\u53d6\u51b3\u4e8e\u673a\u5668\u7684\u5b9e\u73b0</li> </ul> <p>\u5b9e\u6a21\u5f0f\u7684\u4e2d\u65ad\u5411\u91cf\u8868\u67e5\u8be2\uff1a</p> <p></p> <p>\u5b9e\u6a21\u5f0f\u8fdb\u5165\u4e2d\u65ad\u670d\u52a1\u51fd\u6570\u524d\u5411\u6808\u538b\u5165 flags, cs, ip:</p> <p></p> <p>\u56de\u53bb\u7684\u65f6\u5019\u8981 iret\uff0c32\u4f4d\u6a21\u5f0f\u8981 iretd</p> <p>\u63a7\u5236\u6307\u4ee4: </p> <p>carry flag stc, clc, cmc (complement carry flag)</p> <p>HLT: \u505c\u673a\u6307\u4ee4\uff0c\u7cfb\u7edf\u5904\u4e8e\u70ed\u7b49\u5f85\u72b6\u6001\uff0c\u9700\u8981\u4e0b\u9762\u7684\u6761\u4ef6\u6765\u6fc0\u6d3b:</p> <ul> <li>NMI, SMI \u4e0d\u53ef\u5c4f\u853d\u4e2d\u65ad\uff0c\u7cfb\u7edf\u4e2d\u65ad</li> <li>debug exception</li> <li>hardware reset\uff0cBINIT#, INIT#, RESET#</li> </ul> <p>\u591a\u5b57\u8282 NOP: \u6700\u591a\u53ef\u4ee5\u5341\u4e94\u5b57\u8282</p> <p></p> <p>\u591a\u5b57\u8282 nop \u7684\u610f\u4e49: \u5e0c\u671b\u4ee3\u7801\u5bf9\u9f50\uff0c\u7528\u6765\u505a\u586b\u5145\u6307\u4ee4</p> <p>\u4e00\u6761\u5341\u4e94\u5b57\u8282 nop \u548c\u4e00\u6761\u5355\u5b57\u8282 nop \u5dee\u4e0d\u591a\uff0c\u4f46\u8fdc\u6bd4 15 \u4e2a\u5355\u5b57\u8282 nop \u597d</p> <p>Lock: </p> <p></p> <ul> <li>\u7528\u4e8e\u201c\u8bfb, \u4fee\u6539, \u5199\u56de\u201d\u7684\u6307\u4ee4\u53d8\u6210\u539f\u5b50\u6307\u4ee4</li> </ul> <p>bound \u68c0\u6d4b\u662f\u5426\u5728\u4e24\u4e2a\u8303\u56f4\u4e4b\u95f4</p> <p>\u63a5\u53e3\u90e8\u5206</p> <p>Min Mode \u548c Max Mode</p> <p></p> <p>minimum mode: \u76f4\u63a5\u53d1\u9001\u63a7\u5236\u4fe1\u53f7\uff0c\u6709\u5b8c\u5168\u7684\u7ba1\u7406\u6743\u9650</p> <p></p> <p>maximum mode: \u53d1\u9001\u8bf7\u6c42\uff0c\u7b49\u5f85\u603b\u7ebf\u82af\u7247 \uff088288\uff09 \u4ef2\u88c1</p> <p></p> <p>BHE: Bus High Enable \u6307\u793a\u603b\u7ebf\u9ad8\u516b\u4f4d\u6570\u636e\u6709\u6548</p> <p>DRAM:</p> <p></p> <p>Channel -&gt; DIMM -&gt; Rank -&gt; Chip -&gt; Bank -&gt; Row / Column \u5230\u8fbe\u5355 bit</p> <p>8086 \u7684 bank \u4ee5 1 \u5b57\u8282\u4e3a\u5bbd\u5ea6\u6765\u7ec4\u7ec7\u5185\u5b58</p> <p></p> <p>\u5355\u5b57\u8282 &amp; \u5076\u5730\u5740: \\(D_7-D_0\\)</p> <p>\u5355\u5b57\u8282 &amp; \u5947\u5730\u5740 \\(D_{15}-D_8\\) </p> <p>\u53cc\u5b57\u8282: \\(D_{15}-D_0\\)</p> <p>\u4e09\u79cd\u72b6\u6001\uff0c\u9700\u8981\u4e24\u4f4d\u4fe1\u53f7\u6765\u63a7\u5236\uff0c\u5c31\u662f: \\(A_0\\) (BLE) \u548c BHE \u4fe1\u53f7</p> <p></p> <p>\u672a\u5bf9\u9f50\u5730\u5740\u7684\u8bbf\u5b58\u9700\u8981\u62c6\u6210\u4e24\u4e2a\u5468\u671f</p> <p></p> <p>\u786c\u4ef6\u63a5\u53e3\u9700\u8981\u89e3\u51b3\u7684 6 \u4e2a\u95ee\u9898:</p> <p></p> <ol> <li>\u9ad8\u4f4e\u7535\u5e73\u7684\u903b\u8f91\u5339\u914d</li> <li>\u589e\u5f3a\u4fe1\u53f7\uff08\u7535\u6d41\uff09</li> <li>\u5339\u914d\u901f\u5ea6: \u7f13\u51b2 / \u9501\u5b58</li> <li>\u5339\u914d\u65f6\u5e8f</li> <li>\u603b\u7ebf\u9694\u79bb</li> <li> <p>\u5339\u914d\u683c\u5f0f</p> </li> <li> <p>\u8f93\u5165/\u8f93\u51fa: \u8f93\u5165\u8f93\u51fa\u90fd\u4ee5 CPU \u7684\u89c6\u89d2\u6765\u770b\uff0c\u8f93\u5165\u8bbe\u5907\u8fde\u63a5\u8f93\u5165\u63a5\u53e3\uff0c...</p> </li> <li> <p>\u4fe1\u53f7\u7c7b\u578b: \u6570\u5b57\u4fe1\u53f7\u3001\u6a21\u62df\u4fe1\u53f7</p> </li> <li>\u4f20\u8f93\u7c7b\u578b: \u4e32\u884c\u4f20\u8f93\u3001\u5e76\u884c\u4f20\u8f93</li> <li>\u5e76\u884c\u4f20\u8f93\u4e0d\u4e00\u5b9a\u6bd4\u4e32\u884c\u5feb\uff0c\u5e76\u884c\u4fe1\u53f7\u6709\u4e32\u6270\uff0c\u9891\u7387\u4e0d\u80fd\u592a\u9ad8</li> </ol> <p>\u5178\u578b\u7684 I/O \u63a5\u53e3\uff08\u7c89\u8272\uff09\u7531\u56db\u90e8\u5206\u6784\u6210:</p> <ul> <li>\u8bfb\u5199\u63a7\u5236\u903b\u8f91</li> <li>\u7aef\u53e3\u5bc4\u5b58\u5668</li> <li>\u603b\u7ebf buffer</li> <li>\u63a7\u5236\u548c\u72b6\u6001\u5bc4\u5b58\u5668</li> </ul> <p></p> <p>\u63a5\u53e3\u9700\u8981\u8fdb\u884c\u7f13\u5b58</p> <p>\u4e0e\u8bbe\u5907\u7684\u540c\u6b65:</p> <ul> <li>Always-on Devices: \u65e0\u6761\u4ef6\u4f20\u8f93\uff0c\u4e0d\u9700\u8981\u6c9f\u901a\uff0c\u6bd4\u5982\u5f00\u706f\uff0c\u76f4\u63a5\u4f20\u8f93\u5c31\u597d</li> <li>Strobing \u9009\u901a\u4fe1\u53f7\uff0c\u53ea\u6709\u5355\u5411\u53d1\u9001\u7684\u4fe1\u53f7\uff0c\u6ca1\u6709\u56de\u5e94\u4fe1\u53f7</li> <li>\u53cc\u5411\u7684:</li> <li>Handshaking, Polling</li> <li>Interrupt-driven I/O</li> <li>Channel-based I/O (DMA)</li> </ul> <p>I/O \u5730\u5740\u7f16\u7801\u6709\u4e24\u79cd:</p> <ul> <li>\u72ec\u7acb I/O \u7f16\u7801: \u7528\u989d\u5916\u7684\u6307\u4ee4\u5904\u7406 I/O \u8bbf\u95ee: x86 \u7684 in \u548c out</li> <li>\u5185\u5b58\u6620\u5c04: \u8bfb\u5199\u5916\u90e8\u8bbe\u5907\u548c\u8bfb\u5199\u5185\u5b58\u7684\u65b9\u5f0f\u4e00\u6837</li> </ul> <p></p> <p>000-3FF \u7531\u7cfb\u7edf\u5b9a\u4e49</p> <p>400-FFFF \u53ef\u7531\u7528\u6237\u81ea\u5b9a\u4e49</p> <p>\u903b\u8f91\u82af\u7247\u7684\u5206\u7c7b: TTL &amp; CMOS</p> <p></p> <ul> <li>TTL \u903b\u8f91: \u4e09\u6781\u7ba1</li> <li>(\u66fe\u7ecf) \u901f\u5ea6\u5feb\uff0c\u9a71\u52a8\u7535\u6d41\u5927</li> <li>\u6d88\u8017\u80fd\u91cf\u9ad8</li> <li>CMOS \u903b\u8f91: \u573a\u6548\u5e94\u7ba1</li> </ul> <p>TTL</p> <p>\u6700\u4e3b\u8981\u5de5\u4f5c\u7535\u538b 5V</p> <p>\u8f93\u5165\u8f93\u51fa\u7684\u6807\u51c6\u975e\u5bf9\u79f0\uff1a\u5bbd\u8fdb\u4e25\u51fa</p> <p></p> <p>CMOS</p> <p>\u5de5\u4f5c\u7535\u538b\u6709\u5f88\u591a\u79cd:5V, 3.3V, 1.8V</p> <p></p> <p>\u8981\u8003\u8651\u4e24\u4e2a\u5668\u4ef6\u8f93\u51fa\u548c\u8f93\u5165\u7684\u8981\u6c42\uff080 \u548c 1 \u4f20\u8fc7\u53bb\u4ecd\u7136\u5e94\u8be5\u8ba4\u4e3a\u662f 0 \u548c 1\uff09\uff0c\u7535\u538b\u8981\u5339\u914d</p> <p></p> <p>\u7b2c\u4e00\u79cd\u7c7b\u578b\u9700\u8981\u4e0a\u62c9\u7535\u963b</p> <p>\u673a\u68b0\u5f00\u5173\u89e6\u70b9\u63a5\u89e6\u4e0d\u7a33\u5b9a\uff0c\u5b58\u5728\u201c\u6296\u52a8\u201d\u95ee\u9898:</p> <p></p> <p>\u53bb\u6296\u52a8\u7684\u65b9\u5f0f:</p> <ul> <li>\u8f6f\u4ef6: \u591a\u6b21\u91c7\u6837\uff0c\u7a33\u5b9a\u540e\u624d\u8ba4\u4e3a\u53d8\u5316</li> <li>\u786c\u4ef6:</li> <li>\u89e3\u51b3\u65b9\u6cd51: \u95ee\u9898\u5728\u4e8e\u4e4b\u524d\u662f\u53cc\u89e6\u53d1\uff0c\u9700\u8981\u505a\u6210\u5355\u89e6\u53d1\uff0c\u4e00\u63a5\u89e6\u5230\u5c31\u76f4\u63a5\u53d8\uff0c\u4e0d\u4f1a\u6296\u52a8</li> <li></li> <li>\u89e3\u51b3\u65b9\u6cd5 2:</li> <li>\u89e3\u51b3\u65b9\u6cd5 3\uff1a\u591a\u6b21\u91c7\u6837\uff0c\u5339\u914d</li> <li></li> </ul> <p>\u8f93\u51fa\u7535\u6d41\u7684\u5339\u914d: \u52a0\u9a71\u52a8\u7535\u8def</p> <p>\u9a71\u52a8 LED: 10 mA</p> <p>\u7528\u6676\u4f53\u7ba1\u53ef\u4ee5\u653e\u5927\u7535\u6d41\uff0c\u8981\u8ba1\u7b97\u7535\u963b\u5927\u5c0f\u786e\u4fdd\u5339\u914d</p> <p>LED \u6709\u538b\u964d\uff08-2V\uff09</p> <p></p> <p>\u9a71\u52a8\u66f4\u5927\u7684\u8bbe\u5907: 1A \u7684\u76f4\u6d41\u7535\u673a</p> <p>Darlington-pair: \u6676\u4f53\u7ba1\u4e32\u8054\u7ea7\u8054\u653e\u5927</p> <p></p> <p>\u7535\u52a8\u673a\u662f\u7535\u611f\uff0c\u5173\u95ed\u7684\u65f6\u5019\u4f1a\u4ea7\u751f\u53cd\u5411\u7535\u52a8\u52bf\uff0c\u9700\u8981\u52a0\u4e00\u4e2a\u653e\u7535\u56de\u8def\uff08\u7a33\u538b\u4e8c\u6781\u7ba1\uff09\uff0c\u5426\u5219\u7acb\u523b\u628a\u8fbe\u7075\u987f\u51fb\u7a7f\u4e86</p> <p>8\u4f4d\u5f00\u5173:</p> <p></p> <p>8\u4e2a LED \u8f93\u51fa: \u5171\u9633\u6781\uff0c\u5bf9\u5e94\u4f4d\u53d8 0 \u5c31\u70b9\u4eae</p> <p></p> <p>Strobing \u9009\u901a\u65f6\u5e8f</p> <ol> <li>\u6e90\u4e3b\u52a8\u9009\u901a\uff0c\u6570\u636e\u5148\u653e\u5230\u603b\u7ebf\u4e0a\uff0c\u53d1\u9001\u9009\u901a\u4fe1\u53f7\uff0c\u53d1\u9001\u4e4b\u540e\u518d\u5ef6\u7eed\u4e00\u6bb5\u65f6\u95f4\uff0c\u7ed9\u76ee\u7684\u5355\u5143\u8bfb\u53d6\u7684\u65f6\u95f4</li> </ol> <p></p> <ol> <li>\u76ee\u7684\u4e3b\u52a8\u9009\u901a:</li> </ol> <p>\u76ee\u7684\u62c9\u9ad8\u9009\u901a\u4fe1\u53f7\uff0c\u6e90\u628a\u6570\u636e\u653e\u5230\u4fe1\u53f7\u4e0a\uff0c\u76ee\u7684\u5173\u95ed\u9009\u901a\u4fe1\u53f7\uff0c\u6e90\u628a\u4fe1\u53f7\u4ece\u603b\u7ebf\u62ff\u8d70</p> <p></p> <p>Handshaking \u63e1\u624b\u65f6\u5e8f</p> <ol> <li>Source-initiated</li> </ol> <p></p> <ol> <li>Destination-initiated</li> </ol> <p></p> <p>I/O \u7aef\u53e3\u5730\u5740\u8bd1\u7801</p> <p></p> <p>\u5bf9\u5730\u5740\u8fdb\u884c\u8bd1\u7801\uff0c\u9ad8 5 \u4f4d\u8d1f\u8d23\u9009\u4e2d\u67d0\u4e2a decoder \uff08\u6bd4\u5982\u56fe\u4e0a\u7684decoder\u53ea\u6709\u5728\u9ad8\u5730\u5740 10000 \u624d\u4f7f\u80fd\uff09\uff0c\u4f4e 3 \u4f4d\u5730\u5740\u4f7f\u80fd 3-8 decoder</p> <p>IO/M \u4fe1\u53f7\u6307\u793a\u5f53\u524d\u7684\u5730\u5740\u662f I/O \u8fd8\u662f\u5185\u5b58\u5730\u5740</p> <p>\u518d\u4e3e\u4e00\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e F0h-F7h:</p> <p></p> <p>16 \u4f4d\u7aef\u53e3\u5730\u5740 EFF8h-EFFFh\uff0c\u7528\u4e00\u4e2a\u53ef\u7f16\u7a0b\u903b\u8f91\u5668\u4ef6 (PLD) \u6765\u8bd1\u7801</p> <p></p> <p>\u8f93\u51fa 8 \u4f4d: \u5076\u5730\u5740\uff0c\u5947\u5730\u5740 \u2014\u2014 \u8981\u63a7\u5236 BHE \u548c BLE</p> <p></p> <p>\u5982\u679c\u8f93\u51fa\u4e5f\u662f 16 \u4f4d\uff0c\u8bd1\u7801\u5c31\u76f8\u5bf9\u7b80\u5355\uff0c\u56e0\u4e3a\u6b64\u65f6\u5185\u5b58\u5730\u5740\u5fc5\u987b\u53cc\u5b57\u8282\u5bf9\u9f50</p> <p></p> <p>\u6570\u636e\u5bbd\u5ea632 \u4f4d\u65f6:</p> <p></p> <p>\u63a5\u53e3\u82af\u7247</p> <ol> <li>82C55\uff1a\u53ef\u7f16\u7a0b\u5e76\u884c\u63a5\u53e3 \uff088255 + C \u4ee3\u8868\u4f4e\u529f\u8017\u7684 CMOS\uff09</li> </ol> <p>\u7aef\u53e3\u5730\u5740\u4e0e\u6570\u636e\u5bbd\u5ea6\u5747\u662f\u516b\u4f4d\u7684</p> <p></p> <p>A[7:0] \u4e0e C[7:4] \u6784\u6210\u4e86 A \u63a7\u5236\u7ec4\uff0cB[7:0] \u4e0e C[3:0] \u6784\u6210 B \u63a7\u5236\u7ec4</p> <p>C \u88ab\u5206\u6210\u4e24\u90e8\u5206\u7528\u6765\u914d\u5408\u4fe1\u53f7\u7ebf A \u548c B \u505a\u63e1\u624b\u4fe1\u53f7</p> <p></p> <ul> <li> <p>A0, A1 \u9009\u62e9\u5bf9\u54ea\u4e2a\u7aef\u53e3\u8fdb\u884c\u64cd\u4f5c</p> </li> <li> <p>CS\uff1a Chip Select \u4f4e\u4f7f\u80fd\u8fd9\u4e2a\u82af\u7247</p> </li> </ul> <p>\u63a7\u5236\u4fe1\u53f7\u4e0e\u6570\u636e\u6d41\u5411</p> <p></p> <p></p> <p>A\u548cB\u7aef\u53e3\u4e2d\uff0cA\u66f4\u5f3a\u5927:</p> <p>A\u6709\u72ec\u5360\u7684\u8f93\u5165 latch\uff0c\u8f93\u51fa latch/buffer</p> <p>B \u53ea\u6709\u8f93\u5165 buffer \u548c\u5171\u4eab\u7684\u8f93\u5165\u8f93\u51fa latch/buffer</p> <p></p> <p>Mode 0: \u65e0\u63e1\u624b\u4fe1\u53f7\uff0c\u57fa\u672c\u7684\u8f93\u5165\u8f93\u51fa</p> <p>Mode 1: \u9009\u901a\u5f0f\u63e1\u624b</p> <p>Mode 2: \u53cc\u5411\u603b\u7ebf\u64cd\u4f5c\uff0c\u53ef\u5728\u4e0d\u540c\u65f6\u95f4\u505a\u8f93\u5165\u8f93\u51fa\uff08\u800c\u524d\u9762\u7684\u8f93\u5165\u8f93\u51fa\u662f\u786e\u5b9a\u7684\uff09\uff0c\u4ec5\u9002\u7528\u4e8e\u63a7\u5236\u7ec4 A</p> <p></p> <p>Mode 0 \u9002\u5408 Always On \u6ca1\u6709\u65f6\u5e8f\u903b\u8f91\u7684\u8bbe\u5907\uff0c\u6bd4\u5982 LED \u706f</p> <p>Mode 1 \u9002\u5408\u9009\u901a</p> <p>Mode 2 \u6b64\u65f6 C \u7aef\u53e3\u6709\u4e94\u6761\u7ebf\u53ef\u4ee5\u914d\u5408 Mode 2 \u7684 A \u7aef\u53e3\uff0c\u53cc\u5411\u5404\u4e24\u6761\uff0c\u518d\u6765\u4e00\u6761\u4e2d\u65ad\u7ebf</p> <p>82C55 \u63a5\u5230 80386SX \u4e0a\u65f6:</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u4f7f\u7528 C0, C2, C4, C6 \u800c\u4e0d\u662f C0, C1, C2, C3: \u4e3a\u4e86\u8ba9\u7aef\u53e3\u90fd\u5728\u5076\u5730\u5740\u4e0a\uff0c\u907f\u514d\u5728\u8bd1\u7801\u7684\u65f6\u5019\u8fd8\u9700\u8981\u5f15\u5165\u7c7b\u4f3c BHE \u7684\u4fe1\u53f7</p> <p></p> <p>1 = I = Input, 0 = O = Output</p> <p></p> <p>Mode 0 \u7684\u64cd\u4f5c:</p> <p>\u65f6\u5e8f\u56fe:</p> <p>\u4e0a\u5347\u6cbf\u89e6\u53d1\uff0c\u8f93\u5165\u540e tRD \u4e4b\u540e\u7684\u624d\u662f\u6709\u6548\u6570\u636e</p> <p></p> <ul> <li>\u8f93\u5165</li> <li>\u9996\u5148\u7ed9\u51fa\u7247\u9009 CS \u548c\u7aef\u53e3\u5730\u5740 A1, A0</li> <li>\u5176\u540e\u8f93\u5165\u6570\u636e\u9700\u8981\u7ed9\u51fa</li> <li>\u7136\u540e CPU \u53d1\u51fa RD \u4fe1\u53f7</li> <li>\u968f\u540e\u7aef\u53e3\u9501\u5b58\u4f4f\u7684\u5916\u90e8\u8f93\u5165\u5c31\u53ef\u4ee5\u8bfb\u5230 CPU \u7684\u8f93\u5165\u603b\u7ebf\u4e0a\u6765 D7-D0</li> <li>\u8f93\u51fa</li> <li>CS, A1, A0</li> <li>CPU \u5c06\u5199\u7684\u6570\u636e\u653e\u5230\u6570\u636e\u603b\u7ebf\u4e0a</li> <li>CPU \u53d1\u51fa\u5199\u4fe1\u53f7</li> </ul> <p>\u6b65\u8fdb\u7535\u673a</p> <p>\u6fc0\u52b1\u65b9\u5f0f: \u5168\u6b65 full-step\uff0c\u534a\u6b65 half-step\uff0c\u5fae\u6b65 micro-step</p> <p>\u4e00\u76f8\u5145\u7535\u548c\u4e24\u76f8\u5145\u7535: 90\u00b0</p> <p></p> <p>\u534a\u6b65: \u5355\u76f8\u548c\u4e24\u76f8\u642d\u914d 45\u00b0</p> <p></p> <p>\u4ee3\u7801:</p> <p></p> <p>\u6700\u9ad8\u4f4d\u662f ready bit, \u7cfb\u7edf\u81ea\u52a8\u8bbe\u7f6e</p> <p>micro-step: \u7cbe\u7ec6\u63a7\u5236\u6bcf\u4e2a\u7ebf\u5708\u7684\u7535\u6d41</p> <p></p> <p>\u7528\u5230\u4e32\u8054\u7684\u8fbe\u7075\u987f\u7ba1\u548c\u4e8c\u6781\u7ba1</p> <p></p> <p></p> <p>\u5fae\u6b65: CX \u6700\u9ad8\u4f4d\u4ee3\u8868\u65b9\u5411\uff0c\u540e\u9762 15 \u4f4d\u8868\u793a\u591a\u5c11\u6b65</p> <p></p> <p>Mode 1:</p> <p>\u8f93\u5165:</p> <p></p> <p>IBF: Input buffer full</p> <p>\u7ec8\u7aef\u4f7f\u80fd INTE\uff1a PC4 (Group A)\uff0c PC4(Group B)</p> <p>\u6a21\u5f0f1\u7684\u5de5\u4f5c\u6a21\u5f0f\u53ef\u4ee5\u4ece\u7aef\u53e3C\u8bfb\u53d6:</p> <p></p> <p>\u53ef\u4ee5\u4e00\u4e2a\u5b57\u8282\u6574\u4e2a\u8bfb\u8fdb\u6765</p> <p>\u6a21\u5f0f1 \u8f93\u5165\u4f8b\u5b50: \u952e\u76d8</p> <p>\u8f93\u51fa:</p> <p>CPU \u7ed9 82C55 \u8f93\u51fa\u6570\u636e\uff0c\u7531 82C55 \u9501\u5b58</p> <p>\u5f53\u7f13\u51b2\u533a\u6162\u65f6\uff0cOBF \u53d8\u6210\u4f4e\u7535\u5e73\u901a\u77e5\u8bbe\u5907\u6765\u8bfb</p> <p>\u8bbe\u5907\u53d1\u9001 ACK\uff0c\u968f\u540e 82C55 \u5411 CPU \u53d1\u9001\u4e2d\u65ad\u4fe1\u53f7\uff0c</p> <p>\u8ba9 CPU \u7ee7\u7eed\u6765\u5199</p> <p></p> <p>\u6a21\u5f0f1\u8f93\u51fa\u4f8b\u5b50: \u6253\u5370\u673a</p> <p>\u4e32\u53e3\u6253\u5370\u673a</p> <p></p> <p>\u6545\u610f\u4e0d\u7528 PC1 \u800c\u662f\u7528 PC4 \u4ea7\u751f OBF \u4fe1\u53f7\uff0c\u662f\u4e3a\u4e86\u5c55\u793a Command Word B \u7684\u7528\u6cd5</p> <p>\u6a21\u5f0f2\uff1a\u53cc\u5411\u64cd\u4f5c\u65b9\u5f0f\uff0c\u53ea\u80fd\u7ec4A</p> <p></p> <p>\u4e2d\u65ad\u7ebf\u590d\u7528\uff0c\u518d\u5360 OBF, ACK, STB, IBF, \u4e00\u5171\u5360 5 \u6761\u7ebf</p> <p>\u6b64\u65f6\u7ec4 B \u6700\u591a\u5728\u6a21\u5f0f 1\uff0c\u628a\u6240\u6709\u7ebf\u7528\u6ee1</p> <p>\u65f6\u5e8f\u56fe:</p> <p></p> <p>\u603b\u7ebf\u662f\u7ade\u4e89\u7684:</p> <p>\u867d\u7136 CPU \u5148\u8bbe\u7f6e\u7684 WR \u4fe1\u53f7\u4e14 82C55 \u5df2\u7ecf OBF \u4e86</p> <p>\u4f46\u662f\u6b64\u65f6\u5916\u90e8\u8bbe\u5907\u5df2\u7ecf\u628a\u7ed9 CPU \u7684\u6570\u636e\u653e\u5230\u603b\u7ebf\u4e0a\u4e86\uff0c\u6240\u4ee5 CPU \u53ea\u80fd\u5148\u8bfb\u8d70</p> <p>\u56e0\u6b64 CPU \u7684\u5199\u6570\u636e\u53ea\u80fd\u5728\u5176\u540e\u9762\u518d\u653e\u5230\u603b\u7ebf\u4e0a</p> <p>\u4e2d\u65ad\u8bf7\u6c42\u4e5f\u662f\u7ade\u4e89\u7684:</p> <p>CPU \u63a5\u6536\u5230\u4e2d\u65ad\u65f6\uff0c\u5982\u4f55\u77e5\u9053\u662f\u8ba9\u5b83\u5199\u8fd8\u662f\u8bfb?</p> <p>CPU \u53ea\u9700\u8981\u8bfb\u53d6 C \u53e3\u7684 OBF \u548c IBF \u7684\u72b6\u6001\u5373\u53ef</p> <p>\u82e5 OBF \u548c IBF \u540c\u65f6\u6709\u6548\uff0c\u90a3\u65e2\u8981\u8bfb\u53c8\u8981\u5199</p> <p>\u5982\u679c\u53ea\u8981\u6709\u4e00\u4e2a\uff0c\u90a3\u5c31\u54cd\u5e94\u90a3\u4e2a\u5c31\u53ef\u4ee5\u4e86</p> <p>\u6a21\u5f0f2\u7684\u7f16\u7a0b:</p> <p></p> <p></p> <p>\u7ec4A\u6a21\u5f0f2\u548c\u7ec4B\u6a21\u5f0f1\u540c\u65f6\u7528\uff0c\u8fbe\u5230\u6ee1\u8f7d:</p> <p></p> <p>8254 \u53ef\u7f16\u7a0b\u5b9a\u65f6\u5668</p> <p>\u63a7\u5236\u8bbe\u5907\uff0c\u53d1\u9001\u63a7\u5236\u4fe1\u53f7</p> <p>3 \u4e2a\u72ec\u7acb\u7684 16 \u4f4d\u65f6\u949f\u8ba1\u6570\u5668\uff0c\u65e2\u53ef\u4ee5\u4e8c\u8fdb\u5236\uff0c\u4e5f\u53ef\u4ee5 BCD</p> <p></p> <p>Timer 0: \u7ed9 CPU \u53d1\u9001\u65f6\u949f\u4e2d\u65ad\uff0c\u63a5\u5230 8259 \u4e2d\u65ad\u63a7\u5236\u5668</p> <p>Timer 1: DRAM \u5185\u5b58\u7684 refresh \u65f6\u949f</p> <p>Timer 2: \u9a71\u52a8\u5587\u53ed</p> <p></p> <p>CS: \u7247\u9009\u4fe1\u53f7</p> <p>A0, A1 \u6307\u5b9a\u67d0\u4e2a\u8ba1\u65f6\u5668</p> <p>\u4e00\u4e2a counter \u7684\u5185\u90e8\u7ed3\u6784:</p> <p>\u63a7\u5236\u5b57\u4e09\u4e2a\u8ba1\u65f6\u5668\u590d\u7528</p> <p>CR_M, CR_L: \u4e24\u4e2a 8 \u4f4d\u8ba1\u6570\u521d\u503c</p> <p>CE: 16 \u4f4d\u5012\u8ba1\u65f6\u8ba1\u6570</p> <p>OL_M, OL_L: \u4e24\u4e2a 8 \u4f4d\u8f93\u51fa</p> <p>8254 \u7684\u547d\u4ee4\u5b57:</p> <p>SC1/SC0: 11 \u8868\u793a\u56de\u8bfb\uff0c\u83b7\u5f97\u8ba1\u6570\u5668\u7684\u72b6\u6001</p> <p>RW1/RW0: \u8bfb\u4f4e\u4f4d\u8ba1\u6570\u521d\u503c\uff0c\u8bfb\u9ad8\u4f4d\u8ba1\u6570\u521d\u503c\uff0c\u8fd8\u6709\u4e24\u4e2a\u90fd\u8bfb\uff08\u4f4e\u4f4d LSB \u5148\u5199\uff09</p> <p>M2/M1/M0: \u8ba1\u6570\u5668\u5de5\u4f5c\u6a21\u5f0f</p> <p>\u547d\u4ee4\u5b57\u9700\u8981\u5411\u547d\u4ee4\u7aef\u53e3\u5199\uff0c\u5730\u5740\u4e3a A1,A0 = 11</p> <p></p> <p></p> <p>\u8bfb\u53d6 8254 \u7684\u65f6\u5e8f\u56fe:</p> <p></p> <p>\u5199\u5165 8254 \u7684\u65f6\u5e8f\u56fe:</p> <p></p> <p>8254 \u6bcf\u4e2a\u8ba1\u65f6\u5668\u90fd\u8981\u8bbe\u7f6e\u4e00\u4e2a\u547d\u4ee4\u5b57</p> <p>\u5199\u5165\u8ba1\u6570\u521d\u503c\u4e4b\u540e\uff0c\u53ea\u8981\u95e8\u63a7\u4fe1\u53f7\u6709\u6548\uff0c\u5c31\u5f00\u59cb\u8ba1\u6570</p> <p>\u521d\u59cb\u5316: \u5148\u4f4e\u5b57\u8282\uff0c\u518d\u9ad8\u5b57\u8282</p> <p>16\u4f4d:</p> <ul> <li>\u4e8c\u8fdb\u5236 0~FFFF</li> <li>BCD: 0~9999</li> <li>\u8ba1\u65f6\u5668\u662f\u5148\u51cf\u518d\u5224\u65ad\uff0c\u56e0\u6b64\u521d\u503c\u8bbe\u7f6e\u4e3a 0 \u53ef\u8fbe\u6700\u5927\u8ba1\u6570\u6b21\u6570</li> </ul> <p>Mode 0</p> <p>Mode 1</p> <p></p> <p>\u9ad8\u7535\u5e73\u95e8\u63a7\u4fe1\u53f7\u88ab\u91c7\u6837\u5230\uff0c\u518d\u91cd\u65b0\u8f7d\u5165\u521d\u59cb\u503c</p> <p>\u671f\u672b\u5fc5\u8003 2024.12.20 \u5f00\u5934</p> <p>Mode 2 - Rate Generator</p> <p>OUT \u7edd\u5927\u5468\u671f\u9ad8\u7535\u5e73\uff0c\u8ba1\u6570\u5230 1 \u7684\u65f6\u5019\u624d\u53d8\u6210 0</p> <p>\u95e8\u63a7\u4fe1\u53f7\u5f71\u54cd\u8f93\u51fa:</p> <p>\u95e8\u63a7\u4fe1\u53f7 Gate = 0 (\u65e0\u6548) \u7acb\u523b\u5c06 OUT \u53d8\u6210\u9ad8\u7535\u5e73</p> <p>\u76f4\u5230\u4e0b\u4e00\u6b21\u95e8\u63a7\u4fe1\u53f7\u6709\u6548\u65f6\uff0c\u91cd\u65b0\u88c5\u5165\u521d\u59cb\u503c\uff0c\u518d\u5f00\u59cb\u8ba1\u6570</p> <p></p> <p>\u91c7\u6837\u5230 GATE=0, \u4e0b\u964d\u6cbf\u505c\u6b62\u8ba1\u6570</p> <p>\u5f53 GATE=1 \u6062\u590d\u65f6\u5019\uff0c\u91cd\u65b0\u8bfb\u5165\u521d\u59cb\u503c 03</p> <p>Mode 3 - Square Wave Generator \u65b9\u6ce2\u53d1\u751f\u5668: \u5360\u7a7a\u6bd4 50%</p> <p>\u5982\u679c\u8f93\u5165\u65f6\u5076\u6570: \u6bd4\u5982 6, \u90a3\u4e48 3 \u62cd\u9ad8\uff0c3 \u62cd\u4f4e, \u5360\u7a7a\u6bd4 50%</p> <p>\u5982\u679c\u8f93\u5165\u4e3a\u5947\u6570: \u9ad8\u7684\u5468\u671f\u5fc5\u4f4e\u7684\u5468\u671f\u591a\u4e00\u4e2a\uff0c\u5360\u7a7a\u6bd4 \\(\\frac{n+1}{2n}\\)</p> <p></p> <p>Mode 4 - \u8f6f\u4ef6\u89e6\u53d1\u9009\u901a\uff0c\u53ef\u4ee5\u7c7b\u6bd4\u6a21\u5f0f 0</p> <p>\u5230\u8fbe 0 \u7684\u65f6\u5019\uff0c\u53ea\u4ea7\u751f 1 \u4e2a\u8282\u62cd\u7684\u4f4e\u7535\u5e73</p> <p></p> <p>\u4e0b\u964d\u6cbf\u88c5\u5165 03</p> <p>Mode 5 - \u786c\u4ef6\u89e6\u53d1\u9009\u901a</p> <p>\u53ea\u8981\u95e8\u63a7\u4fe1\u53f7\u4ea7\u751f\u4e0a\u5347\u6cbf\u5c31\u89e6\u53d1\u8ba1\u6570\uff0c\u5373\u4f7f\u6ca1\u6709\u88ab\u65f6\u949f\u4fe1\u53f7\u91c7\u6837\u5230</p> <p></p> <p>8254 \u82af\u7247\u7684\u4f7f\u7528</p> <p>\u4f8b\u5b50 1: \u63a5\u5230 80386 \u8ba1\u7b97\u673a\uff0c\u7528\u7b2c\u4e00\u4e2a\u8ba1\u65f6\u5668\u4ea7\u751f 100K \u65b9\u6ce2\uff0c\u7528\u7b2c\u4e8c\u4e2a\u8ba1\u65f6\u5668\u4ea7\u751f 200K \u8fde\u7eed\u6ce2</p> <p>\u5982\u679c\u53d8\u5316\u7684\u4e24\u4f4d\u653e\u5230\u6700\u4f4e\u4e24\u4f4d\u7684\u8bdd\uff0c\u4f1a\u9700\u8981\u7528\u603b\u7ebf\u9ad8\u4fe1\u53f7\u6765\u505a\u7247\u9009\u6bd4\u8f83\u9ebb\u70e6</p> <p>\u65f6\u949f\u8282\u62cd\u4e3a 8 Mhz\uff0c\u95e8\u63a7\u6301\u7eed\u4f7f\u80fd\uff0c\u63a5\u5230\u4e0a\u62c9\u7535\u963b</p> <p></p> <p>\u8ba1\u6570\u521d\u503c\u8ba1\u7b97:</p> <p>\u6a21\u5f0f 2 \u548c 3 \u90fd\u662f N \u5206\u9891\uff0c\u4e5f\u5c31\u662f\u9891\u7387\u53d8\u6210 \\(1/n\\).</p> <p></p> <p>\u5982\u679c\u8981 100 Hz \u65b9\u6ce2\u600e\u4e48\u529e\uff1f 8 Mhz / 100 Hz = 80000\uff0c\u800c\u6700\u591a\u53ea\u80fd\u8ba1\u6570 65536 \u600e\u4e48\u529e</p> <p>\u4e32\u8054\u5206\u9891\uff0c\u628a\u7b2c\u4e00\u7ea7\u7684 out \u63a5\u5230\u7b2c\u4e8c\u7ea7\u7684 clk</p> <p>\u4ee3\u7801:</p> <ul> <li>100K \u65b9\u6ce2\uff0c\u9700\u8981\u5de5\u4f5c\u5728\u6a21\u5f0f 3</li> </ul> <p>\u5148\u5199\u547d\u4ee4\u5b57\uff0c\u518d\u5199\u8ba1\u6570\u521d\u503c\uff0c\u5148\u4f4e\u5b57\u8282\u518d\u9ad8\u5b57\u8282\uff08\u4e3a\u4e86\u5c55\u793a\u4e24\u5b57\u8282\u7684\u5199\u6cd5\uff0c\u6240\u4ee5 RW1,RW0 \u8bbe\u7f6e\u6210\u4e86 11\uff09</p> <p>\u8003\u8bd5\u8981\u6c42\u8bb0\u5fc6\u5730\u5740</p> <p></p> <ul> <li>200K continuous pulse\uff0c\u9700\u8981\u6a21\u5f0f 2</li> </ul> <p>\u8bfb\u53d6\u8ba1\u6570\u5668\u7684\u503c</p> <p></p> <p>Simple Read:</p> <p>\u63a8\u8350\u8bbe\u7f6e\u95e8\u63a7\u4fe1\u53f7\u8ba9\u8ba1\u6570\u505c\u6b62\u4e00\u4e0b\u518d\u8bfb\uff0c\u4f46\u76f4\u63a5\u786c\u8bfb\u4e5f\u4e0d\u662f\u4e0d\u884c\uff0c\u5c31\u662f\u4f1a\u4e0d\u592a\u7a33\u5b9a</p> <p>Counter Latch Command: \u8ba1\u65f6\u5668\u9501\u5b58\u547d\u4ee4</p> <p>D5,D4=00 \u6307\u5b9a\u8ba1\u6570\u5668\u9501\u5b58\u6307\u4ee4\uff0cSC1, SC0 \u8868\u793a\u9501\u5b58\u54ea\u4e2a\u8ba1\u6570\u5668\u7684\u503c</p> <p></p> <p>\u6ce8\u610f\u8bfb\u53d6\u7684\u987a\u5e8f\u548c\u5f53\u65f6\u8bbe\u7f6e\u8fd9\u4e2a\u5bc4\u5b58\u5668\u7684\u65f6\u5019\uff0c\u4f4e\u5b57\u8282\u3001\u9ad8\u5b57\u8282\u7684\u8bbe\u7f6e\u662f\u4e00\u81f4\u7684\uff0c\u6bd4\u5982\u4e00\u5f00\u59cb\u662f 11\uff0c\u90a3\u4e48\u8bfb\u7684\u65f6\u5019\u4e5f\u662f\u5148\u8bfb\u4f4e\u5b57\u8282\u518d\u8bfb\u9ad8\u5b57\u8282</p> <p></p> <p></p> <p>\u56de\u8bfb\u547d\u4ee4\u7684\u683c\u5f0f:</p> <p>\u53ef\u4ee5\u8bfb count \u4e5f\u53ef\u4ee5\u8bfb\u7f16\u7a0b\u6a21\u5f0f\uff0c\u8f93\u51fa\u7684\u5f15\u811a\u662f\u9ad8\u7535\u5e73\u8fd8\u662f\u4f4e\u7535\u5e73\uff0cNull Count Flag: \u662f\u5426\u88ab\u521d\u59cb\u5316\u8fc7</p> <p></p> <p>Count \u662f 0 \u4ee3\u8868\u50cf\u8bfb\u8ba1\u6570\u503c</p> <p>Status \u662f 0 \u4ee3\u8868\u8bfb\u53d6\u72b6\u6001: \u7f16\u7a0b\u6a21\u5f0f\uff0cOUT\uff0c Null Count Flag</p> <p></p> <p>\u6700\u9ad8\u4e24\u4f4d\u5fc5\u987b\u662f 11\uff0c \u6700\u4f4e\u5fc5\u987b\u662f 0</p> <p>PWM \u9a71\u52a8\u7535\u673a</p> <p>H-\u6865</p> <p></p> <p>\u4e0d\u4ec5\u53ef\u4ee5\u63a7\u5236\u901f\u5ea6\uff0c\u8fd8\u53ef\u4ee5\u63a7\u5236\u65b9\u5411</p> <p></p> <p>50% \u5360\u7a7a\u6bd4\u662f\u505c\u6b62\uff0c\u53d8\u4f4e\u548c\u53d8\u9ad8\u90fd\u4f1a\u5f00\u59cb\u8f6c\uff0c\u65b9\u5411\u76f8\u53cd</p> <p></p> <p>Mode 2,3 \u6bd4\u8f83\u7279\u6b8a\uff0c\u65e2\u53ef\u4ee5\u7535\u5e73\u89e6\u53d1\uff0c\u4e5f\u53ef\u4ee5\u8fb9\u6cbf\u89e6\u53d1</p> <p>\u8fb9\u6cbf\u89e6\u53d1\u7684\u4f5c\u7528\u662f\u91cd\u7f6e\u8ba1\u6570\uff0c\u800c\u7535\u5e73\u89e6\u53d1\u662f\u5f00\u542f\u6216\u5173\u95ed</p> <p></p> <p>16550 \u4e32\u884c\u901a\u4fe1\u82af\u7247</p> <p>\u5355\u5de5\uff0c\u534a\u53cc\u5de5\uff0c\u5168\u53cc\u5de5:</p> <p></p> <p>\u4e32\u884c\u901a\u4fe1: \u53ea\u80fd\u4e00\u4f4d\u4e00\u4f4d\u4f20\u8f93</p> <p></p> <p>\u7b2c\u4e09\u6b65\u9700\u8981\u4f7f\u7528\u4fe1\u9053\u4e0a\u9762\u7684\u7f16\u7801\uff08\u7c7b\u4f3c\u8ba1\u7f51\uff09\uff0c\u8ba9 0 \u548c 1 \u66f4\u6613\u533a\u5206\uff0c\u6297\u5e72\u6270 \u5728\u6570\u636e\u7f16\u7801\u4e2d\u8fd8\u8981\u63d0\u4f9b\u540c\u6b65\u4fe1\u53f7\uff0c\u5e76\u4e14\u6bcf\u4e2a\u6570\u636e\u5305\u90fd\u8981\u6dfb\u52a0\u540c\u6b65\u4fe1\u53f7\uff0c\u907f\u514d\u9519\u8bef\u7d2f\u8ba1</p> <p>\u6709\u6548\u8f7d\u8377 Payload \u5c01\u88c5\u597d\u540e\uff0c\u5728\u53d1\u9001\u65f6\u949f\u7684\u9a71\u52a8\u4e0b\uff0c\u7528\u79fb\u4f4d\u5bc4\u5b58\u5668\u4e00\u4f4d\u4e00\u4f4d\u53d1\u9001\u51fa\u53bb</p> <p>\u63a5\u6536\u7aef\u5728\u63a5\u6536\u5230\u8d77\u59cb\u4f4d\u65f6\u540c\u6b65\u81ea\u5df1\u7684\u65f6\u949f\uff0c\u6700\u540e\u8fd8\u8981\u5229\u7528\u6821\u9a8c\u4f4d\u8fdb\u884c\u68c0\u9a8c</p> <p>\u5982\u679c\u6ca1\u6709\u95ee\u9898\uff0c\u5c31\u4e32\u8f6c\u5e76\u4f20\u8f93\u7ed9 CPU</p> <p>Clocks and Timing:</p> <p>\u65f6\u949f\u9700\u8981\u8003\u8651\u91c7\u6837\u4fe1\u53f7\u80fd\u91cf\u6700\u5927\u7684\u70b9: \u4e2d\u5fc3\u70b9\u91c7\u6837</p> <p>\u65f6\u949f\u6709\u4e24\u79cd\u53ef\u80fd</p> <ul> <li> <p>\u540c\u6b65\u6570\u636e\u4f20\u8f93 (\u540c\u6b65\u7684\u60c5\u51b5\u65e0\u9700 start bit \u548c stop bit)</p> </li> <li> <p>\u65f6\u949f\u540c\u6e90: \u53d1\u9001\u548c\u63a5\u53d7\u7aef\u4f7f\u7528\u76f8\u540c\u7684\u65f6\u949f\u6e90</p> </li> <li> <p>\u65f6\u949f\u5f02\u5730: PLL \u9501\u76f8\u73af: \u8d1f\u53cd\u9988\u8ba1\u6570\uff0c\u4f5c\u5dee\u80fd\u591f\u9501\u5b9a\u548c\u6570\u636e\u76f8\u540c\u9891\u7387\u7684\u65f6\u949f</p> </li> <li> <p>\u5f02\u6b65\u6570\u636e\u4f20\u8f93</p> </li> <li> <p>\u9700\u8981\u6709\u76f8\u540c\u7684\u6570\u636e\u4f20\u8f93\u901f\u7387: baud rate</p> </li> <li>\u9700\u8981\u8d77\u505c\u4f4d\u6765\u8fdb\u884c\u65f6\u949f\u7684\u540c\u6b65</li> </ul> <p>\u540c\u6b65\u4e0e\u5f02\u6b65\u6570\u636e\u4f20\u8f93\u7684\u4e0d\u540c:</p> <p></p> <p>\u4e32\u884c\u901a\u4fe1: UART / USART</p> <p>UART: Universal Asynchronous Receiver Transmitter \u901a\u7528\u5f02\u6b65\u4f20\u8f93</p> <p>USART: \u540c\u65f6\u652f\u6301\u5f02\u6b65\u548c\u540c\u6b65</p> <p></p> <p>\u5728\u7f16\u7801\u4e2d\u4f53\u73b0\u65f6\u949f\u7684\u8df3\u53d8\uff0c\u5728\u6301\u7eed\u4f20\u8f93\u76f8\u540c\u4f4d\u7684\u65f6\u5019\uff0c\u4f9d\u7136\u80fd\u4f53\u73b0\u65f6\u949f\u4fe1\u606f:</p> <p>NRZ: 0\u5c31\u662f\u4f4e\uff0c1\u5c31\u662f\u9ad8\uff0c\u5728 stop bit \u7684\u65f6\u5019\uff0c\u6301\u7eed\u9ad8\u7535\u5e73\uff0c\u5c31\u65e0\u6cd5\u540c\u6b65\u65f6\u949f\u4e86</p> <p>NRZI: 0 \u5c31\u662f\u4fdd\u6301\uff0c1 \u5c31\u662f\u53cd\u76f8\uff0c\u5728\u622a\u6b62\u4f4d\u6301\u7eed\u9ad8\u7535\u5e73\u7684\u65f6\u5019\u5f88\u6709\u5e2e\u52a9</p> <p></p> <p>USB \u4f7f\u7528 NRZI</p> <p>\u5f02\u6b65\u6570\u636e\u4f20\u8f93\u534f\u8bae:</p> <p></p> <p>\u6709\u6548\u8f7d\u8377\uff0c\u6821\u9a8c\u4f4d\uff0c\u505c\u6b62\u4f4d\u7684\u957f\u5ea6\u53ef\u53d8\uff0c\u4f53\u73b0\u51fa\u53ef\u7f16\u7a0b\u7684\u7279\u6027</p> <p>\u4ee5 UART \u4e3a\u4f8b\uff0c\u9700\u8981\u63a5\u6536\u7aef\u548c\u53d1\u9001\u7aef\u7ea6\u5b9a\u6ce2\u7279\u7387 baud rate</p> <p>\u8fd9\u91cc\u5e76\u4e0d\u662f\u6709\u6548\u6570\u636e\u4f20\u8f93\u7684 bit rate\uff0c\u800c\u662f\u7f16\u7801\u4e4b\u540e\u7684\u4fe1\u53f7\u7684 baud rate</p> <p>baud rate: 9600 bps,  1 bit \u9700\u8981 1/9600 = 104.2 us \u7684\u65f6\u95f4</p> <p>\u8fdb\u884c\u91c7\u6837\u7684\u65f6\u949f: \u6ce2\u7279\u7387\u65f6\u949f: BCLK</p> <p>\u6ce2\u7279\u7387\u65f6\u949f\u7684\u9891\u7387\u9700\u8981\u662f\u6ce2\u7279\u7387\u7684\u6570\u500d (8, 16, 32...)</p> <p>BCLK = baud rate x baud rate divisor (\u6ce2\u7279\u7387\u56e0\u5b50)</p> <p></p> <p>\u4f7f\u7528\u4e86\u8fc7\u91c7\u6837\u7684\u65b9\u6cd5\uff0c\u4e58\u4e86\u6ce2\u7279\u7387\u56e0\u5b50\u7684\u65f6\u949f\u9891\u7387</p> <p>\u6676\u632f\u4ea7\u751f\u65f6\u949f\u9891\u7387 - \u5206\u9891 (divisor) - BCLK (\u5e26\u6709\u8fc7\u91c7\u6837\u56e0\u5b50 baud rate divisor)</p> <p>\u56e0\u6b64\u5206\u9891\u7cfb\u6570 divisor: input clock / (baud rate x baud rate divisor)</p> <p></p> <p>\u8ba1\u6570\u5230\u6ce2\u7279\u7387\u56e0\u5b50\u4e00\u534a\u4e2a\u5468\u671f\u7684\u65f6\u5019\uff0c\u53d1\u73b0\u8fd8\u662f 0 \u5c31\u8ba4\u4e3a\u8fd9\u662f\u8d77\u59cb\u4f4d</p> <p>\u968f\u540e\u6bcf \u6ce2\u7279\u7387\u56e0\u5b50 \u4e2a\u5468\u671f\u91c7\u6837\uff0c\u4fbf\u53ef\u4ee5\u91c7\u6837\u5230\u901a\u4fe1\u8fc7\u7a0b\u4e2d\u4fe1\u53f7\u6700\u7a33\u5b9a\u7684\u65f6\u5019\u7684\u7535\u5e73</p> <p>16550 \u901a\u4fe1\u82af\u7247: \u7f8e\u56fd National Semiconductor Corp</p> <p>\u6ce8\u610f\u5b57\u8282\u5e8f: least significant bit \u4f4e\u6709\u6548\u4f4d\u4f18\u5148\u4f20\u8f93</p> <p></p> <p>16550 baud rate \u6700\u9ad8\u53ef\u4ee5\u8fbe\u5230 1.5M</p> <p>\u9700\u8981\u7f16\u7a0b (\u8ba1\u7b97 / \u67e5\u8868\u83b7\u5f97\u5206\u9891\u7cfb\u6570 divisor) \u4ea7\u751f\u6ce2\u7279\u7387\u65f6\u949f\uff0c\u6ce2\u7279\u7387\u56e0\u5b50\u56fa\u5b9a\u4e3a 16</p> <p>\u63d0\u4f9b\u4e00\u4e2a 16 byte \u7684 FIFO \u7f13\u51b2\uff0c\u4ee5\u9632\u6b62 CPU \u6ca1\u6709\u53ca\u65f6\u8bfb\u5230</p> <p>\u529f\u80fd\u5217\u8868</p> <ul> <li>\u53ef\u7f16\u7a0b\u7684\u8f7d\u8377 / \u6821\u9a8c / \u505c\u6b62\u4f4d\u957f\u5ea6, 1.5-bit \u662f\u6307\u8be5\u4f4d\u7684\u65f6\u957f\u662f\u4e00\u4e2a\u534a</li> <li>\u8c03\u5236\u89e3\u8c03\u5668\u529f\u80fd: \u628a\u6570\u5b57\u4fe1\u53f7\u505a\u8c03\u5236\u53d8\u6210\u6a21\u62df\u4fe1\u53f7\uff0c\u52a0\u8f7d\u5230\u7535\u8bdd\u7ebf\u4e0a\uff0c\u7535\u8bdd\u7f51\u7edc\u666e\u904d\u5b58\u5728\uff0c\u4e14\u7ebf\u7684\u8d28\u91cf\u597d (\u62e8\u53f7\u4e0a\u7f51)</li> <li>\u5168\u53cc\u5de5: \u6709\u72ec\u7acb\u7684\u53d1\u9001\u548c\u63a5\u6536\u5668</li> </ul> <p></p> <p></p> <p>\u5f15\u811a\u89c4\u5b9a:</p> <p></p> <p>\u5730\u5740\u7ebf 0-2 \u4e09\u6839\uff0c\u4f46\u662f\u540e\u9762\u5229\u7528\u590d\u7528\u7684\u65b9\u6cd5\uff0c\u63d0\u4f9b\u4e86 12 \u4e2a\u7aef\u53e3</p> <p>CS \u7247\u9009\u6709\u4e09\u6839\uff0c\u4e3a\u4e86\u517c\u5bb9\u6027\uff0c\u5b9e\u9645\u4e0a\u53ea\u7528\u4e00\u4e2a\u5c31\u884c\uff0c\u5176\u4ed6\u7684\u5fc5\u987b disable \uff08\u6216\u95e8\uff09</p> <p>\u8bfb\u548c\u5199\u90fd\u6709\u4e24\u4e2a\uff0c\u4e5f\u662f\u4e3a\u4e86\u517c\u5bb9\u6027\uff0c\u53e6\u4e00\u4e2a\u5fc5\u987b enable \uff08\u4e0e\u95e8\uff09</p> <p>ADS: \u5730\u5740\u9501\u5b58\u4fe1\u53f7: \u5e76\u4e0d\u662f\u6240\u6709\u7684\u82af\u7247\u90fd\u80fd\u4fdd\u8bc1\u8bfb\u5199\u4fe1\u53f7\u6709\u6548\u7684\u60c5\u51b5\u4e0b\uff0c\u5730\u5740\u4ecd\u7136\u6709\u6548\uff08\u6bd4\u5982\u6469\u6258\u7f57\u62c9\u7684 CPU\uff09, Intel \u7684\u82af\u7247\u6ca1\u6709\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e5f\u4e0d\u9700\u8981. \u53ea\u8981\u7ed9 ADS \u63a5\u4f4e\u5c31\u884c\u4e86</p> <p>XIN, XOUT</p> <p>TXRDY, RXRDY: \u7528\u4e8e DMA</p> <p>INTR: \u4e2d\u65ad</p> <p>SIN, SOUT: \u4e32\u884c\u6570\u636e\u7684\u8fdb\u51fa\uff0c\u5168\u53cc\u5de5</p> <p>BAUDOUT, RCLK: \u4e24\u4e2a\u65f6\u949f\uff0c\u4e00\u4e2a\u662f\u53d1\u9001\u65f6\u949f\uff0c\u4e00\u4e2a\u662f\u63a5\u6536\u65f6\u949f. \u524d\u8005\u662f\u5185\u90e8\u4ea7\u751f\u7684\uff0c\u540e\u8005\u53ef\u4ee5\u4ece\u5916\u90e8\u63a5\u8fc7\u6765</p> <p>\u540e\u9762\u7684\u662f\u7528\u6765\u63a5\u8c03\u5236\u89e3\u8c03\u5668\u7684</p> <p>\u5730\u5740\u7ebf A0, A1, A2 \u53ef\u4ee5\u7d22\u5f15\u516b\u4e2a\u5bc4\u5b58\u5668</p> <p></p> <p>\u4e00\u4e2a\u5730\u5740\u4e24\u4e2a\u7aef\u53e3 \uff08\u8bfb\u548c\u5199\u5bf9\u5e94\u7684\u662f\u4e24\u4e2a\u7aef\u53e3\uff09: \u7aef\u53e3\u590d\u7528\uff0c\u6700\u7ec8\u6709 12 \u4e2a</p> <p></p> <p>scratch \u5bc4\u5b58\u5668\u662f\u4e00\u4e2a\u901a\u7528\u5bc4\u5b58\u5668</p> <p>DLAB \u4e3a 1 \u7684\u65f6\u5019\uff0c000 \u548c 001 \u53ef\u4ee5\u8bbe\u7f6e\u5206\u9891\u7cfb\u6570\uff08\u5206\u522b\u662f\u4f4e\u6709\u6548\u5b57\u8282\u548c\u9ad8\u6709\u6548\u5b57\u8282\uff09</p> <p>16550 11 \u4e2a\u5e38\u7528\u7684\u5bc4\u5b58\u5668\uff08\u53e6\u4e00\u4e2a\u662f scratch)</p> <p></p> <p></p> <p>\u6709\u4e24\u4e2a FIFO \u7f13\u51b2\uff0c\u7531 FIFO Control Register \u63a7\u5236: \u4f7f\u80fd\u4e0e\u6e05\u7a7a</p> <p>16550 \u7684\u7f16\u7a0b</p> <ol> <li>\u521d\u59cb\u5316\uff1a\u8ba1\u7b97\u65f6\u949f\u5206\u9891\u56e0\u5b50\uff0c\u8bbe\u7f6e\u6570\u636e\u5e27\u7684\u683c\u5f0f</li> <li>\u6e05\u7406 FIFO, \u5f00\u59cb\u901a\u4fe1</li> </ol> <p>\u7ebf\u8def\u63a7\u5236\u5bc4\u5b58\u5668\u7684\u683c\u5f0f:</p> <p></p> <p>\u6700\u9ad8\u4f4d\u662f DLAB \u4f4d</p> <p>stick \u6253\u5f00\u65f6\uff0c\u6821\u9a8c\u4f4d\u56fa\u5b9a: \u5982\u679c\u662f\u5947\u6821\u9a8c\u4e3a 1\uff0c\u5982\u679c\u662f\u5076\u6821\u9a8c\u4e3a 0\uff0c\u4e0e\u6709\u6548\u8f7d\u8377\u65e0\u5173</p> <p></p> <p>\u6ce2\u7279\u7387\u8ba1\u7b97:</p> <p></p> <p>\u8fd9\u4e2a\u8ba1\u7b97\u6bcf\u6b21\u7b97\u592a\u9ebb\u70e6\uff0c\u800c\u4e14\u4e0d\u4e00\u5b9a\u6574\u9664\uff0c\u6240\u4ee5\u4e60\u60ef\u662f\u4f7f\u7528\u67e5\u8868:</p> <p></p> <p>\u6e05\u7406 FIFO</p> <p>\u521d\u59cb\u5316\u7684\u5b8c\u6574\u6d41\u7a0b:</p> <p></p> <p></p> <p>\u6ce2\u7279\u7387\u65f6\u949f\u76f4\u63a5\u63a5\u7ed9\u63a5\u6536\u7aef</p> <p></p> <p>\u72b6\u6001\u5bc4\u5b58\u5668:</p> <p></p> <p>OE: Overrun Error: FIFO \u6ea2\u51fa\u4e86</p> <p>PE: \u5947\u5076\u6821\u9a8c\u51fa\u9519</p> <p>FE: Framing Error: \u6bd4\u5982\u68c0\u6d4b\u7ed3\u675f\u4f4d\u957f\u5ea6\u4e0d\u5bf9\uff0c\u8d77\u59cb\u4f4d\u957f\u5ea6\u4e0d\u5bf9</p> <p>TH: \u80fd\u5426\u53d1\u9001\uff0c\u9700\u8981\u8f6e\u8be2\u8fd9\u4e00\u4f4d</p> <p>\u53d1\u9001\u4ee3\u7801:</p> <p></p> <p>\u63a5\u6536\u4ee3\u7801: (\u63a5\u6536\u548c\u53d1\u9001\u65f6\u540c\u4e00\u4e2a\u7aef\u53e3\u53f7\uff0c\u9760\u8bfb\u5199\u4f5c\u5206\u79bb)</p> <p></p> <p>\u5982\u679c\u51fa\u9519\u5c31\u8fd4\u56de '?'</p> <p>AD \u8f6c\u6362 \u6570\u5b57\u4fe1\u53f7\u4e0e\u6a21\u62df\u4fe1\u53f7\u7684\u8f6c\u6362 </p> <p></p> <p>\u6570\u5b57\u4fe1\u53f7\u8f6c\u6362\u5230\u6a21\u62df\u4fe1\u53f7</p> <p>OA: \u8fd0\u7b97\u653e\u5927\u5668</p> <p>\u6709\u4e09\u79cd\u624b\u6bb5:</p> <ul> <li>PWM: \u8109\u51b2\u5bbd\u5ea6\u8c03\u5236</li> <li>\u4e8c\u8fdb\u5236\u5e26\u6743\u503c\u7684\u7535\u963b\u7f51\u7edc Binary weighted resistor</li> <li>R-2R ladder</li> </ul> <p></p> <p>\u4e00\u822c\u7684\u6570\u6a21\u8f6c\u6362\u82af\u7247\u90fd\u662f\u96f6\u9636\u4fdd\u6301\uff0c\u5e76\u4e0d\u662f\u8fde\u7eed\u7684\u7535\u538b\u503c\uff0c\u6240\u4ee5\u770b\u8d77\u6765\u4f1a\u50cf\u4e0b\u56fe\u4e2d\u95f4\u8fd9\u6837:</p> <p></p> <p>\u4f7f\u7528\u7684\u65f6\u5019\u9700\u8981\u7528\u4f4e\u901a\u6ee4\u6ce2\uff0c\u907f\u514d\u8c10\u6ce2\u6210\u5206\u5f71\u54cd</p> <p>\u4e8c\u8fdb\u5236\u6743\u503c\u7535\u963b\u7f51\u7edc: </p> <p>\u8fd0\u7b97\u653e\u5927\u5668 - \u8fd0\u653e \u4e2d\u7684\u53cd\u9988\u7535\u963b Rf \u505a\u6210 R/2\uff0c\u5c31\u80fd\u7ea6\u6389\u7535\u963b\u7f51\u7edc\u4e2d\u7684\u7535\u963b\u9879 R, \u6d88\u6389\u4e4b\u540e\u5c31\u6709:</p> <p></p> <p>R-2R \u68af\u5f62\u7535\u8def</p> <p>\u521a\u624d\u90a3\u4e2a\u65b9\u6cd5\uff0c\u56e0\u4e3a\u7535\u963b\u503c\u4e24\u500d\u4e24\u500d\u627e\u4e0d\u5230\u901a\u7528\u7684\uff0c\u56e0\u6b64\u6bd4\u8f83\u96be\u5b9e\u73b0</p> <p>R-2R \u53ea\u8981\u6c42\u4e24\u4e2a\u963b\u503c\u7684\u7535\u963b R \u548c 2R \u5c31\u80fd\u5b9e\u73b0</p> <p></p> <p></p> <p>\u4e24\u4e2a\u5bb9\u6613\u6df7\u6dc6\u7684\u6982\u5ff5: \u53c2\u8003\u7535\u538b V_ref \u548c\u6ee1\u91cf\u7a0b\u8f93\u51fa\u7535\u538b V_fs (Full Scale)</p> <p>\u6ee1\u91cf\u7a0b\u8f93\u51fa\u7535\u538b\u8fbe\u4e0d\u5230 V_ref, V_out \u6700\u5927\u6bd4 V_ref \u5dee 1/2^n\uff0c\u5dee\u4e00\u4e2a\u6700\u4f4e\u6709\u6548\u4f4d\u7684\u6570\u503c</p> <p>\u6570\u6a21\u8f6c\u6362\u82af\u7247\u7684\u4e3b\u8981\u53c2\u6570:</p> <ul> <li>Resolution \u8f6c\u6362\u7cbe\u5ea6: n = 3 \u4f4d\u6570\u5b57\u91cf\uff0c\u6709 2^n=8 \u4e2a\u95f4\u9694</li> </ul> <p></p> <p>Resolution = V_ref / 2^n = V_fs / (2^n - 1)</p> <ul> <li>Linearity</li> <li>Settling Time</li> </ul> <p>Linearity \u7ebf\u6027\u5ea6</p> <ul> <li>\u5b9e\u9645\u8fdb\u884c\u8f6c\u6362\u8f93\u51fa\u65f6\uff0c\u4f1a\u7531\u4e8e\u79cd\u79cd\u539f\u56e0\u4f1a\u504f\u79bb\u7406\u60f3\u7684\u76f4\u7ebf</li> <li>\u7535\u963b\u53d1\u751f\u4e86\u53d8\u5316</li> <li>\u8fd0\u653e\u96f6\u70b9\u53d1\u751f\u4e86\u504f\u79fb</li> <li>V_ref \u53d1\u751f\u4e86\u53d8\u5316</li> </ul> <p></p> <p>Settling Time \u5efa\u7acb\u65f6\u95f4: \u8861\u91cf\u6027\u80fd</p> <p></p> <p>\u7a33\u5b9a\u5230 \u7406\u60f3\u7535\u538b +- 1/2 \u7684\u6700\u5c0f\u6570\u5b57\u91cf\u7535\u538b \u9700\u8981\u7684\u65f6\u95f4\uff0c\u901a\u8fc7\u56db\u820d\u4e94\u5165\u53ef\u4ee5\u5f52\u5230\u8fd9\u4e2a\u503c</p> <p>\u8ba1\u7b97\u4f8b\u9898: \u6709\u4f8b\u9898\u90fd\u662f\u8981\u70b9</p> <p></p> <p>P1: \u5148\u7b97\u4e00\u4e2a\u95f4\u9694\u662f\u591a\u5c11: \u6700\u9ad8 15V/(2^4-1) = 1V, 0110 (6) \u6709 6 \u4e2a\u95f4\u9694\uff0c\u6240\u4ee5\u662f 6V</p> <p>P2: Step size \u5c31\u662f resolution</p> <p>DAC0830 \u6570\u6a21\u8f6c\u6362\u5668</p> <p></p> <p>\u5de5\u4f5c\u65b9\u5f0f: \u76f4\u901a\uff0c\u4e00\u7ea7\u7f13\u51b2\uff0c\u4e8c\u7ea7\u7f13\u51b2</p> <p>\u5f15\u811a:</p> <p></p> <p>D0-D7: \u6570\u5b57\u91cf\u8f93\u5165</p> <p>IOUT1, IOUT2: \u8f93\u51fa\u662f\u7535\u6d41\uff0c\u9700\u8981\u901a\u8fc7\u53cd\u9988\u7535\u963b\u8f6c\u6362\u6210\u7535\u538b\uff0c\u63a5\u5230\u5916\u63a5\u8fd0\u653e\u4e0a</p> <p>AGND, DGND \u5206\u522b\u662f\u6a21\u62df\u548c\u6570\u5b57\u4fe1\u53f7\u7684\u63a5\u5730\u4fe1\u53f7\uff0c\u907f\u514d\u5e72\u6270\uff0c\u6570\u5b57\u91cf\u8c10\u6ce2\u6210\u5206\u5927\uff0c\u4f1a\u51b2\u51fb\u6a21\u62df\u91cf</p> <p>CS: \u4e00\u7ea7\u7f13\u51b2\u7684\u4f7f\u80fd</p> <p>WR1, WR2: \u4e24\u8def\u7f13\u51b2\uff0c\u6bcf\u8def\u7f13\u51b2\u90fd\u6709\u5199\u4fe1\u53f7</p> <p>ILE: \u8f93\u5165\u7f13\u51b2\u4f7f\u80fd\u4fe1\u53f7</p> <p>XFER: \u4f20\u8f93\u63a7\u5236\u4fe1\u53f7\uff0cDA \u8f6c\u6362\u63a7\u5236\u5668\u7684\u63a7\u5236\u4fe1\u53f7</p> <p>RFB: \u53cd\u9988\u7535\u963b\uff0c\u968f\u7740\u82af\u7247\u5df2\u7ecf\u914d\u597d\u4e86\uff0c\u4f46\u662f\u662f\u5916\u63a5\u7684</p> <p>\u8ba1\u7b97\u7535\u538b\u7684\u65f6\u5019\uff0cR_fb \u5e94\u8be5\u80fd\u88ab\u7ea6\u6389</p> <p></p> <p>IOUT1+IOUT2 \u662f\u5b9a\u503c</p> <p>R_fb \u7684\u63a5\u6cd5:</p> <p></p> <p>\u4e24\u7ea7\u7f13\u51b2:</p> <p>latch: \u6ca1\u6709\u65f6\u949f\u4fe1\u53f7\uff0c\u8f93\u51fa\u8ddf\u7740\u8f93\u5165\u8d70</p> <p>transparent latch: \u6709\u4e00\u4e2a\u63a7\u5236\u4fe1\u53f7\uff0c\u63a7\u5236\u4fe1\u53f7\u4e3a 1 \u65f6\u900f\u660e\uff0c\u8f93\u51fa\u8ddf\u7740\u8f93\u5165\u8d70\uff0c\u63a7\u5236\u4fe1\u53f7\u4e3a 0 \u65f6\u9501\u5b58\uff0c\u4e0d\u900f\u660e</p> <p></p> <p>\u7b2c\u4e00\u8def: \u8f93\u5165\u5bc4\u5b58\u5668</p> <ul> <li>CS, WR1, ILE \u6765\u63a7\u5236\uff0c\u540c\u65f6\u4f7f\u80fd\u65f6\uff0c\u76f4\u901a\uff08\u900f\u660e\uff09\uff0c\u5426\u5219\u6570\u636e\u88ab\u9501\u5b58\uff08\u4e0d\u900f\u660e\uff09</li> </ul> <p>\u7b2c\u4e8c\u8def: DA \u8f6c\u6362\u5bc4\u5b58\u5668</p> <ul> <li>WR2, XFER \u63a7\u5236\uff0c\u90fd\u4f7f\u80fd\uff08\u4f4e\u7535\u5e73\uff09\u65f6\uff0c\u76f4\u901a</li> </ul> <p>\u4e09\u79cd\u5de5\u4f5c\u6a21\u5f0f: \u5168\u90e8\u901a-\u76f4\u901a\uff0c\u901a\u4e00\u4e2a-\u5355\u7f13\u51b2\uff0c\u4e24\u4e2a\u90fd\u4e0d\u901a-\u53cc\u7f13\u51b2</p> <p></p> <p>\u6700\u7ec8\u63a5\u5230 DA \u8f6c\u6362</p> <p>\u82af\u7247\u4f7f\u7528\u65f6\u63a5\u6cd5:</p> <p></p> <p>\u5355\u7f13\u51b2\u6a21\u5f0f\u4f8b\u5b50</p> <p></p> <p>CS, WR1, WR2 \u5168\u90e8\u4f7f\u80fd\uff0c\u53ea\u6709 XFER \u53d7\u63a7 \u2014\u2014 \u4e00\u7ea7\u7f13\u51b2\u76f4\u901a\uff0c\u7b2c\u4e8c\u7ea7\u53d7\u63a7</p> <p>\u63a7\u5236\u7535\u673a\u8fd0\u8f6c:</p> <p>\u7a33\u5b9a\u8fd0\u8f6c: \u7b2c\u4e8c\u7ea7\u9501\u5b58</p> <p>\u8c03\u901f: \u7b2c\u4e8c\u7ea7\u76f4\u901a\uff0c\u8ba9\u8f93\u5165\u7684\u6570\u5b57\u91cf\u8fdb\u6765\uff0c\u7136\u540e\u518d\u9501\u5b58</p> <p>\u53cc\u7f13\u51b2\u7684\u610f\u4e49:</p> <p></p> <p>\u63a5\u5165\u591a\u4e2a DAC \u7684\u65f6\u5019\uff0c\u5e0c\u671b\u4e24\u4e2a\u7535\u673a\u8f6c\u901f\u662f\u540c\u65f6\u53d8\u6362\u7684\uff0c\u800c\u4e0d\u80fd\u6709\u65f6\u95f4\u5dee</p> <p>\u5206\u4e24\u9636\u6bb5\u6765\u63a7\u5236\uff0c\u7b2c\u4e00\u9636\u6bb5\u5206\u522b\u628a\u8f6c\u901f\u5199\u5165\u5230\u4e24\u4e2a DAC \u7684\u7b2c\u4e00\u7ea7</p> <p>\u7b2c\u4e8c\u9636\u6bb5\u540c\u65f6\u6253\u5f00 DAC \u7684\u7b2c\u4e8c\u7ea7\uff0c\u4e8e\u662f\u4ed6\u4eec\u8f6c\u901f\u540c\u65f6\u8f6c\u53d8</p> <p></p> <p>\u5206\u65f6\u5199\u5165\uff0c\u540c\u65f6\u6253\u5f00</p> <p></p> <p>\u671f\u672b\u590d\u4e60:</p> <p>\u586b\u7a7a\u9898\uff0c\u5355\u9009\u9898\uff0c\u8ba1\u7b97\uff0c\u4ee3\u7801\u586b\u7a7a\uff0c\u7b80\u7b54</p> <p>\u4ee3\u7801\u586b\u7a7a \u8003\u63a5\u53e3\u90e8\u5206</p> <p>IEEE 754 \u4f1a\u8003\uff0c\u8d1f\u6570\uff0c\u7279\u6b8a\u60c5\u51b5</p> <p>\u5b9e\u6a21\u5f0f\uff0c\u4fdd\u62a4\u6a21\u5f0f\uff0c64\u4f4d\u5185\u5b58\u5bfb\u5740\u6a21\u5f0f\uff0c\u90fd\u6709\u8003\u5bdf</p> <p>101012, 29912</p> <p>\u5bfb\u5740</p> <p>\u4f2a\u6307\u4ee4</p> <p>\u6307\u4ee4\u524d\u7f00 REX</p> <ul> <li>64\u4f4d\u6a21\u5f0f\u64cd\u4f5c\u6570\u662f64\u4f4d</li> <li>\u5bc4\u5b58\u5668\u51fa\u73b0\u5f15\u7528\u540e\u9762\u516b\u4e2a\u5bc4\u5b58\u5668\u7684 r8-r15</li> </ul> <p>enter \u6307\u4ee4</p> <p>\u524d\u9762\u7684\u82af\u7247\u4e0e\u7f16\u7a0b\u76f8\u5173\uff0c\u6700\u540eDAC0830\u8003\u6982\u5ff5</p>"},{"location":"courses/24fall/computer-architecture/","title":"\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784","text":"<p>\u8bfe\u7a0b\u7b80\u4ecb</p> <p>\u5e38\u745e \u8001\u5e08\u73ed\uff0c\u8001\u5e08\u4f1a\u5f3a\u8c03\u4f53\u7cfb\u7ed3\u6784\u662f\u4e00\u95e8\u8f6f\u786c\u4ef6\u8d2f\u901a\u7684\u8bfe\u7a0b. \u8bfe\u7a0b\u5185\u5bb9\u4e00\u56fe\u4ee5\u853d\u4e4b:</p> <p></p> <p>\u8bfe\u7a0b\u8003\u6838</p> <p>\u5206\u6570\u6784\u6210:</p> <ol> <li>40% \u671f\u672b\u8003\u8bd5</li> <li>60% \u5e73\u65f6\u6210\u7ee9 = 6' \u4f5c\u4e1a + 6' \u8bfe\u5802\u5c55\u793a + 48' \u5b9e\u9a8c</li> </ol> <p>\u671f\u672b\u8003\u8bd5\u8303\u56f4: (2024-2025 \u79cb\u51ac)</p> <p></p> \u8003\u540e\u603b\u7ed3 <p>\u8003\u8bd5\u5185\u5bb9: 2024-2025 \u79cb\u51ac \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784 \u56de\u5fc6\u5377</p> <p>\u867d\u7136\u8fd9\u6b21\u8001\u5e08\u8bf4\u4f1a\u907f\u5f00\u5386\u5e74\u5377\u51fa\u9898\uff0c\u4f46\u662f\u4f55\u6c34\u5175\u8001\u5e08\u653e\u51fa\u7684 22 \u5e74\u5386\u5e74\u5377 hit rate \u8fd8\u633a\u9ad8\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u8981\u597d\u597d\u590d\u4e60\u5386\u5e74\u5377. </p> <p>\u672c\u6765\u4ee5\u4e3a\u4f1a\u8003\u5f88\u96be\u7684 Tomasulo Hardware-Speculation, \u7ed3\u679c\u662f Scoreboard, \u6307\u4ee4\u597d\u50cf\u4e5f\u53ea\u6709 RAW Hazard, \u611f\u8c22\u8001\u5e08\u4eec\u7684\u4ec1\u6148. (\u867d\u7136\u9009\u62e9\u9898\u4e71\u6740)</p> <p>\u671f\u672b\u8003\u8bd5\u91cc\u6709\u4e00\u4e9b\u8001\u5e08\u6ca1\u8bb2\u8fc7 (\u6216\u8005\u6211\u5370\u8c61\u4e0d\u6df1\u7684) \u77e5\u8bc6\u70b9, \u9700\u8981\u989d\u5916\u5b66\u4e60\u4e00\u4e0b, \u770b \u201c\u4f53\u7cfb\u7ed3\u6784\u6025\u6025\u6025\u201d \u91cc\u7684\u4ea4\u6d41\u53ef\u4ee5\u5728\u4e0d\u540c\u6559\u5b66\u73ed\u4e4b\u95f4\u4e92\u901a\u6709\u65e0\uff0c\u5176\u4ed6\u8001\u5e08\u8bb2\u8fc7\u7684\u77e5\u8bc6\u70b9\u53ef\u80fd\u662f\u4f60\u7684\u76f2\u533a.</p>"},{"location":"courses/24fall/computer-architecture/chapter-1/","title":"I - \u8ba1\u7b97\u673a\u8bbe\u8ba1\u57fa\u7840","text":"<p>\u8003\u67e5\u5185\u5bb9</p> <ol> <li>8 Great Idea</li> <li>\u5e38\u7528\u516c\u5f0f: CPU \u6027\u80fd, Amdahl \u5b9a\u5f8b, Cache AMAT, \u8f6f\u6d41\u6c34\u6027\u80fd\u5206\u6790\u7b49\u7b49</li> </ol>"},{"location":"courses/24fall/computer-architecture/chapter-2/","title":"II - \u6d41\u6c34\u7ebf","text":""},{"location":"courses/24fall/computer-architecture/chapter-3/","title":"III - \u5185\u5b58\u5c42\u6b21\u7ed3\u6784","text":""},{"location":"courses/24fall/computer-architecture/chapter-4/","title":"IV - \u6307\u4ee4\u5e76\u884c (ILP)","text":""},{"location":"courses/24fall/computer-architecture/chapter-5/","title":"V - \u7ebf\u7a0b\u5e76\u884c (TLP)","text":""},{"location":"courses/24fall/computer-network/","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":"<p>\u8bfe\u7a0b\u7b80\u4ecb</p> <p>\u6263\u6839\u8001\u5e08\u73ed, \u8001\u5e08 24 \u5e74 11 \u6708\u6b63\u5f0f\u9000\u4f11, \u6211\u4eec\u5e94\u8be5\u662f\u4ed6\u7684\u6700\u540e\u4e00\u5c4a. \u8001\u5e08\u786e\u5b9e\u4e0a\u5e74\u7eaa\u4e86, \u8bb2\u8bfe\u58f0\u97f3\u4e0d\u662f\u5f88\u6e05\u695a, \u4e5f\u975e\u5e38\u7684\u201c\u6709\u4e2a\u6027\u201d. \u8ba1\u7f51\u6574\u4e2a\u8bfe\u7a0b\u7ec4\u7684\u8001\u5e08\u90fd\u662f\u516b\u4ed9\u8fc7\u6d77, \u5404\u663e\u795e\u901a, \u8fd9\u95e8\u8bfe\u7684\u5b9e\u9a8c\u548c\u8003\u6838\u90fd\u4e00\u8a00\u96be\u5c3d.</p> <p>\u8bfe\u7a0b\u8003\u6838</p> <p>\u6210\u7ee9\u5360\u6bd4: \u5e73\u65f6 (50%) + \u671f\u672b (50%)</p> <p>\u5e73\u65f6\u6709 7 \u6b21\u4f5c\u4e1a\u548c 6 \u4e2a\u5b9e\u9a8c, \u8001\u5e08\u4f1a\u5728\u53d1\u5e03\u4f5c\u4e1a\u65f6\u628a\u7b54\u6848\u4e5f\u516c\u5e03\u51fa\u6765\uff0c\u5b9e\u9a8c\u4e5f\u662f\u7cbe\u7b80\u4e86\u4e00\u4e9b\u7684. \u8001\u5e08\u7528\u90ae\u4ef6\u4ea4\u4f5c\u4e1a\uff0cDDL \u76f8\u5bf9\u6bd4\u8f83\u5bbd\u677e\uff0c\u8fd9\u70b9\u8fd8\u662f\u8981\u611f\u8c22\u8001\u5e08\uff0c\u5728\u8fd9\u4e2a\u5730\u72f1\u96be\u5ea6\u7684\u5b66\u671f\u6ca1\u6709\u7ee7\u7eed\u4e0a\u5f3a\u5ea6.</p> \u8003\u540e\u611f\u60f3 <p>\u70b9\u51fb\u8df3\u8f6c \u67fb\u8001\u5e08 \u67e5\u770b\u5927\u5bb6\u5bf9\u8003\u8bd5\u7684\u8bc4\u4ef7.</p> <p>\u597d\u5728\u8fd9\u95e8\u8bfe\u671f\u672b\u5468\u5b89\u6392\u4e86 3 \u4e2a\u6574\u5929\u7684\u65f6\u95f4\u53ef\u4ee5\u590d\u4e60\uff0c\u6211\u5237\u4e86\u6574\u672c\u8ba1\u7f51\u738b\u9053\u548c lkj 100 \u9898, \u8fd8\u770b\u4e86\u4e00\u4e9b\u5386\u5e74\u5377. \u53ef\u60dc\u8fd9\u6b21\u8003\u4e86\u597d\u591a\u8ba1\u7b97\u9898, \u8fd8\u6709\u738b\u9053\u6ca1\u8986\u76d6\u7684\u6982\u5ff5\u548c\u77e5\u8bc6\u70b9, \u4ee5\u53ca\u8003\u524d 3 \u5c0f\u65f6\u624d\u63d0\u793a\u7684\u5b9e\u9a8c\u9898, \u6709\u70b9\u96be\u53d7.</p> <p>\u8fd9\u795e\u4ed9\u8bfe\u7a0b, \u770b 2003 \u5e74\u7684\u5386\u5e74\u5377, \u8003\u9898\u5185\u5bb9\u5c45\u7136\u548c\u6211\u4eec\u73b0\u5728\u7684\u6ca1\u6709\u4efb\u4f55\u533a\u522b. \u8ba1\u7b97\u673a\u7f51\u7edc\u6280\u672f\u65e5\u65b0\u6708\u5f02, \u4f46\u662f\u8003\u8bd5\u9898\u76ee\u3001\u5b9e\u9a8c\u5185\u5bb9\u5374\u662f\u5386\u53f2\u60a0\u4e45, \u53ea\u80fd\u8bf4\u8bfe\u7a0b\u7ec4\u518d\u8fd9\u4e48\u4e0d\u601d\u8fdb\u53d6, \u5c31\u8981\u88ab\u65f6\u4ee3\u6dd8\u6c70\u4e86.</p>"},{"location":"courses/24fall/operating-system/","title":"\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u8bfe\u7a0b\u7b80\u4ecb</p> <p>\u6211\u4e0a\u7684\u662f\u300a\u64cd\u4f5c\u7cfb\u7edf\u539f\u7406\u4e0e\u5b9e\u8df5\u300b\u7533\u6587\u535a \u8001\u5e08\u73ed.</p> <p>\u6211\u8ba4\u4e3a\u65e0\u8bba\u662f\u9009\u8bfe\uff0c\u8fd8\u662f\u667a\u4e91\u8865\u5929, \u7533\u8001\u5e08\u73ed\u90fd\u662f\u6700\u4f73\u9009\u62e9. \u8001\u5e08\u7814\u7a76\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838\u591a\u5e74, \u800c\u4e14\u6709\u5de5\u7a0b\u7ecf\u5386, slides \u548c\u5b9e\u9a8c\u7ecf\u8fc7\u591a\u5c4a\u524d\u8f88\u4eec\u7684\u6253\u78e8, \u5df2\u7ecf\u6bd4\u8f83\u6e05\u6670\u548c\u5b8c\u5584\u4e86.</p> <p>\u8bfe\u7a0b\u8003\u6838</p> <p>\u603b\u8bc4: 10 (\u51fa\u52e4) + 40 (Lab) + 50 (\u671f\u672b) = 100</p> <p>\u671f\u672b\u8003\u70b9 (2024-2025 \u79cb\u51ac): - \u5355\u9009: 40 x 1.5=60</p> <ul> <li> <p>\u586b\u7a7a 10x1</p> </li> <li> <p>\u5927\u9898 30: Synchronization, Scheduling, \u5185\u5b58</p> </li> </ul> <p>\u56de\u5fc6\u5377\u548c\u8d44\u6599\u5408\u96c6\u6307\u8def: 2024-2025\u79cb\u51ac \u64cd\u4f5c\u7cfb\u7edf \u671f\u672b\u56de\u5fc6\u5377</p>"},{"location":"courses/24fall/operating-system/note/","title":"\u7b14\u8bb0","text":""},{"location":"courses/24fall/operating-system/note/#memory","title":"Memory","text":"<ol> <li>\u5b58\u50a8 0-1 bit \u7684\u5730\u65b9, 8 bit \u6784\u6210 1 byte, a byte's meaning depends on how you interpret it.</li> <li>\u6bcf\u4e2a Byte \u6709\u81ea\u5df1\u7684\u5730\u5740</li> </ol>"},{"location":"courses/24fall/operating-system/note/#cpu","title":"CPU","text":"<p>Register, ALU, Control Unit...</p>"},{"location":"courses/24fall/operating-system/note/#dma---direct-memory-access","title":"DMA - Direct Memory Access","text":""},{"location":"courses/24fall/operating-system/note/#what-is-an-os","title":"What is an OS","text":"<p>OS:</p> <ul> <li>old school definition: resource abstractor and resource allocator.</li> </ul> <p>Boot process:</p> <ul> <li>Boot loader</li> <li>init process</li> <li>wait for an event</li> </ul> <p>Multi-programming:</p> <ul> <li>Single program</li> <li>Batch </li> <li>time-sharing</li> </ul> <p>Kernel size: lean &amp; mean: nothing more &amp; single-minded</p> <p>Syscall Instruction</p> <ul> <li>x86: int 80h</li> <li>x86-64: syscall</li> <li>ARM 64: svc</li> <li>RISC-V 64: ecall</li> </ul> <p>Syscall Number: syscall table's index</p> <p>Linkers and Loaders:</p> <ul> <li>ELF \u7684\u7ed3\u6784</li> </ul> <p>Static Link: \u53ef\u79fb\u690d\u6027\u5f3a\uff0c\u4e8c\u8fdb\u5236\u5927</p> <p>Dynamic Link: \u53ef\u79fb\u690d\u6027\u5dee\uff0c\u4e8c\u8fdb\u5236\u5c0f</p> <p>interpreter: ld-linux.so</p> <p>Who setups ELF mapping: execve</p> <p>start_kernel_thread_common: \u9759\u6001\u94fe\u63a5\u5c06 entry point address \u4e5f\u5c31\u662f PC \u8d4b\u503c\u7ed9 pt_regs \u91cc\u7684 PC\uff0c\u52a8\u6001\u94fe\u63a5\u7528\u7684\u5c31\u662f ld.so \u7684</p> <p></p> <p></p> <p>Monolithic: UNIX</p> <p>Microkernel: Mach</p>"},{"location":"courses/24fall/operating-system/note/#process","title":"Process","text":""},{"location":"courses/24fall/operating-system/note/#concept","title":"Concept","text":"<p>Process: A unit of resource allocation and protection.</p> <p>\u8fdb\u7a0b\uff1a\u8d44\u6e90\u7684\u7ec4\u7ec7\u548c\u4fdd\u62a4\u7684\u5355\u5143\uff0c\u7ebf\u7a0b\uff1a\u6267\u884c\u7684\u5355\u5143</p> <p>program becomes a process when it's loaded into memory</p> <p>Process: code + data section (from ELF) + program counter + content of registers + stack + heap</p> <p>Runtime Stack: Stack Frame \u6808\u5e27 \u968f\u51fd\u6570\u8c03\u7528\u4e0d\u65ad\u53d8\u5316</p> <p>Invented by Dijkstra</p> <p>ARM <code>stp x29, x30, [sp, #-64]!</code> x29: frame pointer, x30: link register / return address, sp = sp - 64 <code>mov x29, sp</code> update frame pointer</p> <p>Stack \u548c Heap \u4e2d\u95f4\u7684\u7a7a\u95f4\u6709\u9650 \u6bd4\u5982\u65e0\u9650\u9012\u5f52\u5bfc\u81f4 stack overflow</p>"},{"location":"courses/24fall/operating-system/note/#control-block-pcb","title":"Control Block (PCB)","text":"<p>PCB: Process metadata \u5b58\u50a8\u8fdb\u7a0b\u7684\u5143\u6570\u636e</p> <p>process state, process number, process counter, memory limits, list of open files...</p> <p>Linux \u4e2d\u7528 <code>task_struct</code> \u5b58\u50a8</p> <p>pid: Process Identifier</p> <p>State: \u793a\u610f\u56fe\u5fc5\u8003  - New: \u8fdb\u7a0b\u88ab\u521b\u5efa     - Setup from scratch: \u7b2c\u4e00\u4e2a\u8fdb\u7a0b     - Fork: \u7236\u8fdb\u7a0b -&gt; \u5b50\u8fdb\u7a0b\uff0c\u5b8c\u6574\u5730\u6284\u8fc7\u6765\uff0c\u4ec5\u6709 pid \u4e0d\u540c     <code>ps xao pid,ppid,comm</code>     \u6784\u6210\u6811\u5f62\u7ed3\u6784 Process Tree     \u5b50\u8fdb\u7a0b\u6302\u6389\u53ef\u4ee5\u7531\u7236\u8fdb\u7a0b\u91cd\u542f\uff0csystemd \u6302\u4e86\uff0c\u6574\u4e2a\u7528\u6237\u6001\u5c31\u6ca1\u4e86\uff0c\u5185\u6838\u4f1a\u7269\u7406\u91cd\u542f</p> <pre><code>idle(0) - start_kernel(), systemd/init(1), kthreadd(2)\nkernel thread daemon \u8d77\u5185\u6838\u6001\u8fdb\u7a0b\nsystemd \u8d77\u7528\u6237\u6001\u8fdb\u7a0b\n\nidle \u539f\u672c\u7684\u8fdb\u7a0b\u5728 start_kernel \u4e4b\u540e fork \u5230\u6bcf\u4e2a cpu \u6838\u5fc3\u4e0a\uff0c\u8d77 systemd \u4e4b\u540e\uff0c\u9000\u5316\u4e3a idle\nCPU \u6ca1\u6709\u4efb\u4f55\u4efb\u52a1\u53ef\u4ee5\u8fd0\u884c\u65f6\u5c31\u4f1a\u53bb\u8fd0\u884c idle. idle \u53ef\u4ee5\u628a cpu \u6838\u5fc3 shutdown \u7701\u7535\n</code></pre> <p><code>fork()</code> System Call   \u4e0d\u63a5\u53d7\u53c2\u6570\uff0c\u5b8c\u6574\u62f7\u8d1d\u7236\u8fdb\u7a0b\uff0c\u7136\u540e\u7ed9\u7236\u8fdb\u7a0b\u8fd4\u56de\u5b50\u8fdb\u7a0b\u7684 pid\uff0c\u7ed9\u5b50\u8fdb\u7a0b\u8fd4\u56de 0, \u5931\u8d25\u8fd4\u56de -1   <code>fork()</code> \u662f syscall, \u8fd4\u56de\u4e4b\u540e PC \u6307\u5411\u4e0b\u4e00\u884c\u6c47\u7f16\uff0c\u4e8e\u662f\u7236\u8fdb\u7a0b\u548c\u5b50\u8fdb\u7a0b\u90fd\u4ece\u8fd9\u91cc\u7ee7\u7eed\u8fd0\u884c</p> <pre><code>```c\npid1 = fork();\nprintf(\"hello\\n\"); // 2 \u6b21\npid2 = fork();\nprintf(\"hello\\n\"); // + 4 \u6b21 = 6 \u6b21\n```\n</code></pre> <p><code>exec()</code> System Call   loadelf, \u628a\u539f\u672c\u7a0b\u5e8f\u540e\u9762\u7684\u4ee3\u7801\u5168\u90fd\u62b9\u6389\u4e86\uff0c\u6240\u4ee5\u4e0d fork \u76f4\u63a5 exec\uff0c\u540e\u9762\u7684\u4ee3\u7801\u90fd\u4e0d\u4f1a\u6267\u884c   \u5982\u679c fork \u4e4b\u540e\u7236\u8fdb\u7a0b exec \u53d8\u6210\u522b\u7684\u7a0b\u5e8f\u4e86\uff0c\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u4e0d\u4f1a\u88ab\u56de\u6536\uff0c\u53d8\u6210 orphan</p> <p>fork \u7684\u5b89\u5168\u6027\u95ee\u9898\uff0c\u5982\u679c\u4e0d\u5206 systemd \u548c kthreadd, \u7528\u6237\u6001\u8fdb\u7a0b\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684 memory layout \u63a8\u6d4b\u5185\u6838\u7684\u5185\u5b58\u6620\u5c04</p> <ul> <li>Terminate: \u5b50\u8fdb\u7a0b <code>exit()</code>, \u7236\u8fdb\u7a0b\u53ef\u4ee5\u7528 <code>wait()</code> <code>waitpid()</code> \u7b49\u5f85\u5b50\u8fdb\u7a0b\u5b8c\u6210     \u5b50\u8fdb\u7a0b\u7ed3\u675f\u4f1a\u53d1\u9001 SIGCHLD \u4fe1\u53f7    \u5f3a\u884c\u7ed3\u675f\uff0c\u53ef\u4ee5\u901a\u8fc7\u53d1\u9001 Signal \u5b8c\u6210    Ctrl+C: SIGINT, \u8fd8\u53ef\u4ee5\u53d1\u9001 SIGBUS (segmentation fault \u65f6), SIGKILL    signal \u53ef\u4ee5\u81ea\u5b9a\u4e49 handler, \u9664\u4e86 SIGKILL</li> </ul> <p>zombie: \u4e0d\u5360\u7528 CPU \u4f46\u8fd8\u5360\u7528\u5185\u5b58\u7684\u8fdb\u7a0b. Remain undead</p> <p>orphan: \u7236\u8fdb\u7a0b\u6302\u6389\uff0c\u5b50\u8fdb\u7a0b\u53d8\u6210 orphan. Adopt by systemd / init on Linux, \u539f\u6765\u662f pid=1\uff0c\u73b0\u5728\u53d8\u6210\u5c0f\u53f7\u4e86     orphan will never becomes zombie, systemd can handle it properly     \u56e0\u6b64\u53ef\u4ee5\u5b9e\u73b0\u6c38\u8fdc\u4e0d\u4f1a\u53d8\u6210 zombie \u7684\u8fdb\u7a0b, fork \u4e24\u6b21, kill \u513f\u5b50\uff0c\u5b59\u5b50\u5c31\u4f1a\u88ab\u9886\u517b     task_struct, mm_struct \u7b49\u7b49\u90fd\u53ef\u4ee5\u628a list_head \u4f5c\u4e3a\u4e00\u4e2a\u6210\u5458\uff0c\u4ece\u800c\u6210\u4e3a\u53cc\u5411\u94fe\u8868</p> <ul> <li>Ready, Running, Waiting:</li> </ul> <p>waiting queue \u7684\u6570\u91cf = waiting target \u7684\u6570\u91cf</p> <p>Context: \u5bc4\u5b58\u5668   Context Switch: \u56e0\u4e3a CPU \u7684\u5bc4\u5b58\u5668\u53ea\u6709\u4e00\u4efd\uff0c\u8981\u4e0d\u7136\u539f\u6765\u7684\u8fdb\u7a0b\u56de\u6765\u7684\u65f6\u5019\u90fd\u4e0d\u77e5\u9053\u81ea\u5df1\u8dd1\u5230\u54ea\u4e86   context switch \u7684\u65f6\u95f4\u662f pure overhead, \u8d8a\u77ed\u8d8a\u597d</p> <p>kernel space context switch</p> <p>user space context switch    P0 User - \u65f6\u949f\u4e2d\u65ad - P0 Kernel | context switch | P1 Kernel - P1 User    kernel_entry \u7684\u65f6\u5019\uff0c\u5c06 P0 \u7684\u5bc4\u5b58\u5668\u5b58\u5728\u4e86\u5185\u6838\u7684\u6808\u4e0a\uff0c\u5177\u4f53\u7684\u4f4d\u7f6e\u53eb pt_regs (per thread regs)    kernel_exit \u7684\u65f6\u5019\uff0c\u5c06 P1 \u7684\u5bc4\u5b58\u5668\u6062\u590d</p> <p>fork() \u7684\u8fd4\u56de\u503c\u5728\u54ea\u91cc\u5199\u7684   - \u5bf9\u4e8e\u7236\u8fdb\u7a0b\uff0ckernel_entry \u8fdb\u5165\u5185\u6838\u540e\uff0cpt_regs-&gt;regs[0] = pid   - \u5bf9\u4e8e\u5b50\u8fdb\u7a0b\uff0ccopy_thread \u7684\u65f6\u5019\uff0cchildregs(\u4e5f\u5c31\u662f pt_regs)-&gt;regs[0] = 0     \u4e3a\u4ec0\u4e48 fork() \u80fd\u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u56e0\u4e3a fork \u4e4b\u540e\u6709\u4e24\u4e2a user context, \u53ef\u4ee5\u4fee\u6539</p> <p>fork syscall: kernel_clone() -&gt; copy_process() -&gt; copy_mm(), copy_thread \u5404\u79cd copy</p>"},{"location":"courses/24fall/operating-system/note/#process-schedule","title":"Process Schedule","text":"<p>Scheduling: determine which process should run and for how long</p> <p>\u51b3\u5b9a\u4e86\u7cfb\u7edf\u7684\u541e\u5410\u91cf\u548c\u53cd\u5e94\u901f\u5ea6</p> <p>Pre'emptive Scheduling: \u62a2\u5360\u5f0f\u8c03\u5ea6</p> <p>Non-preemptive Scheduling: \u975e\u62a2\u5360\u5f0f\u8c03\u5ea6 \u8dd1\u5230\u4e0d\u60f3\u8dd1\u4e3a\u6b62\uff0c\u4e0d\u4f1a\u51fa\u73b0 Running \u5230 Ready \u7684\u60c5\u51b5</p> <p>Criteria and Objectives:</p> <ul> <li>Max CPU Utilization</li> <li>Max Throughput</li> <li>Min Turnaround Time</li> <li>Min Waiting Time</li> <li>Min Response Time</li> </ul> <p>\u8fd9\u4e9b\u76ee\u6807\u662f\u4e92\u76f8\u77db\u76fe\u7684\uff0c\u9700\u8981\u6743\u8861</p> <p>Dispatch Latency: \u4e24\u4e2a\u4efb\u52a1\u5207\u6362\u4e4b\u95f4\u7684\u65f6\u95f4\uff0cPure overhead \u8d8a\u5c0f\u8d8a\u597d</p> <p>Algorithms:</p>"},{"location":"courses/24fall/operating-system/note/#first-come-first-serve-fcfs","title":"First Come First Serve (FCFS)","text":"<pre><code>\u5148\u5230\u5148\u5f97\n</code></pre> <p>\u4f1a\u51fa\u73b0 Convoy Effect, \u524d\u9762\u7684\u592a\u6162\u62d6\u6162\u4e86\u6574\u4f53\u7684\u901f\u5ea6</p>"},{"location":"courses/24fall/operating-system/note/#shortest-job-first","title":"Shortest Job First","text":"<p>Optimal, \u4f46\u662f\u4e0d\u80fd\u5728\u7ebf</p>"},{"location":"courses/24fall/operating-system/note/#round-robin-rr","title":"Round Robin (RR)","text":"<p>\u8f6e\u8be2</p>"},{"location":"courses/24fall/operating-system/note/#prority","title":"Prority","text":"<p>Starvation: \u4f18\u5148\u7ea7\u592a\u4f4e\u7684\u8fdb\u7a0b\u6c38\u8fdc\u5f97\u4e0d\u5230 CPU</p> <p>\u89e3\u51b3\u65b9\u6cd5 Priority Aging: \u968f\u7740\u7b49\u5f85\u65f6\u95f4\u589e\u52a0\uff0c\u4f18\u5148\u7ea7\u589e\u52a0</p>"},{"location":"courses/24fall/operating-system/note/#multi-level-queue-scheduling","title":"Multi-level Queue Scheduling","text":"<p>\u961f\u5217\u5185\u90e8\u8c03\u5ea6+\u961f\u5217\u4e4b\u95f4\u8c03\u5ea6</p> <p>Real-time process, System process, Interactive process, Batch process</p>"},{"location":"courses/24fall/operating-system/note/#multi-level-feedback-queue-scheduling","title":"Multi-level Feedback Queue Scheduling","text":"<p>\u8fdb\u7a0b\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u961f\u5217\u91cc\u79fb\u52a8 (promote / demote)</p> <p>\u6bd4\u8f83\u77ed\u7684\u4efb\u52a1\u4f18\u5148\u7ea7\u4e00\u76f4\u5728\u6bd4\u8f83\u9ad8\u7684\u961f\u5217\uff0c\u5982\u679c\u4e00\u76f4\u5360\u7528 CPU\uff0c\u4f1a\u6162\u6162\u79fb\u52a8\u5230\u4f18\u5148\u7ea7\u4f4e\u7684\u961f\u5217\u91cc</p> <p>Multi-thread, Multi-core Scheduling</p> <p>SMP</p> <p>HART: Hardware Thread</p> <p>Load Balancing: \u4efb\u52a1\u5728\u4e0d\u540c\u7684 CPU \u4e4b\u95f4\u5206\u914d: push migration, pull migration</p> <p>Soft affinity, hard affinity \u786e\u4fdd\u8fdb\u7a0b\u5728\u67d0\u4e2a cpu \u4e0a\u8fd0\u884c</p> <p>Windows: \u8d8a\u9ad8\u4f18\u5148\u7ea7\u8d8a\u9ad8 Linux: nice \u8d8a\u4f4e\u4f18\u5148\u7ea7\u8d8a\u9ad8</p> <p>Linux 0.11: Round Robin + Priority</p> <p>priority</p> <p>Linux 2.6: O(1) scheduler, active, expired, active queue, expired queue</p> <p>bitmap \u5bf9\u5e94 141 \u4e2a\u4f18\u5148\u7ea7 (32 * 5 = 160 &gt; 141), \u7136\u540e\u7528 bsfl \u627e\u5230\u6700\u9ad8\u4f4d\u7684 1, \u4e5f\u5c31\u662f\u6700\u9ad8\u4f18\u5148\u7ea7\u7684\u8fdb\u7a0b</p> <p>prio_array.head_queue[bsfl(bitmap)].task_struct</p> <p>\u73b0\u5728\u7684 Linux: Completely Fair Scheduler (CFS)</p> <p>\u671f\u672b\u5fc5\u8003: Gantt \u56fe\uff0c\u8ba1\u7b97 Waiting Time, Turnaround Time</p> <p>do_timer()</p> <pre><code>    if ((--current-&gt;counter)&gt;0) return;\n    current-&gt;counter=0;\n    if (!cpl) return;\n    schedule();\n</code></pre> <p>nice [-20, 19]</p> <p>Nice \u8d8a\u5927\uff0ccoutner \u8d8a\u5c0f\uff0c\u65f6\u95f4\u7247\u8d8a\u77ed</p> <p>https://elixir.bootlin.com/linux/2.4.31/source/kernel/sched.c#L622</p> <p></p> <p>Nice \u8d8a\u5927\uff0cweight \u8d8a\u5c0f\uff0c\u8c03\u5ea6\u8d8a\u9760\u540e</p> <p>https://elixir.bootlin.com/linux/2.4.31/source/kernel/sched.c#L182</p> <p></p>"},{"location":"courses/24fall/operating-system/note/#ipc-inter-process-communication","title":"IPC Inter-Process Communication","text":"<p>\u8fdb\u7a0b\u4e4b\u95f4\u7684\u4ea4\u6d41</p> <p>\u8fdb\u7a0b\u5185\u90e8 Intra-Process Communication</p> <p></p> <p>\u6d4f\u89c8\u5668 v8\u5f15\u64ce\u7684\u8fdb\u7a0b\u4f7f\u7528\u4e86 seccomp \u9650\u5236\u53ea\u80fd\u7528 4 \u4e2a syscall: read, close, sigret\uff0c\u79f0\u4e4b\u4e3a\u6c99\u7bb1</p> <p>\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6a21\u578b:</p> <ul> <li>Message Passing - \u9002\u5408\u5c0f\u89c4\u6a21\u901a\u4fe1</li> <li>\u6bcf\u6b21\u90fd\u9700\u8981\u5185\u6838\u4ecb\u5165\uff0c\u4f1a\u6709 syscall \u7684 overhead (\u6765\u81ea context switch)</li> <li>Shared Memory - \u9002\u5408\u5927\u91cf\u901a\u4fe1\uff0coverhead \u8f83\u5c0f</li> <li>\u5efa\u7acb Shared Memmory Segment</li> <li>\u5176\u4ed6\u8fdb\u7a0b\u53ef\u4ee5 attach</li> <li>\u65e0\u9700\u5185\u6838\u4ecb\u5165</li> <li>Pipe</li> </ul> <p></p> <p>POSIX \u7684\u5171\u4eab\u5185\u5b58\u6807\u51c6:</p> <p>shmget, shmat (attach), shmdt (detach), shmctl....</p> <p><code>ipcs -a</code> \u53ef\u4ee5\u770b\u5230 shared memory id</p> <p>\u62ff\u5230\u8fd9\u4e2a id \u8c01\u90fd\u53ef\u4ee5\u8bbf\u95ee\uff0c\u4e0d\u662f\u5f88\u5b89\u5168</p> <p>\u73b0\u5728\u4e00\u822c\u7528\u7ebf\u7a0b\u6765\u5e72\u8fd9\u4e2a\u4e8b\u60c5\u4e86</p> <p>Message Passing: send(), recv()</p> <p>\u94fe\u8def (Communucation Link)</p> <ul> <li>Physical: Shared memory. Hardware bus, Network</li> <li>Logical: Direct / Indirect, Synchronous (Blocking, \u4e0d\u4ea4\u5230\u624b\u91cc\u4e0d\u8d70)/ Asynchronous (Non-blocking \u653e\u95e8\u53e3\u5c31\u8d70), Automatic / Explicit buffering</li> </ul> <p>Direct: \u95ee\u9898\u662f\u8fde\u63a5\u592a\u591a</p> <p>Indirect: Share a common mailbox</p> <p>Pipe: pipe syscall, \u4e00\u822c\u662f\u5355\u5411\u7684</p> <p>fd[0] \u8bfb, fd[1] \u5199</p> <p></p> <ul> <li>Ordinary Pipe: \u666e\u901a\u7ba1\u9053 / \u533f\u540d\u7ba1\u9053\uff0c\u4e00\u822c\u662f\u5355\u5411\u7684</li> <li>Named Pipe: \u6709\u540d\u5b57\uff0c\u65e0\u5173\u7cfb\u7684\u8fdb\u7a0b\u90fd\u53ef\u4ee5\u8fdb\u884c\u7ba1\u9053\u901a\u4fe1\uff0c\u53cc\u5411\u7684</li> </ul> <p>UNIX Pipes: Mono Directional \u5355\u5411\u7684</p> <p>Client-Server Communication:</p> <ul> <li>Sockets, RPC (Remote Procedure Call), Java RMI (Remote Method ..)</li> </ul> <p>Thread \u7ebf\u7a0b</p> <p>A thread is a basic unit of execution within a process</p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u5185\u7684\u591a\u4e2a\u6267\u884c\u5355\u5143</p> <p>Thread has its own:</p> <ul> <li>Thread ID, PC, Register set, Stack</li> </ul> <p>Thread shares:</p> <ul> <li>Code section, data section, heap, open files and signals</li> </ul> <p>Conccurency: Can do multiple things at a time.</p> <p></p> <p>\u4e00\u4e2a\u8fdb\u7a0b\u81f3\u5c11\u5305\u542b\u4e00\u4e2a\u7ebf\u7a0b</p> <p>\u4f7f\u7528\u7ebf\u7a0b\u7684\u597d\u5904:</p> <ul> <li>Economy: Cheap, Context switch is cheap </li> <li>switch_mm(), cpu_switch_to() \u5207\u6362\u8fdb\u7a0b\u9700\u8981\u5207\u6362\u5185\u5b58\u7a7a\u95f4\uff0c\u5207\u6362\u8fdb\u7a0b\u4e0d\u9700\u8981</li> <li>Resource Sharing: Naturally Share Memory (Heap, code, data segments)\uff0c\u4e0d\u9700\u8981 ipc</li> <li>Responsiveness</li> <li>Scalability</li> </ul> <p>\u574f\u5904: \u9694\u79bb\u6027\u53d8\u5dee\u4e86</p> <ul> <li>\u4e00\u4e2a\u7ebf\u7a0b\u6302\u4e86 (\u6bd4\u5982 segfault)\uff0c\u6574\u4e2a\u8fdb\u7a0b\u90fd\u6302\u4e86\uff0c\u6ca1\u6709\u9694\u79bb</li> <li>\u5185\u5b58\u7a7a\u95f4\u5171\u4eab\uff0c\u4e0d\u5b89\u5168</li> </ul> <p><code>ps -eLF</code>: PID, PPID, LWP (Lightweight Process)</p> <p>\u591a\u7ebf\u7a0b\u7684\u8fdb\u7a0b\uff0cPID \u662f leading thread IP \u6700\u5f00\u59cb\u7684\u7ebf\u7a0b ID</p> <p>task_struct() \u4e5f\u662f\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u4e00\u4e2a\uff0c\u770b\u5230\u7684\u662f leading thread \u7684 task_struct</p> <p>\u4e25\u683c\u6765\u8bb2 task_struct() \u4e0d\u7b97 PCB</p> <p>User threads vs. Kernel threads</p> <p>\u7528\u6237\u6001\u7684\u7ebf\u7a0b\u4e0e\u5185\u6838\u6001\u7ebf\u7a0b\u6709\u5bf9\u5e94\u5173\u7cfb</p> <ul> <li>Many-to-One: \u4e00\u4e2a\u7ebf\u7a0b\u8c03\u7528\u4e86 syscall \u8fdb\u5165\u5185\u6838\u6001\u7ebf\u7a0b\uff0c\u5176\u4ed6\u7ebf\u7a0b\u5982\u679c\u60f3\u8981 syscall \u9700\u8981\u7b49\u5f85</li> <li>One-to-One: \u6bcf\u4e00\u4e2a\u7528\u6237\u6001\u7ebf\u7a0b\u90fd\u6709\u4e00\u4e2a\u5185\u6838\u6001\u7ebf\u7a0b\uff0c\u89e3\u51b3\u4e86\u524d\u9762\u7684\u95ee\u9898\uff0c\u4f46\u662f\u4ea7\u751f\u4e86\u8f83\u5927 overhead</li> <li>Many-to-Many: \u591a\u5bf9\u591a</li> <li>Two-Level: \u65e2\u6709\u591a\u5bf9\u591a\u4e5f\u6709\u4e00\u5bf9\u4e00</li> </ul> <p>Linux \u548c Windows \u90fd\u662f One-to-One\uff0c\u56e0\u4e3a\u5185\u5b58\u548c CPU \u7b97\u529b\u53d8\u4fbf\u5b9c\u4e86\uff0c\u968f\u4fbf\u9020</p> <p>pthreads: POSIX threads</p> <p>Java green threads: many-to-one, now with native threads</p> <p>Linux \u4e2d\u7ebf\u7a0b\u8bed\u4e49\u4e0b\u7684 fork() \u548c exec()</p> <ul> <li>\u90a3\u4e2a thread \u8c03\u7528\u4e86 fork \u5c31 fork \u8c01</li> <li>exec \u4f1a\u62b9\u6389\u6240\u6709\u7684\u7ebf\u7a0b\uff0c\u66ff\u6362 ELF \u548c address space</li> </ul> <p>Linux \u7ebf\u7a0b\u7684\u4fe1\u53f7</p> <ul> <li>\u5f00\u53d1\u8005\u53ef\u4ee5\u6307\u5b9a\u90a3\u4e9b\u7ebf\u7a0b\u63a5\u6536\u4fe1\u53f7\uff0c\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217 API</li> </ul> <p>\u7ed3\u675f\u7ebf\u7a0b Thread Cancellation:</p> <ul> <li>Asynchronous: \u7acb\u5373\u7ed3\u675f -- \u5bb9\u6613\u9020\u6210\u975e\u5e38\u96be\u8c03\u7684 bug</li> <li>Deferred: \u7ebf\u7a0b\u5728\u81ea\u5df1\u8ba4\u4e3a\u53ef\u4ee5\u5b89\u5168\u7ed3\u675f (cancellation point) \u7684\u65f6\u5019\u518d\u7ed3\u675f</li> </ul> <p>Thread Scheduling</p> <ul> <li>process-contention scope \u5bf9\u5e94\u8fdb\u7a0b\u7c92\u5ea6\u8c03\u5ea6</li> <li>system-contention scpoe \u5bf9\u5e94\u7ebf\u7a0b\u7c92\u5ea6\u8c03\u5ea6\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u5728\u6574\u4e2a\u7cfb\u7edf\u5185\u7ade\u4e89\u65f6\u95f4</li> </ul> <p>Linux \u548c macOS \u90fd\u4ee5\u7ebf\u7a0b\u4e3a\u7c92\u5ea6\u8c03\u5ea6</p> <p>Linux Threads (LWP, Lightweight Process):</p> <ul> <li>clone() \u7cfb\u7edf\u8c03\u7528\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b</li> <li>\u53ef\u4ee5\u63a7\u5236\u548c parent \u5171\u4eab\u54ea\u4e9b\u4e1c\u897f: <code>CLONE_FS</code>, <code>CLONE_VM</code> (\u5171\u4eab\u5730\u5740\u7a7a\u95f4), <code>CLONE_SIGHAND</code>, <code>CLONE_FILES</code></li> </ul> <p>Thread Control Block (TCB)</p> <p>Linux \u4e2d\u7684 TCB \u5c31\u662f task_struct\uff0c</p> <p>\u521b\u5efa\u65b0\u7684\u7ebf\u7a0b\u65f6\uff0cpid, stack, ... \u91cd\u65b0\u5206\u914d\uff0cmm_struct, files, ... \u76f4\u63a5\u62f7\u8d1d</p> <p>task_struct \u5185\u90e8\u6709 thread_group (list_head) \u628a\u6240\u6709\u7ebf\u7a0b\u4e32\u5728\u4e00\u8d77</p> <p></p> <p>stack \u5bf9\u9f50\u5230 0x4000 (16K \u5bf9\u9f50), task_struct \u7684\u5206\u914d: slab, slub ...</p> <p>\u7528\u6237\u548c\u5185\u6838\u6001\u7684\u7ebf\u7a0b:</p> <p></p> <p>Kernel Space \u7684\u6808\u56fa\u5b9a\u5927\u5c0f 16 KiB (Linux)\uff0c\u4e14\u7528\u6237\u6001\u65e0\u6cd5\u8bbf\u95ee</p> <p>User Space \u6808\u7684\u5927\u5c0f\u4e0d\u56fa\u5b9a</p> <p>\u8fdb\u5165\u5185\u6838\u6001\u7684\u65f6\u5019\uff0cpt_regs \u5b58\u5728\u5bf9\u5e94\u7684\u5185\u6838\u7ebf\u7a0b\u7684\u6808\u4e0a</p> <p>Synchronization</p> <p>Race condition</p> <p>\u591a\u4e2a\u7ebf\u7a0b\u540c\u65f6\u5199\u4e00\u5757\u5185\u5b58\uff0c\u4f1a\u9020\u6210\u6570\u636e\u4e0d\u4e00\u81f4\u6027\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u4f9d\u8d56\u4e8e\u6307\u4ee4\u6267\u884c\u7684\u987a\u5e8f</p> <p>\u5355\u4e2a\u6838\u5fc3\u4e5f\u6709\u53ef\u80fd\u51fa\u73b0 (\u8865\u56fe)</p> <p>\u5185\u6838\u7ebf\u7a0b\u7684 race condition \u7ecf\u5e38\u53d1\u751f</p> <ul> <li>critical section: \u591a\u4e2a\u7ebf\u7a0b\u5171\u540c\u6267\u884c\u7684\u4e00\u6bb5\u4ee3\u7801</li> <li>entry section: \u7ebf\u7a0b\u8fdb\u5165 critical section \u524d\u4f1a\u8bf7\u6c42 permission \u8fdb\u5165 critical section</li> <li>exit section: \u7ebf\u7a0b\u9000\u51fa\u4e4b\u540e\u91ca\u653e\u6389 permission</li> </ul> <p>\u5355\u6838\u5904\u7406\u5668: \u5173\u6389\u4e2d\u65ad</p> <p>\u591a\u6838\u5904\u7406\u5668: \u89e3\u51b3 data race \u9700\u8981\u6ee1\u8db3\u4e0b\u9762\u4e09\u4e2a\u6761\u4ef6 \u91cd\u8981</p> <ul> <li>Mutual Exclusion: \u4e92\u65a5\u8bbf\u95ee</li> <li>Progress: \u7a7a\u95f2\u8ba9\u8fdb: \u5982\u679c\u6ca1\u6709\u7ebf\u7a0b\u5728 critical section, \u9700\u8981\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u8fdb\u5165 (make progress)</li> <li>Bounded waiting: \u6709\u9650\u7b49\u5f85, \u907f\u514d starvation</li> </ul> <p>\u89e3\u51b3\u65b9\u6848:</p> <ul> <li>Peterson's Solution: \u53ea\u5bf9 2 \u8fdb\u7a0b\u6709\u7528\uff08\u5047\u8bbe\u8bbf\u5b58\u662f\u539f\u5b50\u64cd\u4f5c\uff09</li> <li>flag[2] \u8be5\u4e0d\u8be5\u8fdb\u5165 critical section, turn \u8be5\u8c01\u4e86</li> <li>\u4e92\u65a5\u8bbf\u95ee: \u679a\u4e3e\u6240\u6709\u60c5\u51b5</li> <li>\u7a7a\u95f2\u8ba9\u8fdb</li> <li>\u6709\u9650\u7b49\u5f85: flag = FALSE \u8ba9\u67d0\u4e2a\u7ebf\u7a0b\u4e0d\u4f1a\u4e00\u76f4\u8fdb\u5165</li> </ul> <p>Memory Barriers:</p> <ul> <li>Strongly Ordered: \u4e00\u4e2a\u5185\u5b58\u4fee\u6539\u9700\u8981\u88ab\u5176\u4ed6\u6838\u5fc3\u7acb\u523b\u770b\u5230 (\u9700\u8981\u540c\u6b65\u7684 overhead)</li> <li>Weakly Ordered: \u5185\u5b58\u4fee\u6539\u8fc7\u4e00\u4f1a\u4e4b\u540e\u624d\u4f1a\u88ab\u5176\u4ed6\u6838\u5fc3\u770b\u5230</li> <li>Memory Barrier: \u5f3a\u5236\u5185\u5b58\u4fee\u6539\u5728\u6838\u5fc3\u95f4\u540c\u6b65</li> </ul> <p>test-and-set instruction</p> <ul> <li>\u786c\u4ef6\u63d0\u4f9b\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c</li> <li>\u6ee1\u8db3 exclusion \u548c progress</li> <li>\u4e0d\u6ee1\u8db3\u6709\u9650\u7b49\u5f85 \uff08\u5b58\u5728\u53ef\u80fd\u975e\u5e38\u5012\u9709\u7684\u7ebf\u7a0b\uff09</li> </ul> <p>\u89e3\u51b3\u65b9\u6cd5: lock \u4e0d\u65ad\u4f20\u7ed9\u4e0b\u4e00\u4e2a\u5728\u7b49\u5f85\u7684\u7ebf\u7a0b</p> <p>compare-and-swap instruction</p> <ul> <li>\u540c\u6837\u8981\u6c42\u539f\u5b50\u64cd\u4f5c\uff0c\u5982 x86 \u7684 lock cmpxchg\uff0cARM \u7684 (ldxr) load-exclusive \u548c (stxr) store-exclusive</li> <li>\u5982\u679c\u7b49\u4e8e expected, \u5c31\u8bbe\u7f6e\u4e3a new_value, \u540c\u65f6\u8fd4\u56de value \u539f\u503c</li> </ul> <p>Mutex (Mutual Exclusive) Locks \u4e92\u65a5\u9501</p> <p>\u539f\u5b50\u64cd\u4f5c\u83b7\u5f97/\u91ca\u653e\u4e92\u65a5\u9501</p> <p>\u95ee\u9898:</p> <ul> <li>T0 acquires lock -&gt; INTERRUPT-&gt;T1 runs, spin, spin spin... -&gt; INTERRUPT-&gt;T0 runs -&gt; INTERRUPT-&gt;T1 runs, spin, spin spin...INTERRUPT-&gt; T0 runs, release locks -&gt;INTERRUPT-&gt;T1 runs, enters CS</li> </ul> <p>\u53ea\u6709 T0 \u6709\u9501\uff0c\u5176\u4ed6\u7684\u7ebf\u7a0b\u5728\u65f6\u95f4\u7247\u5185\u90fd\u4e00\u76f4\u5728\u505a\u65e0\u610f\u4e49\u7684\u7b49\u5f85 (busy waiting)\uff0c\u6d6a\u8d39\u4e86 CPU \u65f6\u95f4</p> <p>\u5982\u679c\u6709 N \u4e2a\u7ebf\u7a0b\uff0c\u5c31\u6d6a\u8d39\u4e86 (N-1)/N \u7684 CPU \u65f6\u95f4</p> <p>\u89e3\u51b3\u65b9\u6cd5: Semaphore (Dijkstra)</p> <p>\u5982\u679c\u7ebf\u7a0b\u5c06\u8981 busy waiting, \u5c31\u8fdb\u5165 sleep queue\uff0c \u4e0d\u4f1a\u518d\u88ab\u8c03\u5ea6</p> <p>\u4e24\u79cd\u64cd\u4f5c - block: \u91cd\u65b0\u8c03\u5ea6\uff0c\u968f\u540e\u7ebf\u7a0b\u8fdb\u5165 SLEEP - wakeup</p> <p>S-&gt;value \u7684\u521d\u503c\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u53ef\u4ee5\u5229\u7528\u7684\u8d44\u6e90\u7684\u6570\u91cf</p> <p>\u51cf\u5c11\u4e86 busy waiting time</p> <p>wait \u548c signal \u4e0d\u80fd\u88ab\u6253\u7834\uff0c\u90fd\u9700\u8981\u662f\u539f\u5b50\u7684</p> <p>Mutex \u548c Semaphore \u7684\u9002\u7528\u573a\u666f: \u957f\u4e0e\u77ed\u8981\u4e0e context switch \u7684\u65f6\u95f4\u6bd4\u8f83</p> <ul> <li>\u5982\u679c Critical Section \u5f88\u77ed\uff0c\u9002\u5408 Mutex / Spinlock</li> <li>\u5426\u5219 Semaphore \u66f4\u9002\u5408\uff0c\u56e0\u4e3a\u91cd\u65b0\u8c03\u5ea6\u6709\u4e0a\u4e0b\u6587\u5207\u6362\u7684\u5f00\u9500</li> </ul> <p>Linux \u5185\u6838\u91cc critical section \u4e00\u822c\u90fd\u662f\u53d6\u4e00\u4e2a\u5185\u5b58\u7684\u503c/\u4fee\u6539\uff0c \u6240\u4ee5 spinlock \u5f88\u5e38\u7528</p> <p>\u7f16\u7a0b\u65f6\u4e00\u5b9a\u8981\u907f\u514d\u6301\u9501\u53bb sleep</p> <p>Deadlock and Starvation</p> <p>P0 \u62ff\u5230 S -- P1 \u62ff\u5230 Q -- P1 \u7b49\u5f85 P0 \u7684 S -- P0 \u7b49\u5f85 P1 \u7684 Q</p> <p>\u6709\u6b7b\u9501\u4e00\u5b9a\u4f1a starvation, starvation \u4e0d\u4e00\u5b9a\u662f\u6b7b\u9501\u9020\u6210\u7684</p> <p>Priority Inversion:</p> <p>\u4f4e\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\u6301\u9501\uff0c\u4f1a\u8ba9\u9700\u8981\u9501\u7684\u9ad8\u4f18\u5148\u7ea7\u7684\u7ebf\u7a0b\uff0c\u53cd\u800c\u4e0d\u5982\u4e0d\u9700\u8981\u8be5\u9501\u7684 \u4e2d\u4f18\u5148\u7ea7\u7ebf\u7a0b\u5148\u8dd1\uff0c\u9020\u6210 P_H \u5b9e\u9645\u7684\u4f18\u5148\u7ea7\u548c P_L \u4e00\u6837\u4e86</p> <p>\u89e3\u51b3\u65b9\u6cd5: \u4f18\u5148\u7ea7\u7ee7\u627f, \u6301\u6709\u9ad8\u4f18\u5148\u7ea7\u9501\u7684\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\uff0c\u4f18\u5148\u7ea7\u4f1a\u5347\u7ea7</p> <p>Linux 2.6 \u4e4b\u524d\u91c7\u7528\u5173\u4e2d\u65ad\u7684\u65b9\u5f0f\u63d0\u4f9b\u4e86 critical section \u7684\u9632\u62a4 \uff08\u56e0\u4e3a\u53ea\u6709\u5355\u6838\uff09</p> <p>Linux \u63d0\u4f9b mutex, semaphore</p> <p>POSIX \u7684\u5b9e\u73b0 pthread_mutex, semaphore, sem_wait...</p> <p>Condition Variable (Dijkstra)</p> <p>broadcast: \u76f8\u5f53\u4e8e wakeup all</p> <p>Synchronization Examples \u7ebf\u7a0b\u540c\u6b65\u4e0e\u5b9e\u9645\u95ee\u9898</p> <ol> <li>Bounded-buffer problem</li> </ol> <p>Producer \u5411 buffer \u5199\u5165\uff0cComsumer \u4ece buffer \u79fb\u51fa</p> <p>\u9700\u8981\u786e\u4fdd Producer \u4e0d\u4f1a\u5728 buffer \u6ee1\u4e86\u7684\u65f6\u5019\u5199\u5165\uff0c\u786e\u4fdd Consumer \u4e0d\u4f1a\u8bd5\u56fe\u5728 buffer \u4e3a\u7a7a\u7684\u65f6\u5019\u8bfb\u51fa</p> <p>\u89e3\u51b3\u65b9\u6cd5:</p> <ul> <li>Semaphore mutex, \u7528\u6765\u4fdd\u62a4 buffer \u7684\u4fee\u6539</li> <li>Semaphore full-slots\uff0c \u521d\u503c\u4e3a \\(0\\)</li> <li>Semaphore empty-slots\uff0c\u521d\u503c\u4e3a \\(N\\)</li> </ul> <pre><code>void producer () {\n    do {\n        // produce an item\n        wait(empty-slots);\n        wait(mutex); // mutex \u4e0d\u80fd\u79fb\u5230 empty slots \u524d\u9762\uff0c\u5e26\u9501 sleep \u4ee5\u53ca\u6b7b\u9501\n        // add the item to buffer\n        signal(mutex);\n        signal(full-slots); // \u4e0d\u80fd\u653e\u5230\u5199\u5165 buffer \u524d\u9762\n    } while (true);             \n}\n\nvoid consumer() {\n    do {\n        wait(full-slots);\n        wait(mutex);\n        // remove item from buffer\n        signal(mutex);\n        signal(empty-slots);\n    }\n}\n</code></pre> <ol> <li> <p>Readers-writers problem</p> </li> <li> <p>Semaphore mutex\uff0c\u7528\u6765\u4fdd\u62a4 readcount</p> </li> <li>Semaphore write, \u521d\u503c\u4e3a \\(1\\)</li> <li>int readcount = 0</li> </ol> <pre><code>void writer () {\n    do {\n        wait(write); // \u5199\u4e0e\u6240\u6709\u64cd\u4f5c\u90fd\u4e92\u65a5\n        // write\n        signal(write);\n    } while (true);\n}\n\nvoid reader() {\n    do {\n        wait(mutex);\n        readcount++;\n        if (readcount == 1) // \u53ea\u6709\u7b2c\u4e00\u4e2a reader \u9700\u8981\u5c4f\u853d\u5199\uff0c\u591a\u4e2a reader \u53ef\u540c\u65f6\u8bfb\n            wait(write);\n        signal(mutex);\n\n        // reading data\n\n        wait(mutex);\n        readcount--;\n        if (readcount == 0) // \u6700\u540e\u4e00\u4e2a reader \u8bfb\u5b8c\uff0c\u5c31\u53ef\u4ee5\u5141\u8bb8\u5199\u5165\u4e86\n            signal(write);\n        signal(mutex);\n    } while (true);\n}\n</code></pre> <p>\u5047\u8bbe\u6709\u4e00\u4e2a writer \u5728\u5199\u5165\uff0c</p> <p>\u7b2c\u4e00\u4e2a reader \u4f1a\u7b49\u5f85\u5728 wait(write) \u4e0a\uff0c\u800c\u540e\u9762\u6765\u7684 reader \u90fd\u4f1a\u7b49\u5f85\u5728 wait(mutex) \u4e0a</p> <p>writer \u5199\u5165\u5b8c\u6210\uff0csignal(write) \u4f1a\u5524\u9192\u7b2c\u4e00\u4e2a reader\uff0c\u968f\u540e\u7b2c\u4e00\u4e2a reader signal(mutex) \u5524\u9192\u5176\u4ed6\u6240\u6709 reader.</p> <p>\u53d8\u79cd1: Reader first, \u8ba9 Reader \u5148\u8bfb \uff08\u4e0a\u9762\u7684\u4f8b\u5b50\u662f reader first\uff09\uff0c\u4f46\u662f\u6709 writer starvation </p> <p>\u53d8\u79cd2: Writer first\uff0c\u5982\u679c Writer \u548c Reader \u90fd\u5728\u7b49\uff0c\u8ba9 Writer \u5148\u5199\uff0c\u6709 reader starvation</p> <p>\u5982\u679c mutex \u6362\u6210 spinlock\uff0c\u4f1a\u6709 busy waiting \u7684\u95ee\u9898</p> <ol> <li>Dining-philosophers problem (Dijkstra)</li> </ol> <p>Multi-resource synchronization \u591a\u4e2a\u8d44\u6e90</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a</p> <ul> <li>semaphore[5] \u90fd\u8bbe\u7f6e\u4e3a 1</li> </ul> <pre><code>void philosopher(int i) {\n    do {\n        wait(chopstick[i]);\n        wait(chopsticl[(i+1)%5]);\n        // eat\n        signal(chopstick[i]);\n        signal(chopsticl[(i+1)%5]);\n        // think\n    } while(true);\n}\n</code></pre> <p>\u4e0a\u9762\u7684\u4ee3\u7801\u53ef\u80fd\u53d1\u751f\u6b7b\u9501\uff0c\u56e0\u4e3a\u4e94\u4e2a\u4eba\u5982\u679c\u90fd\u5148\u62ff\u5de6\u8fb9\u7684\u7b77\u5b50\uff0c\u90a3\u518d\u4e5f\u62ff\u4e0d\u4e86\u4e0b\u4e00\u6839\u7b77\u5b50\u4e86</p> <p>Dijkstra \u7ed9\u51fa\u4e86\u89e3\u51b3\u65b9\u6cd5\uff0c\u5947\u6570\u7684\u4eba\u5148\u62ff\u5de6\u8fb9\uff0c\u5076\u6570\u7684\u4eba\u5148\u62ff\u53f3\u8fb9</p> <p>Deadlock \u6b7b\u9501</p> <p>\u73b0\u4ee3 os \u4e0d\u9884\u9632\u6216\u8005\u89e3\u51b3\u6b7b\u9501\u95ee\u9898</p> <p>\u53d1\u751f deadlock \u9700\u8981\u56db\u4e2a\u6761\u4ef6:</p> <ol> <li>Mutual Exclusion: \u8d44\u6e90\u4e92\u65a5</li> <li>Hold and wait: \u62ff\u7740\u4e00\u90e8\u5206\u8d44\u6e90\u53bb\u8bf7\u6c42\u53e6\u4e00\u4e2a\u8d44\u6e90</li> <li>No preemption: \u8d44\u6e90\u4e0d\u80fd\u88ab\u62a2\u5360</li> <li>Circular wait: Resource Allocation Graph \u4e2d\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u4e14\u73af\u5305\u62ec\u4e86\u6240\u6709\u7684 process</li> </ol> <p>Deadlock Prevention: \u6253\u7834\u6b7b\u9501\u5f62\u6210\u6761\u4ef6</p> <ol> <li>Mutual Exclusion: \u5982\u679c\u662f\u5171\u4eab\u8d44\u6e90\u5c31\u4e0d\u505a\u6210\u4e92\u65a5\u7684</li> <li>Hold and wait: \u53ea\u80fd\u62ff\u6240\u6709\u8d44\u6e90\u6216\u8005\u4e0d\u62ff\uff0c\u5982\u679c\u6ca1\u6709\u6240\u6709\u8d44\u6e90\u5c31\u653e\u5f03 - \u6709 starvation \u95ee\u9898</li> <li>No preemption: \u7ebf\u7a0b\u53ef\u4ee5\u62a2\u5360\u5176\u4ed6\u7ebf\u7a0b\u7684\u8d44\u6e90</li> <li>Circular wait: \u52a0\u4e00\u4e2a\u8bf7\u6c42\u8d44\u6e90\u7684\u987a\u5e8f</li> </ol> <p>Deadlock Avoidance: \u8ba1\u7b97\u662f\u5426\u5904\u4e8e safe state\uff0csafe state guarantee no deadlock</p> <p>Impractical!: require extra information about how resources are to be requested</p> <p>\u5355\u4e2a\u79cd\u7c7b\u7684\u8d44\u6e90: resource-allocation graph</p> <p>\u591a\u4e2a\u79cd\u7c7b\u7684\u8d44\u6e90: Banker's Algorithm</p> <ul> <li>Resource-allocation Graph: claim edge, request edge, assignment edge</li> <li>Banker's Algorithm</li> </ul> <p></p> <p>\u8ba1\u7b97\u5411\u91cf available \u548c\u77e9\u9635 need</p> <p>\u6267\u884c\u4e4b\u540e available += allocation</p> <p></p> <p>Deadlock Detection: </p> <p>\u7ef4\u62a4 wait-for graph\uff0c\u70b9\u53ea\u6709\u7ebf\u7a0b\uff0c\u5982\u679c\u5b58\u5728\u73af\u8def\u5c31\u6b7b\u9501\u4e86</p> <p></p> <p>\u68c0\u6d4b\u73af\u8def\u7684\u7ecf\u5178\u7b97\u6cd5: \u4e00\u4e2a\u4e00\u6b21\u8d70\u4e00\u6b65\uff0c\u53e6\u4e00\u4e2a\u4e00\u6b21\u8d70\u4e24\u6b65\uff0c\u5982\u679c\u5feb\u6307\u9488\u8ddf\u4e0a\u4e86\u6162\u6307\u9488\u5c31\u5b58\u5728\u73af\u4e86</p> <p>Multiple InstanceL \u7c7b\u4f3c Banker's Algorithm</p> <p>Deadlock Recover:</p> <ul> <li>terminate process\uff0c\u6bcf\u9694\u4e00\u6bb5\u65f6\u95f4\uff0c\u4e00\u4e2a\u4e00\u4e2a kill\uff0c\u68c0\u6d4b\u662f\u5426\u8fd8\u6b7b\u9501</li> <li>\u9009\u62e9 Kill \u90a3\u4e2a\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u6709\u5f88\u591a\u8003\u91cf\uff0c\u4f46\u7b80\u5355\u7684\u8bdd\u5c31\u968f\u673a\u9009\u4e00\u4e2a\u4e86</li> </ul> <p>Main Memory</p> <p>\u5185\u5b58\u7ba1\u7406: Partition -&gt; Segmentation -&gt; Paging</p> <p>\u5982\u679c\u4efb\u52a1\u9700\u8981\u7684\u5185\u5b58\u6bd4\u4e3b\u5b58\u5927:</p> <ul> <li>\u5206\u6cbb\uff0c\u4e00\u6bb5\u4e00\u6bb5\u52a0\u8f7d\u8fdb\u5165\u5185\u5b58 like compiler passes</li> </ul> <p>\u5185\u5b58\u4e2d\u8981\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u8fdb\u7a0b:</p> <ul> <li> <p>Partition: Protection, Fast execution, Fast Context switch</p> </li> <li> <p>\u6b64\u65f6\u52a0\u8f7d\u4e00\u4e2a\u7a0b\u5e8f:</p> </li> <li>\u8fdb\u884c\u5185\u5b58\u5730\u5740\u7684\u91cd\u5b9a\u4f4d</li> <li>\u7f3a\u70b9:</li> <li>\u7a0b\u5e8f\u52a0\u8f7d\u8fdb\u5185\u5b58\u540e\uff0c\u51e0\u4e4e\u4e0d\u53ef\u80fd\u518d\u79fb\u52a8\uff08task struct \u7684 PC\uff0c\u5168\u90e8\u7684\u5185\u5b58\u5730\u5740\uff0c\u6570\u636e\u4e2d\u7684\u6307\u9488... \u90fd\u8981\u66f4\u6539\uff09</li> <li>\u5185\u5b58\u788e\u7247\u5316\uff0c\u53c8\u56e0\u4e3a\u7a0b\u5e8f\u4e0d\u80fd\u518d\u79fb\u52a8\uff0c\u65e0\u6cd5\u7f13\u89e3</li> </ul> <p></p> <p>\u601d\u8def: \u5c06\u7a0b\u5e8f\u5185\u4f7f\u7528\u5230\u7684\u5185\u5b58\u5730\u5740\u90fd\u662f\u4e00\u4e2a\u76f8\u8f83\u4e8e\u7a0b\u5e8f\u5f00\u59cb\u4f4d\u7f6e\u7684\u504f\u79fb\u91cf\uff0c\u8fd9\u6837\u5c31\u5141\u8bb8\u4e86\u79fb\u52a8</p> <p>\u89e3\u51b3\u65b9\u6cd5: \u5f15\u5165\u903b\u8f91\u5730\u5740\uff0c\u5728\u8fd0\u884c\u65f6\u88ab\u8f6c\u5316\u4e3a\u7269\u7406\u5730\u5740\u3002\u903b\u8f91\u5730\u5740\u4e3a\u5206\u533a\u5185\u90e8\u7684\u504f\u79fb\u91cf</p> <ul> <li>0x14000 \u5f00\u59cb\u7684\u7a0b\u5e8f\uff0c\u903b\u8f91\u5730\u5740 0x00346 \u8f6c\u6362\u4e3a\u7269\u7406\u5730\u5740 0x14346</li> <li>\u4e0d\u8003\u8651\u590d\u6742\u60c5\u51b5\uff0c\u6b64\u65f6\u53ef\u4ee5\u79fb\u52a8\u4e00\u4e2a\u7a0b\u5e8f</li> </ul> <p>\u786c\u4ef6\u5b9e\u73b0:</p> <ul> <li>\u6dfb\u52a0 base \u548c limit \u5bc4\u5b58\u5668</li> <li>\u6dfb\u52a0\u4e00\u4e2a\u786c\u4ef6\u903b\u8f91\u5730\u5740\u548c\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362\uff08\u5373\u68c0\u67e5 offset \u4e0e limit\uff0c\u518d + base\uff09</li> <li>\u4fee\u6539 base \u548c limit \u5bc4\u5b58\u5668\u7684\u6307\u4ee4\u5fc5\u987b\u662f\u7279\u6743\u6307\u4ee4</li> </ul> <p></p> <p></p> <p>\u5fc5\u8003: first-fit, best-fit, worst-fit </p> <p>Partition Strategies</p> <ol> <li>Fixed Partition: Partition \u5927\u5c0f\u9700\u8981 trade off</li> <li>\u5982\u679c\u7a0b\u5e8f\u9700\u8981\u7684\u5185\u5b58\u5927\u4e8e\u4e00\u4e2a partition - \u53ea\u80fd\u50cf\u4e4b\u524d\u4e00\u6837\u5206\u6cbb\uff0c\u5206\u522b load</li> <li>\u5982\u679c\u7a0b\u5e8f\u5c0f\u4e8e\u4e00\u4e2a partition: Internal Fragmentation \u788e\u7247\u5316\uff0c\u6d6a\u8d39\u4e86\u5185\u5b58</li> <li>\u4f46\u662f\u6ca1\u6709 external framentation</li> <li>Variable Length Partition:</li> <li>Parition \u5927\u5c0f\u6839\u636e\u7a0b\u5e8f\u9700\u8981\u81ea\u52a8\u53d8\u5316\uff0c\u5b9e\u73b0\u6bd4\u8f83\u590d\u6742</li> <li>External Fragmentation<ul> <li>First fit (\u627e\u7b2c\u4e00\u4e2a), Best fit (\u627e\u7a7a\u95f2 size \u6700\u63a5\u8fd1\u7684)\uff0cWorst Fit\uff08\u627e\u6700\u5927\u7684\u7a7a\u95f2\u7a7a\u95f4\uff09\u9009\u62e9\u9898</li> <li></li> </ul> </li> </ol> <p>Segmentation</p> <p>ELF Section \u4e0e Segmentation / Partition \u4e4b\u95f4\u7684\u5173\u7cfb: \u8282\u7701\u5206\u6bb5\u9632\u6b62\u788e\u7247\u5316\uff0c\u4e00\u822c\u591a\u4e2a\u6743\u9650\u76f8\u540c\u7684 section \u4f1a\u5408\u5e76\u6210\u4e00\u4e2a Segment</p> <p>\u8fd9\u65f6\u5019\u51fa\u73b0\u4e86\u591a\u4e2a segment, \u9700\u8981\u591a\u7ec4 base limit\uff0c\u800c\u786c\u4ef6\u4e0d\u53ef\u80fd\u505a\u90a3\u4e48\u591a\u7ec4\u5bc4\u5b58\u5668</p> <p>\u7528\u4e00\u9875\u5185\u5b58\u4e13\u95e8\u5b58\u50a8\u591a\u7ec4 base, limit (segmentation table)\uff0c\u6839\u636e segment-number \u67e5\u8be2</p> <p>\u6b64\u65f6\u903b\u8f91\u5730\u5740\u53d8\u6210\u4e86  <p>Logic Address and Physical Address:</p> <ul> <li>Logic Address: \u5047\u60f3\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u6ca1\u6709\u5bf9\u5e94\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u5fc5\u987b\u8981\u6620\u5c04\u5230\u7269\u7406\u5730\u5740</li> <li>v1: offset within partition</li> <li>v2: segment-number and offset</li> <li>Physical Address</li> </ul> <p>Memory Management: separate logical address and physical address</p> <p>MMU: \u786c\u4ef6\u52a0\u901f\u903b\u8f91\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u7684\u5185\u5b58\u8f6c\u6362</p> <p></p> <p>Segment \u5206\u6bb5\u65f6, MMU \u4e5f\u9700\u8981\u5305\u62ec\u67e5\u8be2 Segment Table \u7684\u8fc7\u7a0b</p> <p>segmentation register table \u91cc\u6807\u8bb0\u4e86\u6bb5\u7684\u6743\u9650:</p> <p></p> <p>Paging: fix-sized partition \u7684\u6539\u8fdb</p> <ul> <li>Divide physical address to fixed-sized frames: \u7269\u7406\u5730\u5740\u5bf9\u5e94\u5e27</li> <li> <p>Divide logical address to same sized pages: \u903b\u8f91\u5730\u5740\u5bf9\u5e94\u9875</p> </li> <li> <p>keep track of the mapping between pages and frames: Page \u548c Frame \u7684\u6620\u5c04</p> </li> <li>Page Table: Mapping to translate logical to physical address</li> </ul> <p>Paging \u7684\u788e\u7247:</p> <ul> <li>No external fragmentation</li> <li>Has internal fragmentation\uff0c\u4f46\u662f\u6d6a\u8d39\u7684\u5927\u5c0f\u6bd4 variable length partitioin \u5c11\uff0c\u53ea\u4f1a\u6d6a\u8d39\u6700\u540e\u4e00\u4e2a page \u7684\u7a7a\u95f4</li> <li>worst case: 1 frame - 1 byte</li> <li>average: 1 / 2 frame size </li> </ul> <p>Page size / Frame size \u5927\u5c0f\u7684\u9009\u62e9:</p> <p>4 KiB (Linux), 64 KiB, .... \u968f\u5185\u5b58\u53d8\u4fbf\u5b9c\uff0c\u6709\u53d8\u5927\u7684\u8d8b\u52bf</p> <p>Page table:</p> <p></p> <p>\u903b\u8f91\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u8f6c\u6362\u8fc7\u7a0b:</p> <p></p> <p>\u9875\u8868\u91cc\u9762\u53ea\u5b58\u4e86\u5e27\u53f7\uff0c\u6ca1\u5b58\u9875\u53f7\uff0c\u56e0\u4e3a index \u5c31\u662f\u9875\u53f7\uff08syscall number, segment number, page number \u90fd\u76f8\u540c\uff09</p> <p>\u6b64\u65f6\u903b\u8f91\u5730\u5740\u53d8\u6210\u4e86:  <ul> <li>32 \u4f4d\u5730\u5740\uff0c4 KiB \u9875: page offset: 12 \u4f4d\uff0cpage number: 20 \u4f4d</li> </ul> <p>Page Table \u5982\u4f55\u5b58\u50a8:</p> <ul> <li>\u5bc4\u5b58\u5668: \u597d\u5904\u662f\u5feb\uff0c\u4f46\u5bc4\u5b58\u5668\u6570\u91cf\u6709\u9650\uff0c\u4e0d\u591f\u5b58\u50a8\uff0c\u4e14 context switch \u9700\u8981\u5207\u6362\u6240\u6709\u7684</li> <li>\u5185\u5b58: \u7528 PBTR (x86: cr3; aarch64: ttbr0, ttbr1; risc-v: satp) \u6307\u5411\u5185\u5b58\u4e2d\u9875\u8868\u7684\u5f00\u5934</li> <li>\u52a0\u901f: \u9875\u8868\u72ec\u6709\u7684 cache: TLB (translation look-aside buffer)</li> <li>TLB \u4e0a\u4e0b\u6587\u5207\u6362:<ul> <li>Option 1: \u4e0a\u4e0b\u6587\u5207\u6362\u6e05\u7a7a TLB</li> <li>Option 2: \u7528 ASID \u8bc6\u522b\u662f\u54ea\u4e2a\u8fdb\u7a0b\u7684</li> </ul> </li> <li>Page Table \u9700\u8981\u7269\u7406\u8fde\u7eed\uff0c\u8fd9\u662f\u56e0\u4e3a MMU \u53ea\u8ba4\u8bc6\u7269\u7406\u5730\u5740 (syscall table \u53ea\u9700\u8981\u865a\u62df\u5730\u5740\u8fde\u7eed)</li> </ul> <p></p> <p>TLB Hit ratio \u9700\u8981\u591a\u5c11\u624d\u80fd\u51cf\u5c11 overhead \u2014\u2014 EAT (effective access time):</p> <p></p> <p>\u5728\u7a0b\u5e8f\u6b63\u5e38\u8fd0\u884c\u4e4b\u540e\uff0cTLB hit ratio \u53ef\u4ee5\u63a5\u8fd1 100%</p> <p>\u5185\u5b58\u7684\u9694\u79bb\u4e0e\u4fdd\u62a4:</p> <p>\u5c06\u6743\u9650\u4f4d\u4fdd\u5b58\u5230 PTE (Page Table Entry) \u91cc\u9762</p> <p></p> <p>Valid \u4f4d: \u6ca1\u6709\u6620\u5c04\u7684\u9875\uff0c\u56e0\u4e3a\u865a\u62df\u5730\u5740\u7a7a\u95f4\u6709\u5f88\u591a\u5730\u5740\u90fd\u662f\u6ca1\u7528\u4e0a\u7684</p> <p>Page Sharing: \u8fd0\u884c\u4e24\u6b21\u7a0b\u5e8f\uff0c\u6709\u54ea\u4e9b\u4e1c\u897f\u53ef\u4ee5\u5171\u4eab</p> <ul> <li>code \u6bb5\uff0crodata \u6bb5\uff0c\u5e93\uff08\u4e5f\u662f ELF\uff0c\u53ef\u4ee5\u5171\u4eab r--, r-x \u7684\u6bb5\uff09</li> <li>\u901a\u8fc7\u5171\u4eab page \u8282\u7701\u4e86\u5185\u5b58</li> </ul> <p>Segmentation: 1961, Paging: 1962\uff1b\u4f46\u662f TLB \u786c\u4ef6 (full-associative) \u5f88\u96be\u5b9e\u73b0\uff0c\u6240\u4ee5 Paging \u53d7\u5236\u4e8e\u786c\u4ef6</p> <p>Hierarchical Page Table \u5c42\u7ea7 \u9875\u8868:</p> <ul> <li>\u4e00\u7ea7\u9875\u8868: 32 \u4f4d\u5730\u5740\u7a7a\u95f4: 4 GiB / 4 KiB = 1 M \u4e2a PTE, 1M*4Byte = 4M \u9700\u8981 4M \u7269\u7406\u8fde\u7eed\u7684\u9875\u8868</li> <li>\u73b0\u5b9e\u4e2d\u7a0b\u5e8f\u7684\u5730\u5740\u7a7a\u95f4\u6709\u5f88\u591a\u7528\u4e0d\u5230\u7684\u5730\u5740 (hole)\uff0c\u6709\u5f88\u591a PTE \u662f\u53ef\u4ee5\u7701\u7565\u7684</li> <li>\u4e00\u4e2a\u9875\u53ef\u4ee5\u653e 1024 \u4e2a PTE\uff0c\u628a\u4e00\u7ea7\u9875\u8868\u4e2d\u7684 1M \u4e2a PTE \u6bcf 1024 \u4e2a\u5b58\u5230\u4e00\u9875\u91cc\uff0c\u9700\u8981 1024 \u9875</li> <li>\u5982\u679c\u6ca1\u5206\u914d\u7684\u8bdd\uff0c\u90a3\u4e48\u7b2c\u4e00\u7ea7\u8bbe\u7f6e\u6210 invalid\uff0c\u4e0d\u9700\u8981\u7b2c\u4e8c\u7ea7\u627e\u4e00\u4e2a\u9875\u6765\u5b58\u4e86\uff0c\u7acb\u7701 1 \u9875\u5185\u5b58</li> <li>\u4e8c\u7ea7\u9875\u8868:</li> <li>\u6b64\u65f6\u7684\u5bfb\u5740\u65b9\u5f0f: \u62c6\u6210 addr[31:22], addr[21:12], addr[11:0]<ul> <li>addr[31:22] \u5171 10 \u4f4d\u7528\u4e8e\u5728\u4e00\u7ea7\u9875\u8868\u5bfb\u5740 (PGD, Page Global Directory\uff0c\u5982\u679c\u5728\u4e2d\u95f4\uff0c\u53eb PMD: Page Middle Directory, PUD: Page Uppder Directory, P4D)</li> <li>addr[21:12] \u5171 10 \u4f4d\u7528\u4e8e\u5728\u4e8c\u7ea7\u9875\u8868\u5bfb\u5740 (PTE, Page Table Entry)</li> <li>addr[11:0] \u7528\u4e8e\u5728\u9875\u5185\u5bfb\u5740 (page offset)</li> </ul> </li> <li>\u9700\u8981\u591a\u8bbf\u95ee\u4e24\u6b21\u5185\u5b58\uff0cTLB \u8d8a\u53d1\u91cd\u8981</li> <li>\u4e3a\u4ec0\u4e48\u7701\u5185\u5b58: \u9875\u8868\u6309\u9700\u5206\u914d\uff0c\u8bbe\u7f6e Invalid \u4f4d\uff0c\u540e\u9762\u5c31\u4e0d\u7528\u5206\u914d\u4e00\u4e2a\u9875\u8868\u9875</li> </ul> <p>4KiB, 64bit address, 3\u7ea7\u9875\u8868 9+9+9+12 \u5171 39 \u4f4d\uff0c\u53ef\u4ee5\u5bfb\u5740 512 GiB\uff0c9+9+9+9+12 \u53ef\u5bfb\u5740 256 TiB \u5185\u5b58\uff0c9+9+9+9+9+12 \u53ef\u5bfb\u5740 128 PiB \u5185\u5b58\uff0c\u8fd9\u5c31\u662f\u73b0\u5728\u7684 39-bit, 48-bit, 57-bit \u5185\u5b58\u5730\u5740</p> <ul> <li>4 KiB \u9875\uff0c1\u7ea7\u9875\u8868\u4e00\u9879\u4ee3\u8868 4 KiB, 2\u7ea7 2 MiB, 3 \u7ea7 1 GiB, 4 \u7ea7 512 GiB, 5 \u7ea7 256 TiB</li> </ul> <p>64 KiB, 64bit address, 2\u7ea7\u9875\u8868 13+13 (64 KiB / 8 Byte) +16 (64 KiB) \u5171 42 \u4f4d</p> <p>Hashed Page Table:</p> <p></p> <ul> <li>\u4f18\u70b9: \u865a\u62df\u5730\u5740\u7a7a\u95f4\u5f88\u5927\uff0c\u4f46\u53ea\u7528\u4e86\u5f88\u5c0f\u4e00\u5757\u5185\u5b58\uff0c\u53ef\u4ee5\u8282\u7701\uff08\u5b58\u5f97\u7a00\u758f\u65f6\u65e0\u9700\u94fe\u8868\uff09</li> <li>\u7f3a\u70b9: \u54c8\u5e0c\u6bd4\u8f83\u6162\uff0c\u54c8\u5e0c\u51fd\u6570\u9009\u4e0d\u597d\u4f1a\u9020\u6210\u591a\u6b21\u8bbf\u5b58\uff08\u94fe\u8868\uff09</li> </ul> <p>Inverted Page Table:</p> <ul> <li>SV39\uff1a\u5bfb\u5740 512 GB \u5185\u5b58</li> <li>\u4f46\u5b9e\u9645\u4e0a\uff08\u6bd4\u5982\u624b\u673a\uff09\u8fdc\u8fdc\u6ca1\u6709\u8fd9\u4e48\u591a\u7269\u7406\u5185\u5b58</li> <li>\u7528\u5f88\u5927\u7684\u865a\u62df\u5730\u5740\u7a7a\u95f4\u6765\u5bfb\u5740\u6d88\u8017\u5f88\u9ad8</li> <li>\u4e8e\u662f\u6709\u4e0b\u9762\u7684\u8bbe\u8ba1:</li> </ul> <p></p> <ul> <li>\u6bcf\u4e2a\u9875\u8868\u9879\u5b58\u50a8\u7684\u662f pid \u548c page number \uff0c\u800c\u5176 index \u662f\u7269\u7406\u5e27\u7684\u7f16\u53f7\uff08\u53cd\u8fc7\u6765\u4e86\uff09</li> <li>\u6bcf\u6b21\u67e5\u8be2\u8981\u904d\u5386 page table \u627e\u5230\u5bf9\u5e94\u7684 pid \u548c p\uff0c\u53d6 index \u4f5c\u4e3a\u7269\u7406\u5e27</li> <li>\u7531\u4e8e index \u505a\u4e86\u7269\u7406\u5e27\u7f16\u53f7\uff0c\u4e0d\u80fd\u5b9e\u73b0\u591a\u8fdb\u7a0b\u5171\u4eab\u7269\u7406\u5e27\uff08\u94fe\u8868\uff01\uff1f\uff09</li> <li>TLB Miss \u540e\u7531\u4e8e\u9700\u8981\u904d\u5386\uff0c\u6027\u80fd\u5f88\u4f4e</li> </ul> <p>Swapping: \u7528\u786c\u76d8\u6765\u6269\u5c55\u7269\u7406\u5185\u5b58</p> <p></p> <ul> <li>\u5982\u679c\u5728 swap \u7684\u80cc\u666f\u4e0b\u505a context-switch\uff0c\u7ebf\u7a0b\u6570\u636e 100 MiB\uff0c\u786c\u76d8\u901f\u7387\u662f 50 MiB/s</li> <li>\u9700\u8981 2s swap out \u518d 2s swap in\uff0c\u603b\u5171\u9700\u8981 4s</li> <li>\u5982\u679c\u6709 Paging\uff0c\u5c31\u4e0d\u9700\u8981\u628a\u6574\u4e2a\u8fdb\u7a0b\u7684\u6570\u636e swap \u5230\u786c\u76d8</li> </ul> <p></p> <p>Intel \u548c Arm \u7684\u5206\u9875</p> <ol> <li> <p>IA-32: \u652f\u6301 Segmentation \u548c Paging</p> </li> <li> <p>Segmentation: \u6700\u9ad8 4 GiB</p> </li> <li> <p>\u652f\u6301\u6bcf\u4e2a\u8fdb\u7a0b 16 K \u4e2a segment\uff0c\u8fdc\u8d85\u9700\u8981\uff08ELF \u5927\u6982\u5341\u51e0\u4e2a\uff09</p> </li> <li> <p>Segmentation \u88ab\u5206\u4e3a\u4e24\u4e2a 8K: LDT, GDT</p> </li> <li></li> <li> <p></p> </li> <li> <p>Paging: 4 KiB / 4 MiB \u5927\u5c0f</p> </li> <li> <p></p> </li> <li></li> <li>4 KiB: \u4e24\u5c42\u9875\u8868\uff0c 4 MiB: \u4e00\u5c42\u9875\u8868</li> </ol> <p>32 bit \u5bfb\u5740\u5927\u4e8e 4 GiB \u7684\u5185\u5b58: PAE (Physical Address Extensions)</p> <p></p> <p>\u628a\u9875\u8868\u9879\u4ece 32bit \u6362\u6210\u4e86 64 bit\uff0c\u652f\u6301\u5230\u4e86 64 GiB\uff0c\u6b64\u65f6\u4e00\u9875\u53ea\u6709 512 \u9875\u8868\u9879\uff0c\u53d8\u6210\u4e09\u7ea7\u9875\u8868 2+9+9+12</p> <ul> <li>Intel-64</li> <li>Page size: 4 KiB, 2 MiB, 1 GiB</li> <li> <p>39, 48, 57 bits</p> </li> <li> <p>ARM: \u76f4\u63a5\u4e0a\u4e86 Paging</p> </li> </ul> <p>Virtual Memory</p> <ol> <li> <p>Demading Paging</p> </li> <li> <p>Unused code: error handling code, unusual routine, Unused data: large data structure</p> </li> <li>\u60f3\u6cd5: run a partially loaded program \u7a0b\u5e8f\u4e0d\u5168\u90e8\u52a0\u8f7d\u8fdb\u5185\u5b58\u5c31\u6267\u884c</li> <li> <p>\u52a0\u8f7d ELF _start \u7684\u4ee3\u7801\u6bb5\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u8dd1\u4e86</p> </li> <li> <p>\u5982\u679c\u8fd0\u884c\u5230\u67d0\u4e00\u5730\u5740\uff0c\u6ca1\u6709\u5230\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\uff0c\u4ea7\u751f Page Fault</p> </li> </ol> <p></p> <ul> <li>Demand \u610f\u5473\u7740\u8bbf\u5b58</li> <li><code>malloc</code> \u51fa\u6765\u7684\u5185\u5b58\uff0c\u5728\u8bfb/\u5199\u7684\u65f6\u5019\u624d\u771f\u6b63\u5206\u914d\u7269\u7406\u5185\u5b58</li> <li>\u5982\u679c index \u8d85\u8fc7\u4e86 malloc \u7684\u8303\u56f4\uff0c\u89e6\u53d1 Segmentation Fault</li> <li> <p>\u5982\u679c\u5728 malloc \u7684\u8303\u56f4\u5185\uff0c\u89e6\u53d1 Page Fault</p> </li> <li> <p>\u8c01\u80fd\u591f\u5f15\u8d77 Page Fault: \u8bbf\u5b58</p> </li> <li>\u90a3\u4e2a\u786c\u4ef6\u89e6\u53d1 Page Fault: MMU - TLB Miss &amp;&amp; Page Table Entry \u5bf9\u5e94 Invalid</li> <li></li> <li>\u8c01\u5904\u7406 Page Fault: OS</li> </ul> <p><code>malloc</code> \u5e76\u8bbf\u5b58\u7684\u7684\u5168\u8fc7\u7a0b:</p> <p></p> <ol> <li>\u200b    <code>malloc</code> \u8c03\u7528 <code>brk()</code> (break) \u5728\u5806\u4e2d\u7533\u8bf7\u5185\u5b58</li> <li><code>brk()</code> \u5c06\u7a0b\u5e8f\u7684 <code>Size</code> \u63d0\u9ad8\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8fd4\u56de\u7ed9\u7a0b\u5e8f\u7533\u8bf7\u6210\u529f\uff0c\u4f46\u5e76\u6ca1\u6709\u771f\u6b63\u6620\u5c04\u7269\u7406\u5e27</li> <li>\u7a0b\u5e8f\u8bbf\u95ee\u5230\u65b0\u7533\u8bf7\u7684\u5185\u5b58\uff0cMMU \u89e6\u53d1 Page Fault\uff0c\u8fdb\u5165 Kernel</li> <li>Kernel \u53d1\u73b0\u786e\u5b9e\u7533\u8bf7\u8fc7\u8fd9\u5757\u5185\u5b58\uff0c\u6240\u4ee5\u5206\u914d\u4e00\u5757\u7269\u7406\u5e27\uff0c\u5e76\u7ef4\u62a4\u9875\u8868</li> </ol> <p>Kernel \u672c\u8eab\u7533\u8bf7\u7684\u5185\u5b58:</p> <ul> <li><code>kmalloc</code>: \u7269\u7406\u8fde\u7eed\uff0c\u865a\u62df\u8fde\u7eed</li> <li><code>vmalloc</code>: \u7269\u7406\u4e0d\u8fde\u7eed\uff0c\u865a\u62df\u8fde\u7eed</li> <li>kernel \u7533\u8bf7\u7684\u5185\u5b58\u7acb\u5373\u5206\u914d</li> </ul> <p>Kernel \u5bf9 Page Fault \u7684\u5904\u7406</p> <ul> <li><code>vm_area_struct</code> \u201c\u8d26\u672c\u201d: \u5b58\u50a8 vm_area \u7684\u5f00\u5934\u3001\u7ed3\u5c3e\u548c\u6743\u9650</li> <li>\u5982\u679c\u5728\u8303\u56f4\u5185\uff0c\u4e14\u6743\u9650\u6b63\u786e: \u5206\u914d\u7269\u7406\u5185\u5b58</li> <li>\u4e0d\u5728\u8303\u56f4\u5185\u6216\u6743\u9650\u4e0d\u6b63\u786e: Segmentation Fault</li> <li>\u4f7f\u7528\u5e73\u8861\u6811\uff08\u7ea2\u9ed1\u6811\uff09\u5feb\u901f\u627e\u5230\u67d0\u4e2a\u5730\u5740\u5904\u4e8e\u54ea\u4e2a vm_area</li> </ul> <p></p> <p></p> <p>\u200b   MMU \u8d70\u9875\u8868\u53d1\u73b0 invalid\uff0c\u89e6\u53d1 Page Fault, kernel \u5206\u914d\u5e76\u66f4\u65b0\u9875\u8868\uff0c\u56de\u5230\u539f\u6765\u7684\u6307\u4ee4\u518d\u6267\u884c\u4e00\u6b21\uff0cMMU \u518d\u4e00\u6b21\u53d1\u73b0 TLB Miss\uff0c\u8d70\u9875\u8868\uff0c\u627e\u5230\u7269\u7406\u5730\u5740\uff0c\u6210\u529f\u6267\u884c\uff0c\u628a\u9875\u8868\u9879\u62ff\u5230 TLB \u91cc\u3002</p> <p>\u200b   \u8fc7\u7a0b: \uff08\u8bfb\u53d6 file-backed \u7684 data, text \u6bb5\uff09</p> <p></p> <ul> <li>4 \u6700\u8d39\u65f6\u95f4: \u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019\u8fdb\u7a0b\u4f1a\u88ab\u653e\u5230 disk \u7684 wait_queue \u4e0a\uff0c\u7136\u540e\u518d\u8c03\u5ea6</li> <li>disk \u52a0\u8f7d\u5b8c\u89e6\u53d1 interrupt\uff0c\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u628a\u8fdb\u7a0b\u4ece wait \u6539\u6210 ready</li> <li>\u6062\u590d\u540e\u8dd1\u7684\u6307\u4ee4\u8fd8\u662f\u89e6\u53d1 page fault \u7684\u90a3\u6761</li> <li>\u5982\u679c\u662f\u5176\u4ed6\u975e file-backed \u6bb5\uff0c\u53ef\u4ee5\u7701\u7565 3 , 4 \u4e24\u6b65</li> <li>\u6709\u9700\u8981\u8bfb\u78c1\u76d8\u64cd\u4f5c\u7684 Page Fault \u53eb\u505a Major Page Fault</li> <li>\u5426\u5219\u79f0\u4f5c Minor Page Fault</li> </ul> <p>Segment \u7684\u7c92\u5ea6\u592a\u5927\u4e86\uff0c\u4e0d\u5bb9\u6613\u5b9e\u73b0 Demand \u201dSegmentation\u201c</p> <p>\u4f18\u70b9:</p> <pre><code>1. \u65f6\u95f4\u6362\u7a7a\u95f4\n1. \u53ef\u4ee5 Partially load \u4e00\u4e2a\u7a0b\u5e8f\n</code></pre> <ul> <li>Lazy swapper</li> <li>Pre-paging: \u5229\u7528\u7a7a\u95f4\u5c40\u90e8\u6027\uff0c\u63d0\u524d\u52a0\u8f7d\u9644\u8fd1\u7684\u5185\u5b58 \uff08\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u51cf\u5c11\u4e86 Major Page Fault\uff09</li> <li>\u5982\u679c\u4e00\u6761\u6307\u4ee4\u80fd\u540c\u65f6\u8bbf\u95ee\u591a\u4e2a Page: Multiple Page Faults</li> </ul> <p>Page Fault: \u5982\u4f55\u627e\u5230 Free Frame</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u7ef4\u62a4\u4e00\u4e2a free-frame list</p> <p>Worst Case \u4e0b\u7684 Demand Paging \u5168\u8fc7\u7a0b:</p> <p></p> <p></p> <p></p> <p>\u7eff\u7ebf: Thread 0\uff1b\u7ea2\u7ebf: Thread 1</p> <p>EAT \u8ba1\u7b97:</p> <p></p> <p>\u5982\u679c\u8981 PF \u7684 overhead \u5c0f\u4e8e 10%\uff0c\u8981\u6c42 40 \u4e07\u6b21\u8bbf\u5b58\u624d\u80fd\u51fa\u4e00\u6b21 PF\uff0c\u771f\u5b9e\u7cfb\u7edf\u4e2d\u8fdc\u5c0f\u4e8e 10%</p> <ul> <li> <p>\u6709 Locality \u548c Page Cache \uff08\u6587\u4ef6\u63d0\u524d\u7f13\u5b58\u5230\u5185\u5b58\u91cc\uff09\u4e24\u79cd\u673a\u5236</p> </li> <li> <p>Copy-on-write</p> </li> <li> <p>More efficient fork (copy-on-write)</p> </li> <li>vfork syscall</li> </ul> <p></p> <p></p> <p>Ditry CoW \u63d0\u6743\u6f0f\u6d1e</p> <p>Page Replacement: \u5982\u679c\u5185\u5b58\u88ab\u5360\u7528\u5149\u4e86\uff0c\u5982\u4f55\u66ff\u6362\uff1f</p> <ol> <li>\u5982\u4f55\u66ff\u6362</li> </ol> <p></p> <ol> <li>\u9009\u53d6\u673a\u5236</li> </ol> <p></p> <p>Page Replacement</p> <p>Algorithms:</p> <ul> <li>FIFO \u5bf9\u5e94 Scheduling \u7684 FCFS</li> <li>OPT \u5bf9\u5e94 Scheduling \u7684 Shortest Job First / Shortest Remaining Time First</li> <li>LRU</li> <li>Least Frequent Use / Most Frequent Use</li> </ul> <p>\u5fc5\u8003: \u7ed9\u4e00\u4e32 Page Number \u548c\u7b97\u6cd5\uff0c\u8ba1\u7b97 Page Fault \u6570\u91cf</p> <p>\u8c03\u5ea6: \u7518\u7279\u56fe\uff0cAverage Waiting Time, Average Turnaround Time</p> <p>Thrashing: Locality \u4e0d\u9ad8 Page \u88ab\u9891\u7e41\u6362\u8fdb\u6362\u51fa\uff0cCPU \u4f7f\u7528\u7387\u4e0d\u9ad8</p> <p>Alan Ott's Slides:</p> <p>Vitrual Memory</p> <p>Advantages</p> <ul> <li>\u6bcf\u4e2a\u7a0b\u5e8f\u6709\u4e0d\u540c\u7684\u5185\u5b58\u6620\u5c04\uff08\u6709\u81ea\u5df1\u7684\u9875\u8868\uff09</li> <li>\u5929\u7136\u7684\u5185\u5b58\u4fdd\u62a4</li> <li>Kernel RAM \u5bf9\u7528\u6237\u6001\u8fdb\u7a0b\u662f\u4e0d\u53ef\u89c1\u7684</li> <li>\u786c\u4ef6\u53ef\u4ee5\u901a\u8fc7 MMIO \u6620\u5c04\u5230\u5185\u5b58\u5730\u5740\u7a7a\u95f4</li> </ul> <p>\u4e24\u4e2a\u5730\u5740\u7a7a\u95f4</p> <ul> <li>\u7269\u7406\u5730\u5740\u7a7a\u95f4</li> <li>Hardware: DMA, peripherals</li> <li>\u865a\u62df\u5185\u5b58\u7a7a\u95f4</li> <li>Load/Store instructions (RISC)</li> <li>push pop... (CISC)</li> </ul> <p>MMU: \u8d1f\u8d23\u5730\u5740\u8f6c\u6362\uff0c\u4e00\u822c\u5728 CPU \u5185\u90e8\uff0c\u548c RAM Controller \u4e0d\u540c</p> <p>Lazy Allocation: \u5185\u5b58\u5206\u914d\u53d1\u751f\u5728 access \u65f6</p> <p>\u865a\u62df\u5730\u5740\u672c\u5206\u6210\u4e24\u90e8\u5206\uff0c\u4f4e\u5730\u5740\u7ed9\u7528\u6237\uff0c\u9ad8\u5730\u5740\u7ed9\u5185\u6838</p> <p>32-bit \u4e2d\uff0c\u5728 0xC0000000 \u5206\u5f00 (\u5185\u6838 1G, \u7528\u6237 3G\uff0c\u5728 CONFIG_PAGE_OFFSET)</p> <p><code>/proc/self/map</code> \u770b\u8d77\u6765\u867d\u7136\u662f f \u5f00\u5934\uff0c\u4f46\u524d\u9762\u8fd8\u6709 4 \u4e2a 0\uff0c\u4f9d\u7136\u662f User Space \u7684</p> <p>\u7528\u6237\u6001\u8fdb\u7a0b context switch: \u5207\u6362 mm_struct \uff08\u4ee5\u53ca\u91cc\u9762\u7684 PGD\uff09</p> <p><code>switch_mm</code></p> <p></p> <p></p> <p>64-bit \u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u5927\u5c0f\u533a\u5206:</p> <p>48 \u4f4d\u865a\u62df\u5730\u5740: </p> <p>0xFFFF0000_00000000-0xFFFFFFFF_FFFFFFFF \u5185\u6838\u7a7a\u95f4: 256 TiB (2^48 - 2^64)</p> <p>0x00000000_00000000-0x0000FFFF_FFFFFFFF\u7528\u6237\u7a7a\u95f4: 256 TiB</p> <p>\u4e2d\u95f4\u7684\u65e0\u6620\u5c04</p> <p>39 \u4f4d\u865a\u62df\u5730\u5740:</p> <p>\u524d25\u4f4d\u51680: \u7528\u6237\uff0c\u51681: \u5185\u6838\uff0c\u5404 512 GiB</p> <p>\u7528\u4f4e39\u4f4d</p> <p>Kernel Logic Address</p> <p>\u5982\u679c\u7269\u7406\u5185\u5b58\u6bd4\u8f83\u5c0f</p> <p>\u76f4\u63a5\u53d6\u4f4e 896 MiB = 1 GiB - 128 MiB\uff0cLinear Map \u6620\u5c04\u5230 Kernel Logic Address \uff08\u7ebf\u6027\u6620\u5c04\uff09</p> <p>\u5bf9\u4e8e\u66f4\u5927\u5185\u5b58\u7684\u7269\u7406\u8bbe\u5907\uff0c\u53d6\u9ad8 128 MiB \u4e0d\u505c\u5730\u91cd\u590d\u5229\u7528\uff0c\u65e2\u53ef\u4ee5\u7ed9\u5185\u6838\u7528\uff0c\u4e5f\u53ef\u4ee5\u7ed9\u7528\u6237\u8fdb\u7a0b\u7528</p> <p>\u53ef\u4ee5\u4fdd\u8bc1\u66f4\u5927\u7684\u5185\u5b58\u53ef\u4ee5\u6620\u5c04\u5230\u5185\u6838\u7a7a\u95f4\uff08\u5229\u7528\u8fd9 128 MiB \u7684\u7a7a\u95f2\uff09</p> <p>low map, high map, fixed map....</p> <p>\u4ece\u7269\u7406\u5730\u5740\u627e\u865a\u62df\u5730\u5740: <code>rmap</code> reverse mapping</p> <p>Mass-Storage Strucutre</p> <p></p> <p>Hard Disk</p> <ul> <li>Position time = seek time + rotational latency</li> <li>Positioning time: Random-Access time</li> </ul> <p>Disk Scheduling: \u51cf\u5c11 Access Time</p> <p>Algorithms:</p> <ul> <li>FCFS</li> <li>SSTF (Shortest Seek Time First)</li> <li>SCAN, C-SCAM</li> <li>LOOK, C-LOOK</li> </ul> <p>\u7ed9 Cylinder Number, \u8ba1\u7b97</p> <p>FCFS:</p> <p></p> <p>\u79fb\u52a8\u8ddd\u79bb: 640</p> <p>SSTF: \u6bcf\u6b21\u53bb\u6700\u8fd1\u7684 Cylinder\uff0c\u4e0d\u4e00\u5b9a\u6700\u4f18\uff0c\u6709\u53ef\u80fd Starvation</p> <p>SCAN: \u7535\u68af\u7b97\u6cd5\uff0c\u4ece\u4e00\u5934\u5230\u53e6\u4e00\u5934\uff0c\u518d\u4ece\u53e6\u4e00\u5934\u56de\u6765\uff0c236</p> <p></p> <p>C-SCAN: \u4ece\u5c0f\u5f80\u5927\u626b\uff0c\u5230\u5934\u5c31\u5f520\uff0c\u6bcf\u6b21\u90fd\u4ece\u4e00\u4e2a\u65b9\u5411\u626b</p> <p>LOOK / C-LOOK: \u4e0d\u7528\u8d70\u5230\u5934\uff0c\u8d70\u5230\u6700\u5927 / \u6700\u5c0f\u5373\u53ef</p> <p>SSD \u6ca1\u6709\u78c1\u5934\uff0cFCFS \u5373\u53ef</p> <p>IO \u6bd4\u8f83\u591a: </p> <p>IO \u4e0d\u591a: </p> <p>\u8003\u70b9:</p> <p>CPU Scheduling \u8ba1\u7b97 average waiting \u548c average turnarount</p> <p>Page Replacement \u8ba1\u7b97 Page Fault \u6570\u91cf</p> <p>\u78c1\u76d8\u8c03\u5ea6\u8ba1\u7b97\u79fb\u52a8\u8ddd\u79bb</p> <p>Linux:</p> <p>ramdisk \u8d1f\u8d23\u5728\u4efb\u4f55\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u4e4b\u524d\uff0c\u63d0\u4f9b\u4e00\u4e2a\u57fa\u672c\u7684\u6587\u4ef6\u7cfb\u7edf</p> <p>NAS, NFS, iSCSI, infiniband</p> <p>RAID: Redundant array of indexpensive / independent disks</p> <ul> <li>Data Mirroring: \u6570\u636e\u5907\u4efd</li> <li>Data Striping: \u628a\u6570\u636e\u5207\u5206\u5230\u591a\u4e2a\u78c1\u76d8\u4e0a</li> <li>ECC</li> </ul> <p>RAID 0: \u53ea\u5206\u6563\uff0c\u4e0d\u5197\u4f59</p> <p>RAID 1: \u53ea\u5197\u4f59\uff081:1 \u955c\u50cf\uff09</p> <p>RAID 2\uff1a bit-level \u5206\u6563\u5230\u6240\u6709\u78c1\u76d8\uff0c\u7528 Hamming Code \u7ea0\u9519</p> <p></p> <p>4 bit data + 3 bit parity</p> <p>\u7f3a\u70b9: \u6309\u6bd4\u7279\u5206\u6563\uff0c\u7c92\u5ea6\u592a\u5c0f\uff0c\u5f88\u96be\u62fc\u8d77\u6765\uff0c\u4e14\u5199\u4e00\u4e2a\u5b57\u8282\u5c31\u8981\u542f\u52a8 7 \u5757\u78c1\u76d8</p> <p>RAID 3:</p> <p>Bit-interleaved parity: \u4ee5 bit \u4e3a\u7c92\u5ea6\u7684 RAID 5</p> <p>RAID 4:</p> <p>Block \u4e3a\u7c92\u5ea6\u7684 RAID 2</p> <p>RAID 5:</p> <p>Block-interleaved parity</p> <p></p> <p>RAID can only detect and recover from disk failures</p> <p>ZFS</p> <p></p> <p></p> <p>I/O System</p> <p>Polling: CPU \u4e3b\u52a8\u8be2\u95ee</p> <p>Interrupt: CPU \u88ab\u52a8</p> <p>CISC: \u6bd4\u5982 x86 \u7684 in, out, ins, outs</p> <p>RISC: mmio: memory mapped I/O</p> <p>Polling \u4f1a\u9020\u6210 busy waiting (spin lock, mutex)</p> <p>Spin lock - Semaphore: \u7ebf\u7a0b sleep \u4e22\u5230 waiting queue \u7136\u540e reschedule</p> <p>Intrrupt:</p> <ul> <li>T1 \u8bbf\u95ee Device\uff0c\u968f\u540e sleep \u5e76\u628a task_struct \u6302\u5230 Device \u7684 waiting queue \u4e0a\uff0c\u6b64\u65f6 context-switch \u5230\u5176\u4ed6\u7ebf\u7a0b\u7ee7\u7eed\u8fd0\u884c</li> <li>Device \u51c6\u5907\u597d\u540e\u53d1 interrupt\uff0cdata \u51c6\u5907\u597d\uff0c\u628a T1 \u653e\u5230 ready queue</li> </ul> <p></p> <p>Polling vs Interrupt: </p> <p>Interrupt vector:</p> <p>ARM64 \u7684 system call</p> <p>\u8c03\u7528 system call \u7684\u6307\u4ee4: svc, hvc, smc</p> <p>\u5bf9\u5e94\u7684 interrupt: el0_sync: Synchronous 64-bit el0 (User Mode), 5.14 \u5f00\u59cb\u5c31\u6ca1\u6709\u8fd9\u4e2a\u6807\u53f7\u4e86</p> <p></p> <p>RISC-V: do_trap_ecall_u</p> <p>interrupt \u4e5f\u6709 core affinity</p> <p>DMA: direct memory access</p> <p></p> <p>\u7a0b\u5e8f: \u901a\u8fc7 ioctl \u7cfb\u7edf\u8c03\u7528\u8bfb\u53d6\u6587\u4ef6\uff0cioctl \u5bf9 driver \u53d1\u9001\u6307\u4ee4</p> <p>driver: \u9a71\u52a8\uff0c\u8dd1\u5728 CPU \u4e0a</p> <p>controller: \u5728\u8bbe\u5907</p> <p>DMA: xPU \u4e0a\u7684 kernel \u80fd\u8bbf\u95ee CPU \u7684\u5171\u4eab\u5185\u5b58</p> <p>I/O \u8bbe\u5907\u7684\u79cd\u7c7b:</p> <p></p> <p>I/O \u8bbe\u5907\u7684 waiting queue:</p> <p></p> <p></p> <p>fd_array \u7684 index \u5c31\u662f file_descriptor</p> <p>\u6240\u6709\u4e1c\u897f\u90fd\u62bd\u8c61\u6210\u6587\u4ef6\uff0c\u65b9\u4fbf\u4f7f\u7528\uff08\u8bfb\u5199\u6587\u4ef6\u7684\u65b9\u5f0f\u90fd\u89e3\u51b3\u4e86\uff09</p> <p>I/O \u8bf7\u6c42\u7684\u5168\u6d41\u7a0b:</p> <p></p> <p>\u63d0\u5347\u6027\u80fd\u7684\u65b9\u6cd5</p> <ol> <li>smart controller</li> <li>DMA</li> </ol> <p>\u65b0\u7684\u8bbe\u5907\u5230\u6765\u7684\u65f6\u5019\u7528 register \u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf</p> <p></p> <p>\u6587\u4ef6\u7cfb\u7edf</p> <p>CPU is abstracted to Process</p> <p>Memory is absctracted to Address Space</p> <p>Storage is abstracted to Filesystem</p> <p>\u6587\u4ef6: Contiguous logical space for storing information</p> <p>File Operations: Create, Open, Read/Write, Close</p> <p>Directory Structure: single level, two level, acyclic graph, graph, tree ...</p> <p>On-disk: \u6389\u7535\u4ecd\u7136\u5728</p> <ul> <li>Boot control block</li> <li>Volume control block</li> <li>Directory</li> <li>Per-file File Control Block</li> </ul> <p>Im-memory structures: \u6389\u7535\u5c31\u6ca1\uff0c\u4f46\u662f\u53ef\u4ee5\u4ece on-disk \u7684\u4fe1\u606f\u4e2d\u6784\u9020\u51fa\u6765</p> <ul> <li>mount table</li> <li>directory cache</li> <li>global open-file table, per-process open-file table</li> </ul> <p>File Control Block</p> <p>\u8fdb\u7a0b\u5143\u4fe1\u606f -&gt; PCB: task_struct, \u6587\u4ef6\u5143\u4fe1\u606f -&gt; FCB: inode</p> <p>\u6587\u4ef6\u5143\u4fe1\u606f: \u540d\u5b57\uff0c\u5927\u5c0f\uff0c\u6743\u9650\uff0c\u65f6\u95f4\u6233</p> <p>\u76f8\u5173\u6307\u4ee4: <code>stat</code> (statistics), <code>file</code></p> <p></p> <p>Change: \u5143\u4fe1\u606f\u4fee\u6539\uff0cModify: \u6587\u4ef6\u5185\u5bb9\u4fee\u6539</p> <p>\u6587\u4ef6\u7684\u9501: Mandatory Lock &amp; Advisory Lock</p> <p>\u6587\u4ef6\u8bbf\u95ee: \u987a\u5e8f sequential access \u548c\u968f\u673a direct access / random access</p> <p></p> <p>\u78c1\u76d8 - Partition / Volume - Directory</p> <p>Linux \u91cc\u76ee\u5f55\u5c31\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u6587\u4ef6</p> <p>\u76ee\u5f55\u7ed3\u6784: </p> <ul> <li>One level, two level</li> <li>Tree</li> <li>Acyclic-Graph (\u65e0\u73af\u56fe): \u5b58\u5728\u591a\u4e2a\u6587\u4ef6\u6307\u5411\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9</li> <li>General Graph Directory \u6709\u73af\u7684</li> </ul> <p>\u94fe\u63a5:</p> <ul> <li>Hardlink</li> <li>\u5f15\u7528\u8ba1\u6570</li> <li>Softlink</li> </ul> <p>Mount: \u544a\u8bc9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e00\u4e2a\u65b0\u7684\u6587\u4ef6\u7cfb\u7edf\u6765\uff0c\u6302\u8f7d\u5230\u4e00\u4e2a\u6587\u4ef6\u76ee\u5f55\u4e0b\uff0c\u4e8e\u662f\u91cc\u9762\u7684\u6587\u4ef6\u5c31\u6709\u4e86\u8def\u5f84</p> <p>nosuid - Block the operation of suid, and sgid bits.</p> <p>suid: set uid\uff0c\u7528\u6587\u4ef6\u62e5\u6709\u8005\u7684\u6743\u9650\u6267\u884c</p> <p>ACL: Access Control List</p> <p>\u6587\u4ef6\u7cfb\u7edf:</p> <p>Early - Hierarchical - NFS - Journaling File System - Modern File System</p> <p>\u6587\u4ef6\u7cfb\u7edf\u7684\u5c42\u7ea7: \u516d\u5c42\u6a21\u578b</p> <p></p> <p>\u6587\u4ef6\u7cfb\u7edf\u7684\u6570\u636e\u7ed3\u6784: On-disk, In-memory</p> <p>\u6587\u4ef6\u7684\u64cd\u4f5c:</p> <ol> <li>Open</li> </ol> <p>\u5148\u53bb Global Open-file Table (\u7cfb\u7edf\u7ea7\u522b) \u627e\u662f\u5426\u6709\u8bb0\u5f55\uff0c</p> <p>\u5982\u679c\u6709\u8bb0\u5f55\uff08\u8bf4\u660e\u6709\u5176\u4ed6\u8fdb\u7a0b\u6253\u5f00\u8fc7\u8fd9\u4e2a\u6587\u4ef6\uff09\uff0c\u5c31\u53ef\u4ee5\u76f4\u63a5\u62ff\u5230\u6240\u6709\u7684\u4fe1\u606f\uff0c</p> <p>\u6b64\u65f6\u76f4\u63a5\u5728 Per-process Open-file Table \u6dfb\u52a0\u4e00\u9879\u6307\u5411 Global Open-file Table</p> <p>\u8fd9\u91cc\u7684 index \u5c31\u662f\u6587\u4ef6\u63cf\u8ff0\u7b26 File Descriptor</p> <p></p> <p>\u5982\u679c\u6ca1\u6709\u8bb0\u5f55\uff0c\u5c31\u8981\u8d70 directory structure\uff0c\u62ff\u5230\u6587\u4ef6\u7684 inode (FCB)\uff0c\u5c31\u80fd\u627e\u5230\u6587\u4ef6\u4e86</p> <p>inode \u662f\u5185\u5b58\u91cc\u9762\u7684\u7ed3\u6784</p> <p>\u7136\u540e\u5728 Global Open-file table \u6dfb\u52a0\u4e00\u9879</p> <p></p> <p>\u5982\u679c Open Count \u53d8\u6210 0\uff0c\u5c31\u53ef\u4ee5\u5c06\u5176\u4ece Global Open-file Table \u79fb\u9664\u4e86</p> <p>\u968f\u540e\u76f8\u540c\u7684 File Descriptor \u53ef\u4ee5\u88ab\u91cd\u7528</p> <p>Inode number is only unique within a file system</p> <p>VFS: \u64cd\u4f5c\u7cfb\u7edf\u5982\u4f55\u5904\u7406\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf</p> <p>VFS separates FS generic operations from implementation details</p> <p>\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf: FAT32, Btrfs, zfs, ext4, NTFS, APFS</p> <p>All problems in computer science can be solved by another level of indirection, except for the problem of too many layers of indirection. \u2014\u2014 David Wheeler</p> <p>\u518d\u52a0\u4e00\u5c42\u62bd\u8c61: Virtual Filesystem \u4e3a\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u7531\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u6765\u63d0\u4f9b\u5b9e\u73b0</p> <p></p> <p>VFS \u6709\u56db\u79cd object:</p> <ul> <li>superblock</li> <li>inode</li> <li>dentry</li> <li>file</li> </ul> <p>Linux \u4e2d\u7684 VFS\uff0c\u6bcf\u4e2a\u64cd\u4f5c\u90fd\u662f\u51fd\u6570\u6307\u9488\uff0c\u6307\u5411\u5177\u4f53\u7684\u5b9e\u73b0</p> <p></p> <p>\u8c03\u7528 write:</p> <p></p> <p>\u5728\u6587\u4ef6\u88ab\u52a0\u8f7d\u8fdb\u6765\u7684\u65f6\u5019\uff0cf_op \u5c31\u6307\u5411\u4e86\u5bf9\u5e94\u6587\u4ef6\u7cfb\u7edf\u7684\u5b9e\u73b0</p> <p>\u5982 ext4_file_operations, nfs_file_operations</p> <p></p> <p>Directory Implementation:</p> <p>Linux \u4e0a directory = file, Windows \u4e0a directory != file</p> <p>Directory \u662f\u7279\u6b8a\u7684\u6587\u4ef6\uff0c\u5b83\u7684 data block \u5185\u5b58\u7684\u662f directory entry (\u76ee\u5f55\u9879), \u6bd4\u5982 ext2_dir_entry</p> <p></p> <p>\u4e3a\u4ec0\u4e48\u9700\u8981 <code>rec_len</code>? \u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u4fbf\u4e8e\u67e5\u627e\u65f6\u5019\u7684\u8df3\u8f6c</p> <p>dentry \u7ed3\u6784\u4f53\u8981\u6c42 4 byte \u5bf9\u9f50\uff0c\u53ef\u4ee5\u7528\u6765 reuse</p> <p>\u627e\u5bf9\u5e94 dentry \u7684\u4ee3\u7801:</p> <p></p> <p>\u6bd4\u5982 /home/stu/ \u4e0b\u9762\u6709\u56db\u4e2a\u6587\u4ef6 a, bb, ccc, text</p> <ul> <li>4 \u4e2a\u76ee\u5f55\u9879</li> <li>\u683c\u5f0f\u5c31\u662f 4 \u4e2a dir_entry</li> </ul> <p>\u627e\u4e00\u4e2a\u6587\u4ef6\uff0c\u8981\u4ece\u6839\u76ee\u5f55 / \u7684 inode \u5f00\u59cb\u627e home\uff0c\u4ee5\u6b64\u7c7b\u63a8</p> <p>\u627e\u6587\u4ef6\u7684\u65b9\u5f0f:</p> <p>Linear List</p> <p>Hash Table: \u9002\u5408\u5c0f\u6587\u4ef6\u591a\u7684\u60c5\u5f62</p> <p>\u521b\u5efa\u6587\u4ef6\u7684\u8fc7\u7a0b:</p> <p>\u521b\u5efa inode (FCB), \u7136\u540e\u5728\u7236\u76ee\u5f55\u91cc\u5199\u4e00\u4e2a\u76ee\u5f55\u9879</p> <p>Disk Block Allocation:</p> <p>Contiguous, Linked, Indexed</p> <p>Contiguous Allocation</p> <p>\u8fde\u7eed\u5206\u914d\u7684\u4e0d\u5e78\u548c\u5185\u5b58\u662f\u4e00\u6837\u7684\uff0c\u6587\u4ef6\u5927\u5c0f\u5f88\u96be\u53d8\u5927\uff0c\u8fd9\u662f\u6570\u7ec4\u7684\u95ee\u9898</p> <p>\u4e3a\u4e86\u89e3\u51b3\u6570\u7ec4\u7684\u95ee\u9898\uff0c\u5c31\u80fd\u60f3\u5230\u7528\u94fe\u8868</p> <p>Linked Allocation FAT \u6587\u4ef6\u7cfb\u7edf\u4f7f\u7528</p> <p>\u6bcf\u4e2a Data Block \u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u4e0b\u4e00\u4e2a Data Block</p> <p>\u7f3a\u70b9: \u6162\uff0cPointer \u5360\u7a7a\u95f4\uff0c\u6d6a\u8d39\u4e86\u7a7a\u95f4\uff0c\u800c\u4e14\u5982\u679c Pointer \u65ad\u4e86\uff08\u6bd4\u5982\u574f\u5757\uff09\uff0c\u540e\u9762\u7684\u5185\u5bb9\u5168\u4e22\u4e86</p> <p>Index Allocation</p> <p>\u4e00\u6bb5\u8fde\u7eed\u7684\u7a7a\u95f4\uff0c\u5b58\u4e00\u4e2a\u6570\u7ec4\uff0c\u6bcf\u9879\u5b58\u50a8\u5bf9\u5e94 data block \u7684 index</p> <p>inode \u7684 i \u5c31\u662f index \u7684\u610f\u601d</p> <p>\u4f46\u662f\u8d85\u5927\u6587\u4ef6\u4e00\u4e2a block \u90fd\u653e\u4e0d\u4e0b index\uff0c\u5c31\u6709\u4e86\u591a\u7ea7</p> <p>Linked Free Space: \u628a\u7a7a\u95f2\u7684\u7a7a\u95f4\u7528\u94fe\u8868\u8fde\u8d77\u6765</p> <p>\u4f18\u70b9: O(1), \u4e0d\u5360\u7a7a\u95f4</p> <p>\u7f3a\u70b9: \u94fe\u8868\u53ef\u80fd\u65ad\uff0c\u4e14\u96be\u4ee5\u627e\u5230\u8fde\u7eed\u7684\u7a7a\u95f4</p> <p>Grouping and Counting</p> <p>\u6307\u9488\u6307\u5411\u8d77\u59cb\u7684 block + \u7a7a\u95f2\u957f\u5ea6\uff0c\u7136\u540e\u6307\u5411\u4e0b\u4e00\u4e2a \u8d77\u59cb block + \u7a7a\u95f2\u957f\u5ea6</p> <p>\u6587\u4ef6\u7cfb\u7edf\u6027\u80fd\u7684\u4f18\u5316</p> <ul> <li>Cache</li> <li>Asynchrnous write \u5199\u5230 cache\uff0c\u5f02\u6b65\u5199\u5165</li> <li>Free-behind and Read-ahead</li> <li>\u8bfb\u6709\u7684\u65f6\u5019\u4f1a\u6bd4\u5199\u6162\uff0c\u4e3a\u4ec0\u4e48\uff1f</li> <li>\u7b2c\u4e00\u6b21\u8bfb: \u4e00\u7ea7\u4e00\u7ea7\u53bb\u67e5 inode, dentry \u5f88\u6162</li> </ul> <p>Page Cache: \u5148\u628a\u6587\u4ef6\u8bfb\u5230\u5185\u5b58\u91cc\uff0c\u5982\u679c\u7528\u5230\u4e86\uff0c\u90a3\u5c31\u5f88\u5feb\uff0c\u5982\u679c\u6ca1\u7528\u5230\uff0c\u90a3\u4e5f\u4e0d\u5f71\u54cd\uff08Page Cache \u7684\u4f18\u5148\u7ea7\u662f\u6700\u4f4e\u7684\uff0c\u5185\u5b58\u4e0d\u591f\u4f1a\u4f18\u5148\u6e05\u9664\u6389\uff09</p> <p>Log Structured File Systems</p> <p>\u589e\u5f3a\u7cfb\u7edf\u7a33\u5b9a\u6027</p> <p>Directory: inode \u5230 symbolic name \u7684\u6620\u5c04</p> <p>\u521b\u5efa\u6587\u4ef6\u7684\u7cfb\u7edf\u8c03\u7528:</p> <pre><code>int open(const char *pathname, int flags, ...\n                  /* mode_t mode */ );\n</code></pre> <p>\u6587\u4ef6\u63cf\u8ff0\u7b26\u8fd4\u56de\u7684\u662f per process \u7684 open file table \u7684 index</p> <p>\u4f46\u662f\u6709\u4e09\u4e2a\u7279\u6b8a\u7684:</p> <ul> <li>0: stdin </li> <li>1: stdout</li> <li>2: stderr</li> </ul> <p>\u7528\u6237\u80fd\u62ff\u5230\u7684\u6700\u5c0f\u7684 fd \u662f\u4ece 3 \u5f00\u59cb\u7684</p> <p></p> <p>Blocks \u662f\u5e95\u5c42\u7684 block \u6570\u91cf\uff0c512 \u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u6240\u4ee5 4096 / 512 = 8</p> <p>\u5220\u9664\u6587\u4ef6</p> <pre><code>strace rm test.cpp\n</code></pre> <p></p> <p>\u7cfb\u7edf\u8c03\u7528\u65f6 unlinkat</p> <p>unlinkat \u53ea\u662f\u5220\u9664\u4e86\u76ee\u5f55\u9879</p> <ul> <li>Hard Link: \u786c\u94fe\u63a5\u662f\u4e00\u4e2a\u76ee\u5f55\u9879 dentry</li> <li><code>.</code> \u662f\u6307\u5411\u5f53\u524d\u76ee\u5f55\u7684\u786c\u94fe\u63a5</li> <li><code>..</code> \u662f\u6307\u5411\u7236\u76ee\u5f55\u7684\u786c\u94fe\u63a5</li> <li> <p>Soft link: \u8f6f\u94fe\u63a5\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u6587\u4ef6\u5b58\u50a8\u7684\u662f\u88ab\u94fe\u63a5\u7684\u6587\u4ef6\u7684 path</p> </li> <li> <p>\u4e24\u4e2a\u786c\u94fe\u63a5\u6307\u5411\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u5b83\u7684 inode \u4e00\u6837\u5417?</p> </li> </ul> <p></p> <p>\u53ea\u662f\u653e\u4e86\u4e00\u4e2a\u76ee\u5f55\u9879\uff0c\u5e76\u6ca1\u6709\u751f\u6210\u65b0\u7684 inode</p> <p>\u786c\u94fe\u63a5\u4f1a\u589e\u52a0 Link \u6570\u91cf\uff0c\u53ef\u4ee5\u7528 <code>ll</code> \u770b\u5230\uff0c\u5220\u9664\u4e00\u4e2a\u6587\u4ef6\u5b9e\u9645\u4e0a\u662f unlink\uff0c\u53ea\u8981 link \u6570\u8fd8\u6ca1\u53d8\u6210 0\uff0c\u8fd9\u4e2a\u6587\u4ef6\u5c31\u8fd8\u5728</p> <ol> <li>\u4e24\u4e2a\u8f6f\u94fe\u63a5\u6307\u5411\u540c\u4e00\u4e2a\u6587\u4ef6\uff0c\u5b83\u7684 inode \u4e00\u6837\u5417?clear</li> </ol> <p></p> <p>inode \u4e0d\u4e00\u6837\uff0c\u8f6f\u94fe\u63a5\u521b\u5efa\u4e86\u65b0\u7684\u6587\u4ef6</p> <p>inode \u5728\u786c\u76d8\u548c\u5185\u5b58\u90fd\u6709:</p> <p>\u5185\u5b58\u4e2d:</p> <ul> <li>ext2_inode_info \u5305\u542b\u4e86\u4e00\u4e2a vfs_inode</li> </ul> <p>\u786c\u76d8\u91cc:</p> <ul> <li>ext2_inode</li> </ul> <p>\u786c\u76d8\u4e0a\u7684:</p> <p></p> <p>\u5185\u5b58\u4e2d\u7684:</p> <p></p> <p>\u6587\u4ef6\u5206\u914d\u9700\u8981\u5206\u914d inode, data block, bitmap, super block \u7684\u7a7a\u95f4</p> <p>\u5982\u679c\u5b58\u4e86\u5f88\u591a\u5c0f\u6587\u4ef6\uff0cinode \u7528\u5149\u4e86\uff0c\u5373\u4f7f\u786c\u76d8\u8fd8\u6709\u7a7a\u95f4\uff0c\u4e5f\u4e0d\u80fd\u5b58\u65b0\u6587\u4ef6\u4e86</p> <p>\u4e00\u4e2a inode \u5360 256 byte\uff0c\u4e00\u4e2a block 4 KiB \u53ef\u4ee5\u653e 16 \u4e2a inode,</p> <p>5 \u4e2a block \u53ef\u4ee5\u653e 80 \u4e2a inode\uff0c\u4e5f\u5c31\u662f\u53ef\u4ee5\u5b58 80 \u4e2a\u76ee\u5f55\u6216\u6587\u4ef6</p> <p></p> <p>\u8981\u627e\u7b2c 32 \u4e2a inode\uff0c\u53ef\u4ee5\u8ba1\u7b97\u504f\u79fb\u91cf\uff0c\u6bd4\u5982\u56fe\u7247\u4e2d\u7684\u662f 20 KiB\u7684\u4f4d\u7f6e</p> <p>\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\u53d1\u751f\u7684\u5168\u90e8\u64cd\u4f5c:</p> <p></p> <p>open(bar) \u7684\u8fc7\u7a0b:</p> <ol> <li>\u8bfb / \u7684 inode\uff0c\u627e / \u7684 data block \u7684 id</li> <li>\u8bfb / \u76ee\u5f55\u7684 data block\uff0c\u4e5f\u5c31\u662f directory entry\uff0c\u627e foo</li> <li>\u8bfb foo \u7684 inode\uff0c\u627e foo \u7684 data block \u7684 id</li> <li>\u8bfb /foo \u7684 dat block, \u627e bar</li> <li>\u8bfb /foo/bar \u7684 inode\uff0c\u653e\u5230\u5185\u5b58\u91cc\u7684 Open File Table\uff0c\u8fd4\u56de\u4e00\u4e2a index \u4f5c\u4e3a file descriptor</li> </ol> <p>read() \u7684\u8fc7\u7a0b:</p> <ol> <li>\u8bfb /foo/bar \u7684 inode, \u627e\u5b83\u7684 data block id</li> <li>\u8bfb /foo/bar \u7684 data block, \u5185\u5bb9\u8fd4\u56de\u7ed9\u7528\u6237</li> <li>\u5199 inode\uff0c\u66f4\u65b0 access time \uff08\u8fd9\u4e00\u6b65\u9020\u6210\u4e86 over head\uff09</li> </ol> <p>\u5199 /foo/bar</p> <p></p> <p>create \u7684\u8fc7\u7a0b:</p> <ul> <li>\u524d\u9762\u56db\u4e2a read \u662f\u627e\u5230 foo \u7684 dir entry \u53d1\u73b0\u6ca1\u6709\u8be5\u6587\u4ef6\uff0c\u8981\u521b\u5efa dir entry</li> <li>\u8bfb\u53d6 /foo \u7684 inode \u7684 bitmap\uff0c\u7533\u8bf7\u4e00\u5757\u7a7a\u95f4\uff0c\u4f5c\u4e3a bar \u7684 inode\uff0c\u4fee\u6539 bitmap</li> <li>\u7ed9 /foo \u7684 dir entry \u6dfb\u52a0\u4e00\u9879\uff0c\u8bb0\u5f55 bar \u7684 inode \u53f7</li> <li>\u521d\u59cb\u5316 bar \u7684 inode\uff0c\u540c\u65f6\u8fd9\u4e2a inode \u653e\u5230\u5185\u5b58\u91cc Open File Table\uff0c\u8fd4\u56de fd</li> <li>\u5199 foo \u7684 inode \u4fee\u6539 modification time, access time \u7b49</li> </ul> <p>write:</p> <ul> <li> <p>\u8bfb bar \u7684 inode, \u627e\u5230\u7b2c\u4e00\u4e2a data block \u7684\u4f4d\u7f6e\uff0c\u53d1\u73b0\u6307\u5411\u7a7a\uff0c\u9700\u8981\u7533\u8bf7\u4e00\u4e2a data block</p> </li> <li> <p>\u8bfb bitmap, \u627e\u4e00\u5757\u7a7a\u95f2\u7684 data block\uff0c\u7528\u6765\u5b58\u50a8 bar</p> </li> <li>\u4fee\u6539 bitmap \u7533\u8bf7\u8fd9\u5757\u7a7a\u95f4</li> <li>\u5199\u5165 bar \u7684 data block</li> <li>\u5199 bar \u7684 inode \u4fee\u6539 modification time \u548c access time</li> </ul> <p>Security and Protection</p> <p>\u5de5\u4e1a\u754c\u7684\u95ee\u9898: KubeCon, Linux Summit, BlackHat</p> <p>\u671f\u672b\u8003:</p> <p>40\u9053\u9009\u62e9\u9898 x1.5 60'</p> <p>10\u9053\u586b\u7a7a\u9898 x1 10'</p> <p>3\u9053\u5927\u9898 30': \u5185\u5b58\u5fc5\u8003\uff08\u6bd4\u8f83\u96be\uff09\uff0cSynchronization \u5fc5\u8003\uff0cScheduling \u5fc5\u8003</p> <p></p> <p>\u4e3a\u4e86\u5b89\u5168\uff0cOS \u5f15\u5165\u7684\u673a\u5236:</p> <p>CPU - privileged mode</p> <p>Memory - partition and paging</p> <p>IO - Access Control List</p> <p>\u5b89\u5168\u6807\u51c6:</p> <p>TCSEC (\u7f8e\u56fd\u56fd\u9632\u90e8, 1983)</p> <p></p> <p>ITSEC (\u6b27\u76df, 1991)</p> <p>CC: Common Criteria (\u7f8e\u56fd\u548c\u6b27\u6d32)</p> <p>GB17859</p> <p></p> <p>Threat Model</p> <ol> <li>Hack Attack: Pure Software</li> <li>Shack Attack: Limited Hardware</li> <li>Lab Attack: Unlimited Hardware</li> </ol> <p>SELinux, NSA</p> <p>\u53ef\u4fe1\u57fa (TCB, Trusted Computing Base): set of components(hardware, software) which you trust</p> <p>\u8f93\u5165\u5bc6\u7801\u65f6\u7684 TCB: OS, \u767b\u9646\u7684\u7a0b\u5e8f\uff0c\u952e\u76d8\uff0cCPU, ...</p> <p>Application -&gt;Operating System -&gt; BIOS -&gt; Hardware / Architecture</p> <p>\u4e0a\u5c42\u9700\u8981\u4fe1\u4efb\u4e0b\u9762\u6240\u6709\u5c42\u6b21</p> <p>Attack surface \u53ef\u653b\u51fb\u9762</p> <p>Defense in-depeth \u7eb5\u6df1\u9632\u5fa1</p> <p></p> <p>\u4f8b\u5982: \u6d4f\u89c8\u7f51\u9875\u7684\u7eb5\u6df1\u9632\u5fa1:</p> <p></p> <p>Protection</p> <p>Access Control: \u6839\u636e\u8bbf\u95ee\u5b9e\u4f53\u7684\u8eab\u4efd\u9650\u5236\u5176\u8bbf\u95ee\u5bf9\u8c61</p> <ul> <li> <p>Authentication \u8bc1\u660e\u4f60\u662f\u4f60</p> </li> <li> <p>\u6839\u636e preshared knowlege: \u4f60\u77e5\u9053\u4ec0\u4e48\uff08\u5bc6\u7801\uff09\uff0c\u4f60\u6709\u4ec0\u4e48\uff08usb-key\uff09\uff0c\u4f60\u662f\u4ec0\u4e48\uff08\u6307\u7eb9\uff09</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u7ed9\u4f60\u521b\u5efa\u4e00\u4e2a user struct, \u7528\u6765\u505a\u6807\u8bc6 identifier</p> <ul> <li>Unix: 32 bit number stored in cred structure</li> <li>Windows NT: 27 byte number: access token</li> </ul> <p></p> </li> <li> <p>\u6743\u9650\u77e9\u9635\uff0c\u7528\u6237\u548c\u6587\u4ef6\u592a\u591a\u5c31\u5f88\u5bb9\u6613\u6491\u7206</p> </li> <li> <p>RBAC: Role-Based Access Control: \u628a\u7528\u6237\u5206\u6210\u4e0d\u540c\u7684\u89d2\u8272</p> </li> <li> <p>Linux \u7684\u5bc6\u7801\u5b58\u50a8\u5728 /etc/shadow \u6587\u4ef6\u4e2d:</p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p></p> </li> <li> <p>\u5b89\u5353\uff0ciOS, macOS \u7b49\u5bc6\u7801\u5b58\u50a8\u5728 TEE \u4e2d</p> </li> <li> <p>\u4e3a\u4e86\u89e3\u51b3 setuid \u7684\u7c92\u5ea6\u592a\u7c97\u7684\u95ee\u9898\uff0cLinux \u5f15\u5165\u4e86 capability</p> <ul> <li>\u5c06 root \u6743\u9650\u62c6\u5206</li> <li>\u76ee\u524d\u6709 0-40 \u5171 41 \u4e2a capability</li> <li>https://elixir.bootlin.com/linux/v6.12.6/source/include/uapi/linux/capability.h#L114</li> </ul> </li> <li> <p></p> </li> <li> <p>Reference Monitor:</p> </li> <li> <p></p> </li> <li> <p>\u6700\u5927\u7684\u8981\u6c42\u662f reference monitor \u4e0d\u53ef\u88ab\u7ed5\u8fc7 non-bypassable</p> </li> <li> <p></p> </li> </ul> <p>\u9632\u62a4: \u9875\u8868\u53d6\u6d88 X \u4e0d\u53ef\u6267\u884c</p> <p></p> <p></p> <ul> <li></li> <li> <p>Authorization \u6388\u6743</p> </li> <li> <p>Auditing: \u5ba1\u8ba1\uff0c\u8bb0\u5f55\u4f60\u505a\u4e86\u4ec0\u4e48</p> </li> <li> <p>Reference Monitor</p> </li> </ul> <p>\u671f\u672b\u590d\u4e60</p> <p>3 \u5f20 A4\uff0c\u53ef\u4ee5\u6253\u5370</p> <p>\u82f1\u8bed\u51fa\u5377\uff0c\u53ef\u4ee5\u7528\u4e2d\u6587\u4f5c\u7b54</p> <p>\u5c3d\u91cf\u5199 16\u8fdb\u5236\uff0c\u5c3d\u91cf\u7528 KiB, MiB, GiB</p> <p>Computer Architecture</p> <p>\u4e09\u5927\u4ef6: CPU, Memory, I/O System</p> <p>Data type \u4e0d\u4f1a\u5b58\u5230\u5185\u5b58\u91cc\uff0c\u5185\u5b58\u91cc\u5c31\u662f raw bits\uff0c\u610f\u4e49\u53d6\u51b3\u4e8e\u4f60\u600e\u4e48\u89e3\u91ca\u5b83</p> <p>OS: An Overview</p> <p>OS \u5b9a\u4e49: \u8d44\u6e90\u7684 abstractor and allocator</p> <p>OS \u7684\u5de5\u4f5c: \u7531\u4e8b\u4ef6\u9a71\u52a8\uff0c\u7b49\u5f85 event: interrupt \u548c exception</p> <p>OS \u7684\u539f\u5219: lean &amp; mean</p> <p>\u786c\u4ef6\u6dfb\u52a0 Mode Bit \u533a\u5206\u4e86\u7279\u6743\u6a21\u5f0f\uff0c\u6307\u4ee4\u5206\u6210\u4e86 privileged \u548c unprivileged</p> <p>\u72ed\u4e49\u7684\u64cd\u4f5c\u7cfb\u7edf: Kernel Mode \u91cc\u9762\u7684\u5185\u6838</p> <p>\u5e7f\u4e49\u7684\u64cd\u4f5c\u7cfb\u7edf: \u5305\u542b\u7528\u6237\u6001\u7684\u4e00\u4e9b\u670d\u52a1</p> <p>\u91cd\u70b9: OS Events</p> <p>syscall: \u5185\u6838\u4e3a\u7528\u6237\u63d0\u4f9b\u7684\u63a5\u53e3\uff0c\u8ba9\u7528\u6237\u80fd\u591f\u4f7f\u7528\u5185\u6838\u63d0\u4f9b\u7684\u7279\u6743\u529f\u80fd</p> <p>timer: \u65f6\u949f\u4e2d\u65ad\u8ba9\u64cd\u4f5c\u7cfb\u7edf\u6709\u4e86\u65f6\u95f4\u7684\u6982\u5ff5</p> <p>OS \u63d0\u4f9b\u7684\u670d\u52a1:</p> <ul> <li>\u8fdb\u7a0b\u7ba1\u7406</li> <li>\u5185\u5b58\u7ba1\u7406</li> <li>\u5b58\u50a8\u7ba1\u7406</li> <li>I/O \u7ba1\u7406</li> </ul> <p>OS Structure</p> <p>Linux \u7684 structure: monolithic \u5b8f\u5185\u6838</p> <p>\u91cd\u70b9\u90e8\u5206: Linkers and Loaders, System Call</p> <p>Syscall: syscall number: syscall table \u7684 index</p> <p></p> <p>44944a \u7684 0x1 \u662f syscall number\uff0c\u800c\u4e0d\u662f stdout \u7684\u6587\u4ef6\u63cf\u8ff0\u7b26</p> <p></p> <p>Linker and Loader</p> <p></p> <p>static link, dynamic link </p> <p></p> <p>\u7ea2\u6846\u7684\u6bcf\u4e2a\u6bb5\u662f elf \u7684\u54ea\u90e8\u5206\uff0c\u4e3a\u4ec0\u4e48\u4e0a\u9762\u662f\u52a8\u6001\u94fe\u63a5\u7684, loader \u5e72\u4e86\u4ec0\u4e48</p> <p>bss: \u672a\u521d\u59cb\u5316\u7684\u5168\u5c40\u53d8\u91cf\uff0c\u5728 elf \u6587\u4ef6\u4e2d\u5927\u5c0f\u4e3a 0</p> <p></p> <p></p> <p>static linked \u56de\u5230\u7528\u6237\u6001\u6700\u5148\u8fd0\u884c\u7684\u662f _start</p> <p>dynamic linked \u7a0b\u5e8f\u56de\u5230\u7528\u6237\u6001\u6700\u5148\u8fd0\u884c\u7684\u662f loader</p> <p></p> <p></p> <p>Policy \u548c Mechanism \u8981\u5206\u5f00</p> <p>\u8fdb\u7a0b</p> <p>\u8fdb\u7a0b: resource allocation &amp; protection unit \u8d44\u6e90\u5206\u914d\u548c\u4fdd\u62a4\u5355\u5143</p> <p>\u7ebf\u7a0b: execution unit \u6267\u884c\u5355\u5143</p> <p>\u795e\u56fe:</p> <p></p> <p>\u8fdb\u7a0b\u7684\u5185\u5bb9:</p> <p></p> <p>\u6765\u81ea elf \u7684: code, data section</p> <p>PCB: Process Control Block</p> <p></p> <p>\u6bcf\u4e2a\u72b6\u6001:</p> <ul> <li>new: fork, exec syscall</li> <li>terminated: wait(), zombie, orphan</li> <li>ready, running, waiting: context-switch, schedule</li> </ul> <p></p> <p>fork:</p> <ul> <li> <p>\u80fd\u8fd4\u56de\u4e24\u4e2a\u503c\u7684\u539f\u56e0: \u590d\u5236\u4e86\u4e00\u4efd user space context, \u4fee\u6539\u4e86 pt_regs</p> </li> <li> <p>fork \u4e4b\u540e\u7684\u8fdb\u7a0b\u4e0d\u4f1a\u7acb\u5373\u8fd0\u884c\uff0c\u8fdb\u5165 ready queue</p> </li> <li> <p>\u8fd9\u91cc\u4ee3\u7801\u6bcf\u4e00\u884c\u90fd\u5f88\u91cd\u8981:</p> </li> </ul> <p></p> <p>exec \u540e\u9762\u7684\u6307\u4ee4\u4e0d\u4f1a\u518d\u8fd0\u884c\uff0celf \u90fd\u88ab\u5237\u6389\u4e86</p> <p>wait: \u5982\u679c parent \u6ca1\u6709\u7528 wait \u56de\u6536 task_struct, \u90a3\u4e48\u5c31\u4f1a\u53d8\u6210 zombie</p> <p>orphan: \u7236\u8fdb\u7a0b\u6302\u4e86</p> <p>signal: SIGINT, SIGKILL</p> <p></p> <p>Context Switch:</p> <p>\u4e24\u4e2a\u91cd\u8981\u7684: \u6362 sp, \u6362 pc (\u4fee\u6539 ra, ret)</p> <p>pt_regs \u548c task_struct \u7684\u4f4d\u7f6e</p> <p></p> <p>\u7528\u6237\u6001\u7684\u4e24\u4e2a\u7ebf\u7a0b A -&gt; B \u7684\u5207\u6362\u5fc5\u987b\u8fdb\u5165\u5185\u6838\u6001\u8fdb\u884c\uff0c\u56e0\u4e3a\u4ed6\u51b3\u5b9a\u4e86 CPU \u7684\u4f7f\u7528\u6743\u5f52\u8c01\uff0c\u5fc5\u987b\u7531\u64cd\u4f5c\u7cfb\u7edf\u6765\u7ba1\u7406</p> <p></p> <p>\u7528\u6237\u6001 context \u5b58\u5728\u4e86\u54ea:</p> <p>\u5185\u6838\u6001 context \u5b58\u5728\u4e86\u54ea:</p> <p>Scheduling \u7b97\u6cd5:</p> <p>\u8981\u6c42\u4f1a\u753b\u7518\u7279\u56fe\uff0cAverage waiting, Average turnaround time</p> <p>\u6709\u591a\u4e2a start \u600e\u4e48\u7b97</p> <ul> <li>First come first serve</li> <li>Shortest Job First: \u6700\u4f18\u89e3\uff0c\u4f46\u662f\u53ea\u80fd\u79bb\u7ebf (\u4e24\u4e2a\u7248\u672c preemptive, non-preemptive)</li> <li>Round Robin</li> <li>Priority</li> <li>MQ, Multi level feedback queue</li> </ul> <p>IPC: \u8003\u70b9\u4e0d\u591a</p> <p>\u91cd\u70b9: Message Passing, Shared Memory</p> <p>Thread:</p> <p>\u7ebf\u7a0b: execution unit \u6267\u884c\u5355\u5143</p> <p>\u5171\u4eab\u548c\u4e0d\u5171\u4eab\u7684\u5185\u5bb9:</p> <p></p> <p>\u795e\u56fe:</p> <p></p> <p>\u795e\u56fe2:</p> <p></p> <p>\u4f18\u70b9: \u521b\u5efa\u548c\u4e0a\u4e0b\u6587\u5207\u6362\u90fd\u8f7b\u91cf\uff0c\u5929\u7136\u8d44\u6e90\u5171\u4eab\uff0cresponsiveness, scalability \u9ad8</p> <p>\u7f3a\u70b9: \u9694\u79bb\u5dee</p> <p>\u7528\u6237\u7ebf\u7a0b\u548c\u5185\u6838\u7ebf\u7a0b\u6620\u5c04:</p> <p></p> <p>\u6700\u7b80\u5355\uff0c\u4f46\u662f overhead \u5b9e\u9645\u4e0a\u4f1a\u5927\u4e00\u4e9b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u8981\u5206\u914d task_struct \u5185\u6838\u6808</p> <p>Synchronization:</p> <ul> <li>Peterson \u4e0d\u73b0\u5b9e\u4f46\u662f\u7b80\u5355</li> </ul> <p>\u89e3\u51b3 data race \u9700\u8981\u6ee1\u8db3\u4e0b\u9762\u4e09\u4e2a\u6761\u4ef6 \u91cd\u8981</p> <ul> <li>Mutual Exclusion: \u4e92\u65a5\u8bbf\u95ee</li> <li>Progress: \u7a7a\u95f2\u8ba9\u8fdb: \u5982\u679c\u6ca1\u6709\u7ebf\u7a0b\u5728 critical section, \u9700\u8981\u8ba9\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u591f\u8fdb\u5165 (make progress)</li> <li>Bounded waiting: \u6709\u9650\u7b49\u5f85, \u907f\u514d starvation</li> </ul> <p>\u786c\u4ef6:</p> <ul> <li>memory barrier: \u592a\u96be\u4e86\u4e0d\u8003</li> <li>hardware instruction: \u5fc5\u8003</li> <li>compare and swap: x86, arm .. \u591a\u6838: \u9501\u603b\u7ebf</li> <li>test-and-set</li> </ul> <p>Spin lock / Mutex Lock: \u672c\u8282\u8bfe\u8ba4\u4e3a\u4f1a busy waiting</p> <p>Semaphore: wait \u548c signal \u8981\u6c42\u539f\u5b50\u64cd\u4f5c (S-&gt;value++ \u548c S-&gt;value--\uff0c\u4e00\u822c\u7528 spin lock \u5b9e\u73b0)</p> <p>Deadlock:</p> <p>\u53d1\u751f deadlock \u9700\u8981\u56db\u4e2a\u6761\u4ef6:</p> <ol> <li>Mutual Exclusion: \u8d44\u6e90\u4e92\u65a5</li> <li>Hold and wait: \u62ff\u7740\u4e00\u90e8\u5206\u8d44\u6e90\u53bb\u8bf7\u6c42\u53e6\u4e00\u4e2a\u8d44\u6e90</li> <li>No preemption: \u8d44\u6e90\u4e0d\u80fd\u88ab\u62a2\u5360</li> <li>Circular wait: Resource Allocation Graph \u4e2d\u5f62\u6210\u4e86\u4e00\u4e2a\u73af\uff0c\u4e14\u73af\u5305\u62ec\u4e86\u6240\u6709\u7684 process</li> </ol> <p>Deadlock Prevention: \u6253\u7834\u6b7b\u9501\u5f62\u6210\u6761\u4ef6</p> <ol> <li>Mutual Exclusion: \u5982\u679c\u662f\u5171\u4eab\u8d44\u6e90\u5c31\u4e0d\u505a\u6210\u4e92\u65a5\u7684</li> <li>Hold and wait: \u53ea\u80fd\u62ff\u6240\u6709\u8d44\u6e90\u6216\u8005\u4e0d\u62ff\uff0c\u5982\u679c\u6ca1\u6709\u6240\u6709\u8d44\u6e90\u5c31\u653e\u5f03 - \u6709 starvation \u95ee\u9898</li> <li>No preemption: \u7ebf\u7a0b\u53ef\u4ee5\u62a2\u5360\u5176\u4ed6\u7ebf\u7a0b\u7684\u8d44\u6e90</li> <li>Circular wait: \u52a0\u4e00\u4e2a\u8bf7\u6c42\u8d44\u6e90\u7684\u987a\u5e8f</li> </ol> <p>\u6b7b\u9501\u7684\u56db\u4e2a\u8bdd\u9898:</p> <ul> <li>Prevention: \u6253\u7834\u6b7b\u9501\u5f62\u6210\u6761\u4ef6</li> <li>Avoidance: safe state, bankers algorithm</li> <li>Detection</li> <li>Recovery: Kill Process</li> </ul> <p>Main Memory</p> <ol> <li>Partition: base + limit \u5bc4\u5b58\u5668\uff0c\u7528 offset \u505a\u903b\u8f91\u5730\u5740</li> </ol> <p>Fixed Partition: Internal Fragmentation \u5185\u90e8\u788e\u7247\uff0c\u5185\u90e8\u6d6a\u8d39</p> <p>Variable Partition: External Fragmentation \u5916\u90e8\u788e\u7247\uff0c\u7a7a\u95f2\u7684\u592a\u5c0f\u4e86\u6ca1\u6cd5\u7528</p> <p>First-fit</p> <p>Best-fit</p> <p>Worst-fit</p> <ol> <li> <p>Segmentation</p> </li> <li> <p>Segment table: limit, base, permission</p> </li> </ol> <p></p> <ul> <li> <p>Segment number \u662f segment table \u7684 index</p> </li> <li> <p>Paging: fixed partition \u6240\u4ee5\u6ca1\u6709\u5916\u90e8\u788e\u7247</p> </li> </ul> <p>Page: \u865a\u62df\uff0cFrame: \u7269\u7406</p> <p>PTE: Valid, Permission, PFN</p> <p>TLB:</p> <p></p> <p>\u9875\u8868: Hierarchy (\u591a\u7ea7\u9875\u8868\u8282\u7701\u7a7a\u95f4), Hash, Inverted</p> <p>Page Table Walk:</p> <p></p> <p>32 \u4f4d: 10+10+12</p> <p>SV39: 9+9+9+12</p> <p></p> <p></p> <p>Virtual Memory:</p> <p>Advanced Techniques:</p> <ul> <li>Demand Paging \u91cd\u8981\u91cd\u8981\u91cd\u8981</li> </ul> <p>\u795e\u56fe:</p> <p></p> <p>\u795e\u56fe2: Page Fault \u68c0\u67e5\u7684\u662f vm_area_struct</p> <p></p> <p></p> <ul> <li>Copy-on-write</li> <li>Page replacement algorithm: FIFO, optimal, LRU \u8ba1\u7b97 Page Fault \u6b21\u6570</li> <li>Allocation of frames</li> <li>Thrasing: a process is busy swapping pages in and out</li> <li>\u7cfb\u7edf\u4e00\u76f4\u5fd9\u7740\u5c06\u5185\u5b58\u6362\u8fdb\u6362\u51fa\uff0c\u5bfc\u81f4 CPU \u5360\u7528\u7387\u4e0d\u9ad8</li> <li>\u539f\u56e0: Total number of physical frames &lt; Total size of locality</li> <li>Working set</li> </ul> <p>Mass-Storage Structure:</p> <p>Disk scheduling: \u7ed9\u51fa\u7684\u662f\u67f1\u9762\u53f7</p> <p></p> <p>Flash: FCFS \u5c31\u597d\u4e86</p> <p>Acceses time, Position time</p> <p>Access time = seek time + rotational latency</p> <p>I/O Hardware</p> <p>Polling, interrupt</p> <p>Filesystem \u91cd\u8981</p> <p>File Attribute \u5b58\u50a8\u5728 FCB \u4e2d</p> <p>Linux ext4 \u7684 FCB \u53eb\u505a inode</p> <p>\u5b58\u50a8\u6587\u4ef6\u540d\uff0c\u65f6\u95f4\u6233\u7b49\u7b49</p> <p>File Descriptor: Per-process open-file table \u7684 index\uff0c\u4e0d\u80fd\u8de8\u8fdb\u7a0b\uff0c\u4f46\u662f\u662f\u7ebf\u7a0b\u95f4\u5171\u4eab\u7684</p> <p>0-stdin, 1-stdout, 2-stderr</p> <p>VFS: \u5b9a\u4e49\u4e86\u7edf\u4e00\u7684\u63a5\u53e3\uff0c\u4f1a\u88ab\u201c\u5b9e\u4f8b\u5316\u201d\u6210\u4e0d\u540c\u7684\u6587\u4ef6\u7cfb\u7edf\u64cd\u4f5c</p> <p>Directory Implementation: Soft link, hard link</p> <p>\u91cd\u70b9: dentry \u7684\u7ed3\u6784: \u7528\u6765\u505a file name \u5230 inode \u7684\u8f6c\u6362\uff0c\u4ece\u4eba\u80fd\u8bfb\u7684\u8f6c\u6362\u6210\u673a\u5668\u80fd\u8bfb\u7684</p> <p>\u76ee\u5f55\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4f46\u662f data block \u88c5\u7684\u662f dentry</p> <p>Allocation:</p> <ul> <li>\u8fde\u7eed\u5206\u914d: \u4f18\u70b9 seek time \u4f4e\uff0c\u7f3a\u70b9\u6587\u4ef6\u6ca1\u6cd5\u53d8\u957f extend</li> <li>Linked Allocation: \u7528\u4e8e FAT \u6587\u4ef6\u7cfb\u7edf</li> <li>Indexed Allocation: \u4f18\u70b9\u65b9\u4fbf\u6269\u5c55\uff0c\u7f3a\u70b9\u81ea\u5df1\u5360\u4e86\u4e00\u4e2a data block \u5c0f\u6587\u4ef6\u6709\u9ad8 overhead</li> </ul> <p>Inode ext2 \u6700\u5927\u7684\u6587\u4ef6\u6709\u591a\u5927?</p> <ul> <li>direct blocks</li> <li>single indirect</li> <li>double indirect</li> <li>triple indirect</li> </ul> <p>Free space management: bitmap</p> <p>Hard link: \u4e0d\u80fd\u8de8\u6587\u4ef6\u7cfb\u7edf\uff0c\u662f\u4e00\u4e2a\u76ee\u5f55\u9879\uff0cinode \u4e0d\u80fd\u8de8\u6587\u4ef6\u7cfb\u7edf\uff0cFAT \u8fde inode \u90fd\u6ca1\u6709</p> <p>Soft link: \u53ef\u4ee5\u8de8\u6587\u4ef6\u7cfb\u7edf\uff0c\u56e0\u4e3a\u76ee\u5f55 path \u53ef\u4ee5\u8de8\u6587\u4ef6\u7cfb\u7edf</p> <p>super block</p>"},{"location":"courses/24fall/principles-of-programming-languages/","title":"\u7f16\u7a0b\u8bed\u8a00\u539f\u7406","text":""},{"location":"courses/24fall/principles-of-programming-languages/practice/","title":"\u8bfe\u4ef6\u4f8b\u9898","text":""},{"location":"courses/24fall/principles-of-programming-languages/practice/#\u03bb-\u6f14\u7b97","title":"\u03bb \u6f14\u7b97","text":"<ol> <li> <p>\\(\\lambda\\) \u6f14\u7b97\u6d88\u6b67\u7ea6\u5b9a:</p> <ul> <li>\u2f00\u4e2a\u51fd\u6570\u62bd\u8c61\u7684\u51fd\u6570\u4f53\u5c06\u5c3d\u6700\u2f24\u53ef\u80fd\u5411\u53f3\u6269\u5c55<ul> <li>\\(\\lambda x.MN\\) \u662f\u51fd\u6570\u62bd\u8c61 \\(\\lambda x.(MN)\\)</li> <li>\\((\\lambda x.M)N\\) \u662f\u51fd\u6570\u5e94\u7528</li> </ul> </li> <li>\u51fd\u6570\u5e94\u2f64\u662f\u5de6\u7ed3\u5408\u7684<ul> <li>\\(MNP\\) \u610f\u5473\u7740 \\((MN)P\\) \u800c\u975e \\(M(NP)\\)</li> </ul> </li> </ul> <p>\u4f8b\u5b50:</p> <ul> <li>\\(\\lambda x.(\\lambda y.xyz)x = \\lambda x.((\\lambda y.((xy)z))x)\\)</li> <li>\\((\\lambda x.\\lambda y.\\lambda z. M)NPQ = ((((\\lambda x.\\lambda y.\\lambda z M)N)P)Q)\\)</li> </ul> </li> <li> <p>\u81ea\u7531\u53d8\u91cf\u4e0e\u7ed1\u5b9a\u53d8\u91cf:</p> </li> <li> <p>\u95ed\u9879: t \u5c01\u95ed: \\(FV(t)=\\varnothing\\). \\(t\\) \u76f8\u5bf9 \\(t'\\) \u5c01\u95ed: \\(FV(t)\\cap BV(t')=\\varnothing\\)</p> </li> </ol>"},{"location":"courses/24fall/theory-of-computation/","title":"\u8ba1\u7b97\u7406\u8bba","text":""},{"location":"courses/24fall/theory-of-computation/undecidability/","title":"\u671f\u672b\u590d\u4e60","text":""},{"location":"courses/24fall/theory-of-computation/undecidability/#\u53ef\u5224\u5b9a\u6027\u4e0e\u56fe\u7075\u673a","title":"\u53ef\u5224\u5b9a\u6027\u4e0e\u56fe\u7075\u673a","text":"<p>\u9898\u76ee\u6765\u81ea: COMP481 Review Problems - Luay K. Nakhleh</p> <p>\u7b54\u6848: COMP481 Review Problems (Solution) - Luay K. Nakhleh</p>"},{"location":"courses/24fall/theory-of-computation/undecidability/#\u5224\u5b9a\u5de5\u5177","title":"\u5224\u5b9a\u5de5\u5177","text":""},{"location":"courses/24fall/theory-of-computation/undecidability/#rices-theorem","title":"Rice's Theorem","text":""},{"location":"courses/24fall/theory-of-computation/undecidability/#\u603b\u7ed3","title":"\u603b\u7ed3","text":"<p>\u5224\u5b9a\u95ee\u9898 - \u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</p>"},{"location":"courses/24fall/theory-of-computation/undecidability/#\u8bad\u7ec3\u9898","title":"\u8bad\u7ec3\u9898","text":"\u6bd4\u8f83\u6709\u610f\u4e49\u7684\u9898 <p>\\(L_1\\) \u5230 \\(L_4\\) \u7684\u5206\u6790\u662f\u540e\u9762\u5f88\u591a\u9898\u76ee\u7684\u57fa\u7840, \u8fd8\u6709 \\(L_{26}\\) \u6784\u9020\u503c\u5f97\u5b66\u4e60.</p> <p>\\(L_{39}\\) \u4f5c\u4e3a\u4e00\u4e2a\u9012\u5f52\u8bed\u8a00\uff0c\u5176\u5206\u6790\u4e0d\u662f\u5f88\u5bb9\u6613\uff0c\u53ef\u4ee5\u5b66\u4e60\u4e00\u4e0b.</p> <p>\u5bf9\u4ee5\u4e0b\u7ed9\u5b9a\u7684\u8bed\u8a00\uff0c\u5224\u65ad\u5b83\u4eec: (I) \u9012\u5f52, (II) \u9012\u5f52\u53ef\u679a\u4e3e\u4e14\u975e\u9012\u5f52, (III) \u975e\u9012\u5f52\u53ef\u679a\u4e3e. \u6839\u636e Few Shot \u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u6211\u5c55\u5f00\u4e86\u524d\u51e0\u9898\u7684\u7b54\u6848\uff0c\u53ef\u4ee5\u6478\u7d22\u4e00\u4e0b\u5927\u81f4\u601d\u8def.</p> <ol> <li> <p>\\( L_1 = \\{ '' M '' \\mid M \\) is a TM and there exists an input on which \\( M \\) halts in less than \\( |'' M ''| \\) steps \\(\\} \\)</p> Answer <p>\\(L_1\\) \u662f\u9012\u5f52\u7684\uff0c\u5b58\u5728\u56fe\u7075\u673a \\(M^*\\) \u5224\u5b9a \\(L_1\\):</p> <ol> <li>\u7ed9\u5b9a\u8f93\u5165 \\(w\\), \u5982\u679c \\(w\\) \u4e0d\u662f\u5408\u6cd5\u56fe\u7075\u673a\u7f16\u7801\uff0c\u62d2\u7edd (\u4e4b\u540e\u7701\u7565\u8fd9\u6b65)</li> <li>\u8ba1\u7b97 \\(|'' M ''|\\)</li> <li>\u679a\u4e3e \\(M\\) \u7684\u6240\u6709\u957f\u5ea6\u4e0d\u8d85\u8fc7 \\(|'' M ''|\\) \u7684\u8f93\u5165\uff0c\u6a21\u62df \\(M\\) \u7684\u8fd0\u884c\uff0c\u5982\u679c\u5728 \\(|'' M ''|\\) \u6b65\u5185\u505c\u673a\uff0c\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u8fd9\u4e2a\u4f8b\u5b50\u91cd\u70b9\u5728\u4e8e\u6b65\u6570\u6709\u9650\uff0c\u540c\u65f6\u8fd9\u4e5f\u610f\u5473\u7740\u8f93\u5165\u4e32\u957f\u5ea6\u6709\u9650 (\u679a\u4e3e\u66f4\u957f\u7684\u8f93\u5165\u4e32\u6ca1\u6709\u610f\u4e49\uff0c\u56e0\u4e3a\u8d70\u4e0d\u5230)\uff0c\u56fe\u7075\u673a\u53ef\u4ee5\u4e00\u4e00\u679a\u4e3e.</p> </li> <li> <p>\\( L_2 = \\{ '' M '' \\mid M \\) is a TM and \\( |L(M)| \\leq 3 \\) \\(\\} \\)</p> Answer <p>\\(L_2\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684, \u4e0b\u9762\u8bc1\u660e \\(\\overline{H} \\le L_2\\), \u5373 \\(\\overline{H}\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_2\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u64e6\u6389\u8f93\u5165\u4e32 \\(x\\)</li> <li>\u5c06 \\(''Mw''\\) \u62f7\u8d1d\u5230\u5e26\u4e0a</li> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c \\(M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\uff0c\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u4e0d\u63a5\u53d7\u4efb\u4f55\u4e32 \\(\\Rightarrow |L(M')|\\le 3 \\Rightarrow M' \\in L_2\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow |L(M')|&gt;3 \\Rightarrow M' \\notin L_2\\)</li> </ul> <p>\u6269\u5c55: \u5982\u679c\u5c06\u8bed\u8a00\u6539\u4e3a \\( L = \\{ '' M '' \\mid M \\) is a TM and \\( |L(M)| = 3 \\) \\(\\} \\): \u53ef\u4ee5\u4efb\u9009\u4e00\u4e2a\u6709 3 \u4e2a\u4e32\u7684\u96c6\u5408 \\(A\\), \u5728 \\(M'\\) \u7684\u7b2c\u4e00\u6b65\u524d\u6dfb\u52a0\u5982\u679c \\(x \\in A\\) \u5c31\u63a5\u53d7, \u8fd9\u6837\u4e00\u6765 \\(''Mw'' \\in \\overline{H} \\Rightarrow L(M') = 3\\).</p> </li> <li> <p>\\( L_3 = \\{ '' M '' \\mid M \\) is a TM and \\( |L(M)| \\geq 3 \\) \\(\\} \\)</p> Answer <p>\\(L_3\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u4e14\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e:</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M'\\), \u5bf9\u4e8e\u8f93\u5165 \\(''M''\\):</p> <ol> <li>\u679a\u4e3e\u6240\u6709 \\(M\\) \u53ef\u80fd\u7684\u8f93\u5165\u4e32 \\(x\\), \u6a21\u62df \\(M\\) \u7684\u8fd0\u884c</li> <li>\u5982\u679c\u627e\u5230\u4e86\u81f3\u5c11 3 \u4e2a\u505c\u673a\u7684\u8f93\u5165\uff0c\u5c31\u63a5\u53d7</li> </ol> <p>\u4e0a\u9762\u7684\u679a\u4e3e\u9700\u8981\u662f\u201c\u5bf9\u89d2\u7ebf\u5f0f\u201d\u7684\uff0c\u5148\u679a\u4e3e\u6240\u6709\u957f\u5ea6\u4e3a 1 \u7684\u4e32\uff0c\u5355\u6b65\u6a21\u62df\uff0c\u518d\u679a\u4e3e\u957f\u5ea6\u4e3a 2 \u7684\u4e32\uff0c\u4e24\u6b65\u6a21\u62df\uff0c\u4ee5\u6b64\u7c7b\u63a8. (\u540e\u9762\u7684\u9898\u90fd\u5982\u6b64, \u5c31\u4e0d\u518d\u4e00\u4e00\u7ea6\u5b9a\u4e86)</p> <p>\u975e\u9012\u5f52:</p> <p>\u8bc1\u660e \\(H \\le L_3\\), \u5373 \\(H\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_3\\).</p> <p>\u5bf9\u4e8e \\(H\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u64e6\u6389\u8f93\u5165\u4e32 \\(x\\)</li> <li>\u5c06 \\(''Mw''\\) \u62f7\u8d1d\u5230\u5e26\u4e0a</li> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c \\(M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a\uff0c\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow |L(M')|\\ge 3 \\Rightarrow M' \\in L_3\\)</li> <li>\\(''Mw'' \\notin H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u4e0d\u63a5\u53d7\u4efb\u4f55\u4e32 \\(\\Rightarrow |L(M')|&lt;3 \\Rightarrow M' \\notin L_3\\)</li> </ul> <p>\u8fd9\u4e00\u90e8\u5206\u7684\u6784\u9020\u548c\u4e0a\u4e00\u9898\u5f88\u76f8\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u662f\u4ece \\(\\overline{H}\\) \u6362\u6210\u4e86 \\(H\\), \u8fd9\u53d6\u51b3\u4e8e\u6761\u4ef6\u4e2d\u7684\u4e0d\u7b49\u53f7\u65b9\u5411.</p> </li> <li> <p>\\( L_4 = \\{ '' M '' \\mid M \\) is a TM that accepts all even numbers \\(\\} \\)</p> Answer <p>\\(L_4\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684. \u9700\u8bc1\u660e \\(\\overline{H} \\le L_4\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u8ba1\u7b97 \\(|x|\\)</li> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u8fd0\u884c \\(|x|\\) \u6b65</li> <li>\u5982\u679c \\(|x|\\) \u6b65\u5185\u505c\u673a\uff0c\u5c31\u62d2\u7edd\uff0c\u5426\u5219\u63a5\u53d7</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32, \u90a3\u81ea\u7136\u4e5f\u5c31\u63a5\u53d7\u4e86\u5168\u90e8\u5076\u6570 \\(\\Rightarrow M' \\in L_4\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a \\(k\\) \u6b65\u5185\u505c\u673a \\(\\Rightarrow M'\\) \u62d2\u7edd\u6240\u6709 \\(|x| \\ge k\\) \u7684\u4e32 \\(w\\) \\(\\Rightarrow M'\\) \u62d2\u7edd\u65e0\u9650\u591a\u4e2a\u5076\u6570 \\(\\Rightarrow M' \\notin L_4\\)</li> </ul> <p>\u6ce8: \u8fd9\u91cc\u5c06\u662f\u5426\u63a5\u53d7\u4e0e\u8f93\u5165\u4e32 \\(w\\) \u957f\u5ea6\u7ed3\u5408\u7684\u6280\u5de7\u503c\u5f97\u5b66\u4e60.</p> <p>\u6269\u5c55:</p> <ol> <li> <p>\u4fee\u6539\u4e3a \\(L = \\{ '' M '' \\mid M\\) is a TM that does not accept all even numbers\\(\\}\\): \u6b64\u65f6\u53d8\u6210\u9012\u5f52\u53ef\u679a\u4e3e\uff0c\u53ef\u4ee5\u7528\u56fe\u7075\u673a \\(M;\\) \u679a\u4e3e\u6240\u6709\u5076\u6570\u8f93\u5165\u7ed9 \\(M\\), \u5982\u679c \\(M\\) \u4e0d\u63a5\u53d7\u67d0\u4e2a\u5076\u6570\uff0c\u5c31\u63a5\u53d7. \u8fd9\u6837\u53ef\u4ee5\u534a\u5224\u5b9a \\(M\\) \u63a5\u53d7\u7684\u662f\u4e0d\u662f\u6240\u6709\u5076\u6570.</p> </li> <li> <p>\u4fee\u6539\u4e3a \\(L = \\{ '' M '' \\mid M\\) is a TM that rejects all even numbers\\(\\}\\): \u6b64\u65f6\u53d8\u6210 RE \u975e R, \u53ef\u4ee5\u8bc1\u660e \\(H \\le L\\). \u8fd9\u4e2a\u6539\u7248\u548c\u539f\u7248\u7684\u5173\u7cfb\uff0c\u4e0e \\(L_3\\) \u548c \\(L_2\\) \u7684\u5173\u7cfb\u76f8\u4f3c.</p> </li> </ol> </li> <li> <p>\\( L_5 = \\{ '' M '' \\mid M \\) is a TM and \\( L(M) \\) is finite \\(\\} \\)</p> Answer <p>\\(L_5\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684\uff0c\u7c7b\u4f3c \\(L_2\\) \u7684\u6784\u9020:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u4e0d\u63a5\u53d7\u4efb\u4f55\u4e32 \\(\\Rightarrow L(M') = 0\\) \u6709\u9650 \\(\\Rightarrow M' \\in L_5\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow L(M')\\) \u5e76\u975e\u6709\u9650, \\(\\Rightarrow M' \\notin L_5\\)</li> </ul> </li> <li> <p>\\( L_6 = \\{ '' M '' \\mid M \\) is a TM and \\( L(M) \\) is infinite \\(\\} \\)</p> Answer <p>\\(L_6\\) \u4e5f\u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684\uff0c\u662f\u4e0d\u662f\u548c\u60f3\u7684\u4e0d\u592a\u4e00\u6837?</p> <p>\u7528 \\(L_3\\) \u7684\u6784\u9020\u53ef\u4ee5\u8bc1\u660e \\(H \\le L_6\\), \u8fd9\u53ea\u610f\u5473\u7740 \\(L_6\\) \u662f\u975e\u9012\u5f52\u7684:</p> <ul> <li>\\(''Mw'' \\in H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow L(M')\\) \u65e0\u9650 \\(\\Rightarrow M' \\in L_6\\)</li> <li>\\(''Mw'' \\notin H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u4e0d\u63a5\u53d7\u4efb\u4f55\u4e32 \\(\\Rightarrow L(M') = 0\\) \u6709\u9650 \\(\\Rightarrow M' \\notin L_6\\)</li> </ul> <p>\u4f46\u4e8b\u5b9e\u4e0a\u4e5f\u53ef\u4ee5\u627e\u5230\u89c4\u7ea6\u8bc1\u660e \\(\\overline{H} \\le L_6\\), \u800c\u8fd9\u548c \\(L_4\\) \u7c7b\u4f3c:</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u8ba1\u7b97 \\(|x|\\)</li> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u8fd0\u884c \\(|x|\\) \u6b65</li> <li>\u5982\u679c \\(|x|\\) \u6b65\u5185\u505c\u673a\uff0c\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u4e0d\u63a5\u53d7\u4efb\u4f55\u4e32 \\(\\Rightarrow L(M') = 0\\) \u6709\u9650 \\(\\Rightarrow M' \\in L_6\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a \\(k\\) \u6b65\u5185\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709 \\(|w| \\ge k\\) \u7684\u4e32 \\(w\\) \\(\\Rightarrow L(M')\\) \u65e0\u9650 \\(\\Rightarrow M' \\notin L_6\\)</li> </ul> </li> <li> <p>\\( L_7 = \\{ '' M '' \\mid M \\) is a TM and \\( L(M) \\) is countable \\(\\} \\)</p> Answer <p>\\(L_7\\) \u662f\u9012\u5f52\u7684: \u8fd9\u662f\u5168\u90e8\u56fe\u7075\u673a\u7f16\u7801\u7684\u96c6\u5408\uff0c\u6ce8\u610f: - \u5bf9\u4e8e\u4e00\u4e2a\u8bed\u8a00\uff0c\u5176\u5185\u5bb9\u662f\u53ef\u6570\u65e0\u9650\u591a\u7684\uff0c\u6bd4\u5982\u5bf9\u4e8e \\(\\Sigma^*\\) \u53ef\u4ee5\u6309\u7167\u5b57\u5178\u5e8f\u4e00\u4e00\u679a\u4e3e\u4e32\u957f\u4e3a \\(1, 2, \\cdots\\) \u7684\u4e32\uff0c\u7ed9\u5b83\u4eec\u7f16\u53f7\uff0c\u5c31\u5efa\u7acb\u4e86\u4e0e \\(N_+\\) \u7684\u4e00\u4e00\u6620\u5c04. - \u800c\u8bed\u8a00\u7684\u4e2a\u6570\u662f\u4e0d\u53ef\u6570\u65e0\u7a77\u591a\u7684, \u662f \\(2^{\\Sigma^*}\\).</p> </li> <li> <p>\\( L_8 = \\{ '' M '' \\mid M \\) is a TM and \\( L(M) \\) is uncountable \\(\\} \\)</p> Answer <p>\\(L_8\\) \u662f\u9012\u5f52\u7684: \\(L_8=\\varnothing\\), \u6ca1\u6709\u4e00\u4e2a\u8bed\u8a00\u6709\u4e0d\u53ef\u6570\u65e0\u7a77\u591a\u4e2a\u5143\u7d20.</p> </li> <li> <p>\\( L_9 = \\{ '' M_1, M_2 '' \\mid M_1 \\) and \\( M_2 \\) are two TMs, and \\( \\varepsilon \\in L(M_1) \\cup L(M_2) \\} \\)</p> Answer <p>\\(L_9\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684:</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e:</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u53ef\u4ee5\u534a\u5224\u5b9a, \u5bf9\u4e8e\u8f93\u5165 \\(''M_1, M_2''\\), \u5e76\u884c\u6a21\u62df \\(M_1\\) \u548c \\(M_2\\):</p> <ol> <li>\u6a21\u62df \\(M_1\\) \u8f93\u5165\u4e3a \\(\\varepsilon\\)</li> <li>\u6a21\u62df \\(M_2\\) \u8f93\u5165\u4e3a \\(\\varepsilon\\)</li> <li>\u4e24\u53f0\u673a\u5668\u6709\u4e00\u4e2a\u505c\u673a\u5c31\u505c\u673a</li> </ol> <p>\u975e\u9012\u5f52:</p> <p>\u8bc1\u660e \\(H \\le L_9\\), \u5373 \\(H\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_9\\).</p> <p>\u5bf9\u4e8e \\(H\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M', M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M_1\\) \u548c \\(M_2\\) \u63a5\u53d7\u6240\u6709\u7684\u4e32 \\(\\Rightarrow \\varepsilon \\in L(M_1) \\cup L(M_2) \\Rightarrow ''M_1, M_2'' \\in L_9\\)</li> <li>\\(''Mw'' \\notin H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M_1\\) \u548c \\(M_2\\) \u62d2\u7edd\u6240\u6709\u8f93\u5165 \\(\\Rightarrow \\varepsilon \\notin L(M_1) \\cup L(M_2) \\Rightarrow ''M_1, M_2'' \\notin L_9\\)</li> </ul> </li> <li> <p>\\( L_{10} = \\{ '' M_1, M_2 '' \\mid M_1 \\) and \\( M_2 \\) are two TMs, and \\( \\varepsilon \\in L(M_1) \\cap L(M_2) \\} \\)</p> Answer <p>\\(L_{10}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684\uff0c\u4e0e \\(L_9\\) \u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u8bc1\u660e\u9012\u5f52\u53ef\u679a\u4e3e\u6539\u6210\u4e24\u53f0\u90fd\u505c\u673a\u624d\u505c\u673a.</p> </li> <li> <p>\\( L_{11} = \\{ '' M_1, M_2 '' \\mid M_1 \\) and \\( M_2 \\) are two TMs, and \\( \\varepsilon \\in L(M_1) \\setminus L(M_2) \\} \\)</p> Answer <p>\\(L_{11}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684\uff0c\u6761\u4ef6\u7b49\u4ef7\u4e8e $\\varepsilon \\in L(M_1) $ \u4e14 \\(\\varepsilon \\notin L(M_2)\\), \u8bc1\u660e \\(\\overline{H} \\le L_{11}\\):</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u7684\u8f93\u5165 \\(''Mw''\\), \u6784\u9020\u6620\u5c04 \\(\\tau(''Mw'') = ''M_1, M_2''\\), \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c<ul> <li>\u5982\u679c \\(M\\) \u505c\u673a\uff0c\\(M_1\\) \u62d2\u7edd\uff0c\u800c \\(M_2\\) \u63a5\u53d7</li> <li>\u5982\u679c \\(M\\) \u4e0d\u505c\u673a\uff0c\\(M_1\\) \u63a5\u53d7\uff0c\\(M_2\\) \u62d2\u7edd</li> </ul> </li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow\\) \\(M_1\\) \u63a5\u53d7\u6240\u6709\u4e32\uff0c\\(M_2\\) \u62d2\u7edd\u6240\u6709\u4e32 \\(\\Rightarrow \\varepsilon \\in L(M_1) \\setminus L(M_2) = \\Sigma^* \\Rightarrow ''M_1, M_2'' \\in L_{11}\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow\\) \\(M_1\\) \u62d2\u7edd\u6240\u6709\u4e32\uff0c\\(M_2\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow \\varepsilon \\notin L(M_1) \\setminus L(M_2) = \\varnothing \\Rightarrow ''M_1, M_2'' \\notin L_{11}\\)</li> </ul> </li> <li> <p>\\( L_{12} = \\{ '' M '' \\mid M \\) is a TM, \\( M_0 \\) is a TM that halts on all inputs, and \\( ''M_0'' \\in L(M) \\} \\)</p> Answer <p>\\(L_{12}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e:</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u534a\u5224\u5b9a, \u5bf9\u4e8e\u8f93\u5165 \\(''M''\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u8f93\u5165 \\(''M_0''\\) \u7684\u60c5\u51b5, \u5982\u679c \\(M\\) \u505c\u673a\u5c31\u63a5\u53d7.</li> </ol> <p>\u975e\u9012\u5f52:</p> <p>\u4f7f\u7528 Rice's Theorem \u53ef\u4ee5\u8bc1\u660e.</p> </li> <li> <p>\\( L_{13} = \\{ '' M '' \\mid M \\) is a TM, \\( M_0 \\) is a TM that halts on all inputs, and \\( ''M'' \\in L(M_0) \\} \\)</p> Answer <p>\\(L_{13}\\) \u662f\u9012\u5f52\u7684. \\(L(M_0) = \\Sigma^*\\), \u6240\u4ee5 \\(L_{13}\\) \u662f\u6240\u6709\u56fe\u7075\u673a\u7f16\u7801\u7684\u96c6\u5408.</p> </li> <li> <p>\\( L_{14} = \\{ '' M, x '' \\mid M \\) is a TM, \\( x \\) is a string, and there exists a TM, \\( M' \\), such that \\( x \\notin L(M) \\cap L(M') \\} \\)</p> Answer <p>\\(L_{14}\\) \u662f\u9012\u5f52\u7684, \u53d6 \\(M'\\) \u62d2\u7edd\u6240\u6709\u8f93\u5165\u7684\u56fe\u7075\u673a\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6240\u6709 \\(''Mx''\\) \u90fd\u5c5e\u4e8e \\(L_{14}\\).</p> </li> <li> <p>\\( L_{15} = \\{ '' M '' \\mid M \\) is a TM, and there exists an input on which \\( M \\) halts within 1000 steps \\(\\} \\)</p> Answer <p>\\(L_{15}\\) \u662f\u9012\u5f52\u7684\uff0c\u6784\u9020\u56fe\u7075\u673a \\(M\\) \u679a\u4e3e\u6240\u6709 \\(w (|w| \\le 1000)\\), \u6a21\u62df \\(M\\) \u7684\u8fd0\u884c\uff0c\u5982\u679c\u5728 \\(1000\\) \u6b65\u5185\u505c\u673a\uff0c\u63a5\u53d7, \u5982\u679c\u90fd\u4e0d\u5b58\u5728\uff0c\u5c31\u62d2\u7edd.</p> </li> <li> <p>\\( L_{16} = \\{ '' M '' \\mid M \\) is a TM, and there exists an input whose length is less than 100, on which \\( M \\) halts \\(\\} \\)</p> Answer <p>\\(L_{16}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e:</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u534a\u5224\u5b9a, \u679a\u4e3e\u6240\u6709 \\(w (|w| &lt; 100)\\), \u6a21\u62df \\(M\\) \u7684\u8fd0\u884c\uff0c\u5982\u679c\u5b58\u5728\u4e00\u4e2a \\(w\\) \u4f7f\u5176\u505c\u673a\uff0c\u5c31\u63a5\u53d7.</p> <p>\u975e\u9012\u5f52:</p> <p>\u8bc1\u660e \\(H \\le L_{16}\\), \u5373 \\(H\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_{16}\\).</p> <p>\u5bf9\u4e8e \\(H\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mx''\\), \u6620\u5c04 \\(\\tau(''Mx'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(w\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u5728 \\(x\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u505c\u673a\u4e0e\u5426\u90fd\u4e0e \\(M\\) \u4e00\u81f4</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mx'' \\in H \\Rightarrow M\\) \u5728 \\(x\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u5bf9\u6240\u6709\u8f93\u5165\u90fd\u505c\u673a \\(\\Rightarrow \\exists w,\\ |w| &lt; 100, M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow ''M'' \\in L_{16}\\)</li> <li>\\(''Mx'' \\notin H \\Rightarrow M\\) \u5728 \\(x\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u5bf9\u6240\u6709\u8f93\u5165\u90fd\u4e0d\u505c\u673a \\(\\Rightarrow \\forall w,\\ |w| &lt; 100, M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow ''M'' \\notin L_{16}\\)</li> </ul> </li> <li> <p>\\( L_{17} = \\{ '' M '' \\mid M \\) is a TM, and \\( M \\) is the only TM that accepts \\( L(M) \\} \\)</p> Answer <p>\\(L_{17}\\) \u662f\u9012\u5f52\u7684\uff0c\\(L_{17}=\\varnothing\\), \u6ca1\u6709\u4e00\u4e2a\u56fe\u7075\u673a\u662f\u552f\u4e00\u63a5\u53d7\u81ea\u5df1\u8bed\u8a00\u7684, \u56e0\u4e3a\u53ef\u4ee5\u5bf9\u8d77\u505a\u4e00\u70b9\u70b9\u6539\u52a8\uff0c\u4e2d\u95f4\u52a0\u4e00\u4e9b\u65e0\u610f\u4e49\u52a8\u4f5c\uff0c\u6700\u540e\u8fd8\u662f\u53ef\u4ee5\u63a5\u53d7\u76f8\u540c\u7684\u8bed\u8a00.</p> </li> <li> <p>\\( L_{18} = \\{ (k, x, M_1, M_2, \\ldots, M_k) \\mid k \\) is a natural number, \\( x \\) is a string, \\( M_i \\) is a TM for all \\( 1 \\leq i \\leq k \\), and at least \\( k/2 \\) TMs of \\( M_1, \\ldots, M_k \\) halt on \\( x \\) \\(\\} \\)</p> Answer <p>\\(L_{18}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e:</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u534a\u5224\u5b9a, \u5bf9\u4e8e\u8f93\u5165 \\((k, x, M_1, M_2, \\ldots, M_k)\\), \u5e76\u884c\u6a21\u62df\u6bcf\u53f0\u56fe\u7075\u673a\u5bf9\u4e8e\u8f93\u5165 \\(x\\) \u7684\u8fd0\u884c\u60c5\u51b5\uff0c\u4e00\u65e6\u6709\u81f3\u5c11 \\(k/2\\) \u53f0\u505c\u673a\uff0c\u5c31\u63a5\u53d7.</p> <p>\u975e\u9012\u5f52:</p> <p>\u8bc1\u660e \\(H \\le L_{18}\\), \u5373 \\(H\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_{18}\\).</p> <p>\u5bf9\u4e8e \\(H\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = (1, w, M')\\), \\(M\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u505c\u673a \\(\\Rightarrow (1, w, M') \\in L_{18}\\)</li> <li>\\(''Mw'' \\notin H \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u4e0d\u505c\u673a \\(\\Rightarrow (1, w, M') \\notin L_{18}\\)</li> </ul> </li> <li> <p>\\( L_{19} = \\{ ''M'' \\mid M \\) is a TM, and \\( |M| &lt; 1000 \\) \\(\\} \\)</p> Answer <p>\\(L_{19}\\) \u662f\u9012\u5f52\u7684\uff0c\u53ef\u4ee5\u6784\u9020\u56fe\u7075\u673a \\(M\\) \u6309\u7167\u5b57\u5178\u5e8f\u679a\u4e3e\u6240\u6709\u5408\u6cd5\u7684\u957f\u5ea6 \\(&lt; 1000\\) \u7684\u56fe\u7075\u673a\u7f16\u7801.</p> </li> <li> <p>\\( L_{20} = \\{ ''M'' \\mid \\exists x, \\, |x| \\equiv_5 1, \\, \\text{and } x \\in L(M) \\} \\)</p> Answer <p>\\(L_{20}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e:</p> <p>\u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u534a\u5224\u5b9a, \u5bf9\u4e8e\u8f93\u5165 \\(''M''\\): \u679a\u4e3e\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684\u8f93\u5165 \\(x\\), \u5982\u679c\u627e\u5230\u4e00\u4e2a \\(x\\) \u4f7f\u5f97 \\(|x| \\equiv_5 1\\) \u4e14 \\(x \\in L(M)\\), \u5c31\u63a5\u53d7.</p> <p>\u975e\u9012\u5f52:</p> <p>\u4f7f\u7528 Rice's Theorem \u6216\u8005\u6784\u9020\u4e00\u4e2a\u89c4\u7ea6\uff0c\u8bc1\u660e \\(H \\le L_{20}\\) \u90fd\u53ef\u4ee5, \u6784\u9020\u7684\u8bdd\u53ef\u4ee5\u53c2\u8003 \\(L_{16}\\).</p> </li> <li> <p>\\( L_{21} = \\{ ''M'' \\mid M \\) is a TM, and \\( M \\) halts on all palindromes \\(\\} \\)</p> Answer <p>\\(L_{21}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684, \u8fd9\u9053\u9898\u5f88\u50cf \\(L_4\\):</p> <p>\u53ef\u4ee5\u8bc1\u660e \\(\\overline{H} \\le L_{21}\\), \u5373 \\(\\overline{H}\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_{21}\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u8ba1\u7b97 \\(|x|\\)</li> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c \\(|x|\\) \u6b65</li> <li>\u5982\u679c \\(|x|\\) \u6b65\u5185\u505c\u673a\uff0c\u5c31\u62d2\u7edd\uff0c\u5426\u5219\u63a5\u53d7</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow M'\\) \u5728\u6240\u6709\u56de\u6587\u4e32\u4e0a\u505c\u673a \\(\\Rightarrow ''M'' \\in L_{21}\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u62d2\u7edd\u6240\u6709 \\(|x| \\ge k\\) \u7684\u4e32 \\(w\\) \\(\\Rightarrow \\exists\\) \u56de\u6587\u4e32 \\(ww^R\\) \u88ab \\(M'\\) \u62d2\u7edd \\(\\Rightarrow ''M'' \\notin L_{21}\\)</li> </ul> </li> <li> <p>\\( L_{22} = \\{ ''M'' \\mid M \\) is a TM, and \\( L(M) \\cap \\{ a^{2^n} \\mid n \\geq 0 \\} \\) is empty \\(\\} \\)</p> Answer <p>\\(L_{22}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684, \u6784\u9020\u7c7b\u4f3c \\(L_2\\), \u8ba9 \\(L(M)\\) \u5206\u522b\u662f \\(\\varnothing\\) \u548c \\(\\Sigma^*\\) \u5206\u7c7b\u8ba8\u8bba.</p> </li> <li> <p>\\( L_{23} = \\{ ''M, k'' \\mid M \\) is a TM, and \\( |\\{ w \\in L(M) : w \\in a^*b^* \\}| \\geq k \\) \\(\\} \\)</p> Answer <p>\\(L_{23}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e: \u6309\u7167\u957f\u5ea6\u679a\u4e3e\u6240\u6709 \\(a^*b^*\\), \u6a21\u62df \\(M\\) \u770b\u5176\u662f\u5426\u63a5\u53d7, \u7edf\u8ba1 \\(L(M)\\) \u4e2d\u7684\u7b26\u5408\u6761\u4ef6\u7684\u4e32\u6570\u76ee\uff0c\u5982\u679c\u5927\u4e8e\u7b49\u4e8e \\(k\\) \u5c31\u63a5\u53d7.</p> <p>\u975e\u9012\u5f52: \u6784\u9020\u7c7b\u4f3c \\(L_2\\).</p> </li> <li> <p>\\( L_{24} = \\{ ''M'' \\mid M \\) is a TM that halts on all inputs and \\( L(M) = L' \\) for some undecidable language \\( L' \\) \\(\\} \\)</p> Answer <p>\\(L_{24}\\) \u662f\u9012\u5f52\u7684\uff0c\u65e2\u7136 \\(M\\) \u5bf9\u6240\u6709\u7684\u8f93\u5165\u90fd\u505c\u673a\uff0c\u90a3\u4e48 \\(L(M)\\) \u662f\u53ef\u5224\u5b9a\u7684\uff0c\u56e0\u6b64 \\(L_{24}=\\varnothing\\).</p> </li> <li> <p>\\( L_{25} = \\{ ''M'' \\mid M \\) is a TM, and \\( M \\) accepts (at least) two strings of different lengths \\(\\} \\)</p> Answer <p>\\(L_{25}\\) \u662f\u9012\u5f52\u53ef\u679a\u4e3e\u975e\u9012\u5f52\u7684.</p> <p>\u9012\u5f52\u53ef\u679a\u4e3e: \u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u534a\u5224\u5b9a, \u5bf9\u4e8e\u8f93\u5165 \\(''M''\\):\u6309\u7167\u957f\u5ea6\u679a\u4e3e\u4e32\uff0c\u5e76\u8bb0\u4f4f\u67d0\u4e2a\u957f\u5ea6\u662f\u5426\u5b58\u5728\u4e00\u4e2a\u4e32\u88ab \\(M\\) \u63a5\u53d7\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u4e0d\u540c\u957f\u5ea6\u7684\u4e32\u88ab\u63a5\u53d7\uff0c\u5c31\u63a5\u53d7.</p> <p>\u975e\u9012\u5f52: \u6784\u9020\u7c7b\u4f3c \\(L_2\\), \u4e5f\u53ef\u7528 Rice's Theorem.</p> </li> <li> <p>\\( L_{26} = \\{ ''M'' \\mid M \\) is a TM such that both \\( L(M) \\) and \\( \\overline{L(M)} \\) are infinite \\(\\} \\)</p> Answer <p>\\(L_{26}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684</p> <p>\u8bc1\u660e \\(\\overline{H} \\le L_{26}\\), \u5373 \\(\\overline{H}\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_{26}\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u8ba1\u7b97 \\(|x|\\)</li> <li>\u5982\u679c \\(|x|\\) \u662f\u5947\u6570\uff0c\u5c31\u63a5\u53d7</li> <li>\u5426\u5219\uff0c\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u5947\u6570\u957f\u5ea6\u7684\u4e32 \\(\\Rightarrow L(M')\\) \u548c \\(\\overline{L(M')}\\) \u90fd\u662f\u65e0\u9650\u7684 \\(\\Rightarrow ''M'\\ '' \\in L_{26}\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow \\overline{L(M')} = \\varnothing\\) \u6709\u9650 \\(\\Rightarrow ''M'\\ '' \\notin L_{26}\\)</li> </ul> </li> <li> <p>\\( L_{27} = \\{ ''M, x, k'' \\mid M \\) is a TM, and \\( M \\) does not halt on \\( x \\) within \\( k \\) steps \\(\\} \\)</p> Answer <p>\\(L_{27}\\) \u662f\u9012\u5f52\u7684\uff0c\u6784\u9020\u56fe\u7075\u673a \\(M'\\) \u6a21\u62df \\(M\\) \u5728 \\(x\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u5728 \\(k\\) \u6b65\u5185\u505c\u673a\uff0c\u5c31\u62d2\u7edd\uff0c\u5426\u5219\u63a5\u53d7.</p> </li> <li> <p>\\( L_{28} = \\{ ''M'' \\mid M \\) is a TM, and \\( |L(M)| \\) is prime \\(\\} \\)</p> Answer <p>\\(L_{28}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684\uff0c\u8bc1\u660e\u7c7b\u4f3c \\(L_2\\) \u7684\u6269\u5c55 \\(|L(M) = 3|\\) \u7684\u60c5\u51b5.</p> <p>\u5982\u679c\u60f3\u5728 \\(|L(M)|\\) \u6709\u9650\u7684\u60c5\u51b5\u4e0b\u6765\u8bc1\u660e\uff0c\u53ef\u4ee5\u6709\u4e0b\u9762\u7684\u6784\u9020:</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u5982\u679c \\(x\\) \u662f \\(\\Sigma^*\\) \u5b57\u5178\u5e8f\u524d \\(3\\) \u4e2a\u4e32, \u63a5\u53d7</li> <li>\u5982\u679c \\(x\\) \u662f\u7b2c \\(4\\) \u4e2a\u4e32\uff0c\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> <li>\u5176\u4ed6\u60c5\u51b5\u76f4\u63a5\u62d2\u7edd</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li> <p>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u524d \\(3\\) \u4e2a\u4e32 \\(\\Rightarrow |L(M')| = 3\\) \u662f\u7d20\u6570 \\(\\Rightarrow ''M'\\ '' \\in L_{28}\\)</p> </li> <li> <p>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u7b2c \\(4\\) \u4e2a\u4e32 \\(\\Rightarrow |L(M')| = 4\\) \u4e0d\u662f\u7d20\u6570 \\(\\Rightarrow ''M'\\ '' \\notin L_{28}\\)</p> </li> </ul> </li> <li> <p>\\( L_{29} = \\{ ''M'' \\mid \\) there exists \\( x \\in \\Sigma^* \\) such that for every \\( y \\in L(M), xy \\notin L(M) \\} \\)</p> Answer <p>\\(L_{29}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684.</p> </li> <li> <p>\\( L_{30} = \\{ ''M'' \\mid \\) there exist \\( x, y \\in \\Sigma^* \\) such that either \\( x \\in L(M) \\) or \\( y \\notin L(M) \\} \\)</p> Answer <p>\\(L_{30}\\) \u662f\u9012\u5f52\u7684, \\(L_{30}\\) \u662f\u5168\u90e8\u56fe\u7075\u673a\u7f16\u7801\u7684\u96c6\u5408. \u53d6 \\(x=y\\), \u597d\u8bdd\u574f\u8bdd\u5168\u8ba9\u5b83\u8bf4\u4e86.</p> <p>\u6269\u5c55:</p> <p>\u4fee\u6539\u4e3a \\(L = \\{ '' M '' \\mid M\\) is a TM, and there exist \\(x, y \\in \\Sigma^*\\) such that \\(x \\in L(M)\\) and \\(y \\notin L(M)\\}\\).</p> <p>\u6b64\u65f6\u53d8\u4e3a\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684, \u8bc1\u660e \\(\\overline{H} \\le L\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M'\\ ''\\), \\(M'\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u5982\u679c \\(x=\\varepsilon\\), \u63a5\u53d7</li> <li>\u5426\u5219\uff0c\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u62d2\u7edd\uff0c\u5426\u5219\u63a5\u53d7</li> </ol> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M'\\) \u53ea\u63a5\u53d7 \\(\\varepsilon\\) \\(\\Rightarrow \\exists x = \\varepsilon, y = a, \\varepsilon \\in L(M)\\) and \\(a \\notin L(M) \\Rightarrow ''M'\\ '' \\in L\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M'\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow \\notexists y \\in \\Sigma^*\\), \\(y \\notin L(M) \\Rightarrow ''M'\\ '' \\notin L\\)</li> </ul> </li> <li> <p>\\( L_{31} = \\{ ''M'' \\mid \\) there exists a TM \\( M'\\) such that \\( ''M'' \\neq ''M'\\ '' \\) and \\( L(M) = L(M') \\} \\)</p> Answer <p>\\(L_{31}\\) \u662f\u9012\u5f52\u7684\uff0c\\(L_{31} = \\overline{L__{17}}\\).</p> </li> <li> <p>\\( L_{32} = \\{ ''M_1, M_2'' \\mid L(M_1) \\leq_m L(M_2) \\} \\)</p> </li> <li> <p>\\( L_{33} = \\{ ''M'' \\mid M \\) does not accept any string \\( w \\) such that 001 is a prefix of \\( w \\) \\(\\} \\)</p> Answer <p>\\(L_{33}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684. \u89c4\u7ea6\u7c7b\u4f3c \\(L_2\\).</p> </li> <li> <p>\\( L_{34} = \\{ ''M, x'' \\mid M \\) does not accept any string \\( w \\) such that \\( x \\) is a prefix of \\( w \\) \\(\\} \\)</p> Answer <p>\\(L_{34}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684. \u540c\u6837\u5730, \u89c4\u7ea6\u7c7b\u4f3c \\(L_2\\).</p> </li> <li> <p>\\( L_{35} = \\{ ''M, x'' \\mid x \\) is a prefix of \\( ''M'' \\) \\(\\} \\)</p> Answer <p>\\(L_{35}\\) \u662f\u9012\u5f52\u7684\uff0c\u6784\u9020\u56fe\u7075\u673a \\(M\\) \u76f4\u63a5\u5224\u65ad \\(x\\) \u662f\u5426\u4e3a \\(''M''\\) \u524d\u7f00\u5373\u53ef.</p> </li> <li> <p>\\( L_{36} = \\{ ''M_1, M_2, M_3'' \\mid L(M_1) = L(M_2) \\cup L(M_3) \\} \\)</p> Answer <p>\\(L_{36}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684.</p> <p>\u8bc1\u660e \\(\\overline{H} \\le L_{36}\\), \u5373 \\(\\overline{H}\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_{36}\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M_1, M_2, M_3''\\), \\(M_1\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\\(M_2\\) \u548c \\(M_3\\) \u62d2\u7edd\u6240\u6709\u4e32.</p> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li> <p>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M_1\\) \u62d2\u7edd\u4efb\u4f55\u8f93\u5165 \\(\\Rightarrow L(M_1) = \\varnothing = L(M_2) \\cup L(M_3) \\Rightarrow ''M_1, M_2, M_3'' \\in L_{36}\\)</p> </li> <li> <p>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M_1\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow L(M_1) = \\Sigma^* \\neq L(M_2) \\cup L(M_3) \\Rightarrow ''M_1, M_2, M_3'' \\notin L_{36}\\)</p> </li> </ul> </li> <li> <p>\\( L_{37} = \\{ ''M_1, M_2, M_3'' \\mid L(M_1) \\subseteq L(M_2) \\cup L(M_3) \\} \\)</p> Answer <p>\\(L_{37}\\) \u662f\u975e\u9012\u5f52\u53ef\u679a\u4e3e\u7684. \u7c7b\u4f3c \\(L_36\\) \u7684\u8bc1\u660e, \u5982\u679c\u975e\u8981\u771f\u5b50\u96c6\u7684\u8bdd\uff0c\u5c31\u6539\u4e00\u4e0b \\(M_2\\) \u8ba9\u5b83\u63a5\u53d7\u4e00\u4e2a\u4e32\u5c31\u884c:</p> <p>\u8bc1\u660e \\(\\overline{H} \\le L_{37}\\), \u5373 \\(\\overline{H}\\) \u53ef\u4ee5\u5f52\u7ea6\u5230 \\(L_{37}\\).</p> <p>\u5bf9\u4e8e \\(\\overline{H}\\) \u95ee\u9898\u7684\u8f93\u5165 \\(''Mw''\\), \u6620\u5c04 \\(\\tau(''Mw'') = ''M_1, M_2, M_3''\\), \\(M_1\\) \u5bf9\u4e8e\u8f93\u5165 \\(x\\):</p> <ol> <li>\u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a\u7684\u8fd0\u884c\uff0c\u5982\u679c\u505c\u673a\u5c31\u63a5\u53d7\uff0c\u5426\u5219\u62d2\u7edd</li> </ol> <p>\\(M_2\\) \u53ea\u63a5\u53d7 \\(\\Sigma^*\\) \u7684\u7b2c\u4e00\u4e2a\u4e32, \\(M_3\\) \u62d2\u7edd\u6240\u6709\u4e32.</p> <p>\u89c4\u7ea6\u7684\u8bc1\u660e:</p> <ul> <li>\\(''Mw'' \\in \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u4e0d\u505c\u673a \\(\\Rightarrow M_1\\) \u62d2\u7edd\u4efb\u4f55\u8f93\u5165 \\(\\Rightarrow L(M_1) = \\varnothing \\subseteq L(M_2) \\cup L(M_3) \\Rightarrow ''M_1, M_2, M_3'' \\in L_{37}\\)</li> <li>\\(''Mw'' \\notin \\overline{H} \\Rightarrow M\\) \u5728 \\(w\\) \u4e0a\u505c\u673a \\(\\Rightarrow M_1\\) \u63a5\u53d7\u6240\u6709\u4e32 \\(\\Rightarrow L(M_1) = \\Sigma^* \\not\\subseteq L(M_2) \\cup L(M_3) \\Rightarrow ''M_1, M_2, M_3'' \\notin L_{37}\\)</li> </ul> </li> <li> <p>\\( L_{38} = \\{ ''M_1'' \\mid \\) there exist two TMs \\( M_2 \\) and \\( M_3 \\) such that \\( L(M_1) \\subseteq L(M_2) \\cup L(M_3) \\} \\)</p> Answer <p>\\(L_{38}\\) \u662f\u9012\u5f52\u7684\uff0c\\(L_{38}\\) \u662f\u5168\u90e8\u56fe\u7075\u673a\u7f16\u7801\u7684\u96c6\u5408. \u53d6 \\(M_2\\) \u548c \\(M_3\\) \u63a5\u53d7\u6240\u6709\u7684\u4e32.</p> </li> <li> <p>\\( L_{39} = \\{ ''M, w'' \\mid M \\) is a TM that accepts \\( w \\) using at most \\( 2^{|w|} \\) squares of its tape \\(\\} \\)</p> Answer <p>\\(L_{39}\\) \u662f\u9012\u5f52\u7684</p> <p>\u6211\u4eec\u7684\u601d\u8def\u662f\uff0c\u6211\u4eec\u4e00\u5b9a\u80fd\u591f\u5728\u6709\u9650\u6b65\u5185\u5224\u65ad\u51fa \\(M\\) \u662f\u5426\u6700\u591a\u4f7f\u7528 \\(2^{|w|}\\) \u4e2a\u65b9\u683c\u5c31\u80fd\u63a5\u53d7 \\(w\\).</p> <p>\u8bb0 \\(M\\) \u7684\u72b6\u6001\u6570\u4e3a \\(m\\), \u5b57\u6bcd\u8868\u5927\u5c0f\u4e3a \\(k\\), \u8bb0 \\(r=|w|\\). \u5982\u679c \\(M\\) \u7528\u4e86\u81f3\u591a \\(2^r\\) \u4e2a\u65b9\u683c\uff0c\u90a3\u4e48 \\(M\\) \u81f3\u591a\u6709 \\(\\alpha = mk^{2^r}2^r\\) \u79cd\u683c\u5c40 (\u679a\u4e3e\u72b6\u6001\uff0c\u5e26\u5b50\u5185\u5bb9\uff0c\u5e26\u5934\u4f4d\u7f6e).</p> <p>\u5982\u679c \\(M\\) \u5728 \\(w\\) \u4e0a\u8fd0\u884c\u4e86\u8d85\u8fc7 \\(\\alpha\\) \u6b65\uff0c\u800c\u4e14\u5b83\u6ca1\u6709\u4f7f\u7528\u8d85\u8fc7 \\(2^r\\) \u4e2a\u65b9\u683c\uff0c\u90a3\u4e48\u6839\u636e\u9e3d\u5de2\u539f\u7406\uff0c\u5b83\u7684\u683c\u5c40\u4e00\u5b9a\u4e0e\u4e4b\u524d\u7684\u67d0\u4e2a\u683c\u5c40\u76f8\u540c\uff0c\u4e5f\u5c31\u662f\u9677\u5165\u4e86\u6b7b\u5faa\u73af.</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6784\u9020\u56fe\u7075\u673a \\(M^*\\), \u6a21\u62df \\(M\\) \u5728 \\(w\\) \u4e0a \\(\\alpha + 1\\) \u6b65\uff0c\u5982\u679c \\(M\\) \u5728 \\(\\alpha\\) \u6b65\u5185\u63a5\u53d7\uff0c\u90a3\u4e48 \\(M^*\\) \u63a5\u53d7, \u5982\u679c\u62d2\u7edd\uff0c\\(M^*\\) \u62d2\u7edd. \u5982\u679c \\(M\\) \u4f7f\u7528\u4e86\u8d85\u8fc7 \\(2^r\\) \u4e2a\u65b9\u683c\uff0c\u6216\u8005\u5230 \\(\\alpha +1\\) \u6b65\u8fd8\u6ca1\u6709\u505c\u673a\uff0c\u4e5f\u62d2\u7edd.</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4f7f\u7528 \\(M^*\\) \u5224\u5b9a\u4e86 \\(L_{39}\\).</p> </li> </ol>"},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/foss/","title":"FOSS","text":""},{"location":"blog/category/x86/","title":"x86","text":""},{"location":"blog/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%BD%93%E7%B3%BB%E7%BB%93%E6%9E%84/","title":"\u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"blog/category/%E5%AF%86%E7%A0%81%E5%AD%A6/","title":"\u5bc6\u7801\u5b66","text":""},{"location":"blog/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A7%91%E5%AD%A6/","title":"\u8ba1\u7b97\u673a\u79d1\u5b66","text":""},{"location":"","title":"Welcome!","text":"\ud83c\udf89 \u606d\u559c! \u73b0\u5728\u4f60\u662f\u4e00\u4f4d Linux \u7528\u6237\u4e86! <p>\u8fd9\u662f\u4f7f\u7528 copy/v86 \u9879\u76ee\u8fd0\u884c\u7684 Linux 6.8.12 \u5185\u6838, \u4f7f\u7528 Web Assembly \u6280\u672f\u5728\u4f60\u7684\u6d4f\u89c8\u5668\u4e0a\u8fd0\u884c\u4e86\u4e00\u4e2a\u865a\u62df\u673a, \u5e76\u542f\u52a8\u4e86\u6781\u7b80\u7684 Buildroot \u73af\u5883.</p> <p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u5c1d\u8bd5 Linux \u5e38\u7528\u7684\u547d\u4ee4, \u4f8b\u5982 <code>ls</code>, <code>cd</code>, <code>cat</code>, <code>echo</code>, <code>pwd</code>, <code>uname</code>, <code>date</code>, <code>top</code>, <code>ps</code>, <code>clear</code>, <code>exit</code>.</p>"}]}